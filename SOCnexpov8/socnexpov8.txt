/home/jfdava/.apio
[Sat Aug 19 22:53:08 2023] Processing icefun
--------------------------------------------------------------------------------
yosys -p "synth_ice40 -json hardware.json" ControladorMatrizLed.v SOCnexpoV8_.v uart.v

/----------------------------------------------------------------------------\
|                                                                            |
|  yosys -- Yosys Open SYnthesis Suite                                       |
|                                                                            |
|  Copyright (C) 2012 - 2019  Clifford Wolf <clifford@clifford.at>           |
|                                                                            |
|  Permission to use, copy, modify, and/or distribute this software for any  |
|  purpose with or without fee is hereby granted, provided that the above    |
|  copyright notice and this permission notice appear in all copies.         |
|                                                                            |
|  THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES  |
|  WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF          |
|  MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR   |
|  ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES    |
|  WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN     |
|  ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF   |
|  OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.            |
|                                                                            |
\----------------------------------------------------------------------------/

Yosys 0.9+932 (git sha1 UNKNOWN, i686-linux-gnu-g++ 7.3.0-16ubuntu3 -O3 -DNDEBUG)


-- Parsing `ControladorMatrizLed.v' using frontend `verilog' --

1. Executing Verilog-2005 frontend: ControladorMatrizLed.v
Parsing Verilog input from `ControladorMatrizLed.v' to AST representation.
Generating RTLIL representation for module `\ControladorMatrizLed'.
Successfully finished Verilog frontend.

-- Parsing `SOCnexpoV8_.v' using frontend `verilog' --

2. Executing Verilog-2005 frontend: SOCnexpoV8_.v
Parsing Verilog input from `SOCnexpoV8_.v' to AST representation.
Generating RTLIL representation for module `\registros'.
Generating RTLIL representation for module `\ALU'.
Generating RTLIL representation for module `\StoretoMEM'.
Generating RTLIL representation for module `\LoadfromMEM'.
Generating RTLIL representation for module `\RV32nexpo'.
Generating RTLIL representation for module `\SOCnexpo'.
Generating RTLIL representation for module `\memory'.
Successfully finished Verilog frontend.

-- Parsing `uart.v' using frontend `verilog' --

3. Executing Verilog-2005 frontend: uart.v
Parsing Verilog input from `uart.v' to AST representation.
Generating RTLIL representation for module `\BaudClock'.
Generating RTLIL representation for module `\serialTX'.
Generating RTLIL representation for module `\serialRX'.
Successfully finished Verilog frontend.

-- Running command `synth_ice40 -json hardware.json' --

4. Executing SYNTH_ICE40 pass.

4.1. Executing Verilog-2005 frontend: /home/jfdava/.apio/packages/toolchain-yosys/bin/../share/yosys/ice40/cells_sim.v
Parsing Verilog input from `/home/jfdava/.apio/packages/toolchain-yosys/bin/../share/yosys/ice40/cells_sim.v' to AST representation.
Generating RTLIL representation for module `\SB_IO'.
Generating RTLIL representation for module `\SB_GB_IO'.
Generating RTLIL representation for module `\SB_GB'.
Generating RTLIL representation for module `\SB_LUT4'.
Generating RTLIL representation for module `\SB_CARRY'.
Generating RTLIL representation for module `\SB_DFF'.
Generating RTLIL representation for module `\SB_DFFE'.
Generating RTLIL representation for module `\SB_DFFSR'.
Generating RTLIL representation for module `\SB_DFFR'.
Generating RTLIL representation for module `\SB_DFFSS'.
Generating RTLIL representation for module `\SB_DFFS'.
Generating RTLIL representation for module `\SB_DFFESR'.
Generating RTLIL representation for module `\SB_DFFER'.
Generating RTLIL representation for module `\SB_DFFESS'.
Generating RTLIL representation for module `\SB_DFFES'.
Generating RTLIL representation for module `\SB_DFFN'.
Generating RTLIL representation for module `\SB_DFFNE'.
Generating RTLIL representation for module `\SB_DFFNSR'.
Generating RTLIL representation for module `\SB_DFFNR'.
Generating RTLIL representation for module `\SB_DFFNSS'.
Generating RTLIL representation for module `\SB_DFFNS'.
Generating RTLIL representation for module `\SB_DFFNESR'.
Generating RTLIL representation for module `\SB_DFFNER'.
Generating RTLIL representation for module `\SB_DFFNESS'.
Generating RTLIL representation for module `\SB_DFFNES'.
Generating RTLIL representation for module `\SB_RAM40_4K'.
Generating RTLIL representation for module `\SB_RAM40_4KNR'.
Generating RTLIL representation for module `\SB_RAM40_4KNW'.
Generating RTLIL representation for module `\SB_RAM40_4KNRNW'.
Generating RTLIL representation for module `\ICESTORM_LC'.
Generating RTLIL representation for module `\SB_PLL40_CORE'.
Generating RTLIL representation for module `\SB_PLL40_PAD'.
Generating RTLIL representation for module `\SB_PLL40_2_PAD'.
Generating RTLIL representation for module `\SB_PLL40_2F_CORE'.
Generating RTLIL representation for module `\SB_PLL40_2F_PAD'.
Generating RTLIL representation for module `\SB_WARMBOOT'.
Generating RTLIL representation for module `\SB_SPRAM256KA'.
Generating RTLIL representation for module `\SB_HFOSC'.
Generating RTLIL representation for module `\SB_LFOSC'.
Generating RTLIL representation for module `\SB_RGBA_DRV'.
Generating RTLIL representation for module `\SB_LED_DRV_CUR'.
Generating RTLIL representation for module `\SB_RGB_DRV'.
Generating RTLIL representation for module `\SB_I2C'.
Generating RTLIL representation for module `\SB_SPI'.
Generating RTLIL representation for module `\SB_LEDDA_IP'.
Generating RTLIL representation for module `\SB_FILTER_50NS'.
Generating RTLIL representation for module `\SB_IO_I3C'.
Generating RTLIL representation for module `\SB_IO_OD'.
Generating RTLIL representation for module `\SB_MAC16'.
Generating RTLIL representation for module `\ICESTORM_RAM'.
Successfully finished Verilog frontend.

4.2. Executing HIERARCHY pass (managing design hierarchy).

4.2.1. Analyzing design hierarchy..
Top module:  \SOCnexpo
Used module:     \serialRX
Used module:         \BaudClock
Used module:     \serialTX
Used module:     \ControladorMatrizLed
Used module:     \memory
Used module:     \RV32nexpo
Used module:         \LoadfromMEM
Used module:         \StoretoMEM
Used module:         \ALU
Used module:         \registros
Parameter \TAM = 2048

4.2.2. Executing AST frontend in derive mode using pre-parsed AST for module `\memory'.
Parameter \TAM = 2048
Generating RTLIL representation for module `$paramod\memory\TAM=2048'.
Parameter 1 (\BAUD) = 115200

4.2.3. Executing AST frontend in derive mode using pre-parsed AST for module `\BaudClock'.
Parameter 1 (\BAUD) = 115200
Generating RTLIL representation for module `$paramod\BaudClock\BAUD=115200'.
Parameter 1 (\BAUD) = 115200
Found cached RTLIL representation for module `$paramod\BaudClock\BAUD=115200'.

4.2.4. Analyzing design hierarchy..
Top module:  \SOCnexpo
Used module:     \serialRX
Used module:         $paramod\BaudClock\BAUD=115200
Used module:     \serialTX
Used module:     \ControladorMatrizLed
Used module:     $paramod\memory\TAM=2048
Used module:     \RV32nexpo
Used module:         \LoadfromMEM
Used module:         \StoretoMEM
Used module:         \ALU
Used module:         \registros

4.2.5. Analyzing design hierarchy..
Top module:  \SOCnexpo
Used module:     \serialRX
Used module:         $paramod\BaudClock\BAUD=115200
Used module:     \serialTX
Used module:     \ControladorMatrizLed
Used module:     $paramod\memory\TAM=2048
Used module:     \RV32nexpo
Used module:         \LoadfromMEM
Used module:         \StoretoMEM
Used module:         \ALU
Used module:         \registros
Removing unused module `\BaudClock'.
Removing unused module `\memory'.
Removed 2 unused modules.

4.3. Executing PROC pass (convert processes to netlists).

4.3.1. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Removing empty process `$paramod\memory\TAM=2048.$proc$SOCnexpoV8_.v:257$599'.
Removing empty process `SOCnexpo.$proc$SOCnexpoV8_.v:41$360'.
Cleaned up 0 empty switches.

4.3.2. Executing PROC_RMDEAD pass (remove dead branches from decision trees).
Marked 1 switch rules as full_case in process $proc$uart.v:202$427 in module serialRX.
Marked 1 switch rules as full_case in process $proc$uart.v:169$421 in module serialRX.
Marked 1 switch rules as full_case in process $proc$uart.v:156$420 in module serialRX.
Marked 1 switch rules as full_case in process $proc$uart.v:94$405 in module serialTX.
Marked 1 switch rules as full_case in process $proc$uart.v:81$403 in module serialTX.
Marked 1 switch rules as full_case in process $proc$uart.v:72$402 in module serialTX.
Marked 1 switch rules as full_case in process $proc$uart.v:35$602 in module $paramod\BaudClock\BAUD=115200.
Marked 2 switch rules as full_case in process $proc$SOCnexpoV8_.v:209$355 in module SOCnexpo.
Marked 2 switch rules as full_case in process $proc$SOCnexpoV8_.v:187$354 in module SOCnexpo.
Marked 1 switch rules as full_case in process $proc$SOCnexpoV8_.v:150$352 in module SOCnexpo.
Marked 3 switch rules as full_case in process $proc$SOCnexpoV8_.v:129$351 in module SOCnexpo.
Removed 1 dead cases from process $proc$SOCnexpoV8_.v:83$343 in module SOCnexpo.
Marked 1 switch rules as full_case in process $proc$SOCnexpoV8_.v:83$343 in module SOCnexpo.
Marked 1 switch rules as full_case in process $proc$Procesador_V2.0b/RV32nexpo.v:478$319 in module RV32nexpo.
Marked 1 switch rules as full_case in process $proc$Procesador_V2.0b/RV32nexpo.v:469$317 in module RV32nexpo.
Marked 1 switch rules as full_case in process $proc$Procesador_V2.0b/RV32nexpo.v:387$308 in module RV32nexpo.
Marked 2 switch rules as full_case in process $proc$Procesador_V2.0b/RV32nexpo.v:197$288 in module RV32nexpo.
Marked 1 switch rules as full_case in process $proc$Procesador_V2.0b/RV32nexpo.v:167$285 in module RV32nexpo.
Marked 1 switch rules as full_case in process $proc$Procesador_V2.0b/RV32nexpo.v:104$267 in module RV32nexpo.
Marked 1 switch rules as full_case in process $proc$Procesador_V2.0b/RV32nexpo.v:58$264 in module RV32nexpo.
Marked 2 switch rules as full_case in process $proc$ControladorMatrizLed.v:41$4 in module ControladorMatrizLed.
Marked 1 switch rules as full_case in process $proc$ControladorMatrizLed.v:24$1 in module ControladorMatrizLed.
Removed a total of 1 dead cases.

4.3.3. Executing PROC_PRUNE pass (remove redundant assignments in processes).
Removed 9 redundant assignments.
Promoted 162 assignments to connections.

4.3.4. Executing PROC_INIT pass (extract init attributes).
Found init rule in `\serialRX.$proc$uart.v:226$440'.
Set init value: \rcv = 1'0
Found init rule in `\serialRX.$proc$uart.v:219$439'.
Set init value: \data = 8'00000000
Found init rule in `\serialRX.$proc$uart.v:201$438'.
Set init value: \cont = 5'00000
Found init rule in `\serialRX.$proc$uart.v:190$437'.
Set init value: \sr = 9'000000000
Found init rule in `\serialRX.$proc$uart.v:167$436'.
Set init value: \div2counter = 7'0000000
Found init rule in `\serialRX.$proc$uart.v:154$435'.
Set init value: \state = 1'0
Found init rule in `\serialRX.$proc$uart.v:146$434'.
Set init value: \q_t0 = 1'0
Found init rule in `\serialTX.$proc$uart.v:107$414'.
Set init value: \done = 1'0
Found init rule in `\serialTX.$proc$uart.v:93$413'.
Set init value: \bits = 4'0000
Found init rule in `\serialTX.$proc$uart.v:88$412'.
Set init value: \TX = 1'1
Found init rule in `\serialTX.$proc$uart.v:80$411'.
Set init value: \q = 9'111111111
Found init rule in `\serialTX.$proc$uart.v:64$410'.
Set init value: \q_re = 1'0
Found init rule in `\serialTX.$proc$uart.v:55$409'.
Set init value: \state = 1'0
Found init rule in `$paramod\BaudClock\BAUD=115200.$proc$uart.v:29$605'.
Set init value: \divcounter = 7'0000000
Found init rule in `\SOCnexpo.$proc$SOCnexpoV8_.v:149$361'.
Set init value: \leds_en = 1'1
Found init rule in `\SOCnexpo.$proc$SOCnexpoV8_.v:27$359'.
Set init value: \Espera = 8'00000000
Found init rule in `\SOCnexpo.$proc$SOCnexpoV8_.v:26$358'.
Set init value: \rst = 1'1
Found init rule in `\RV32nexpo.$proc$Procesador_V2.0b/RV32nexpo.v:122$324'.
Set init value: \FD_nop = 1'1
Found init rule in `\RV32nexpo.$proc$Procesador_V2.0b/RV32nexpo.v:96$323'.
Set init value: \F_pc = 0
Set init value: \FD_pc = 0
Found init rule in `\ControladorMatrizLed.$proc$ControladorMatrizLed.v:23$12'.
Set init value: \timer = 12'000000000000

4.3.5. Executing PROC_ARST pass (detect async resets in processes).

4.3.6. Executing PROC_MUX pass (convert decision trees to multiplexers).
Creating decoders for process `\serialRX.$proc$uart.v:226$440'.
Creating decoders for process `\serialRX.$proc$uart.v:219$439'.
Creating decoders for process `\serialRX.$proc$uart.v:201$438'.
Creating decoders for process `\serialRX.$proc$uart.v:190$437'.
Creating decoders for process `\serialRX.$proc$uart.v:167$436'.
Creating decoders for process `\serialRX.$proc$uart.v:154$435'.
Creating decoders for process `\serialRX.$proc$uart.v:146$434'.
Creating decoders for process `\serialRX.$proc$uart.v:227$433'.
Creating decoders for process `\serialRX.$proc$uart.v:221$432'.
1/1: $0\data[7:0]
Creating decoders for process `\serialRX.$proc$uart.v:202$427'.
1/1: $0\cont[4:0]
Creating decoders for process `\serialRX.$proc$uart.v:191$425'.
1/1: $0\sr[8:0]
Creating decoders for process `\serialRX.$proc$uart.v:169$421'.
1/1: $0\div2counter[6:0]
Creating decoders for process `\serialRX.$proc$uart.v:156$420'.
1/1: $0\state[0:0]
Creating decoders for process `\serialRX.$proc$uart.v:147$417'.
Creating decoders for process `\serialRX.$proc$uart.v:142$416'.
Creating decoders for process `\serialRX.$proc$uart.v:139$415'.
Creating decoders for process `\serialTX.$proc$uart.v:107$414'.
Creating decoders for process `\serialTX.$proc$uart.v:93$413'.
Creating decoders for process `\serialTX.$proc$uart.v:88$412'.
Creating decoders for process `\serialTX.$proc$uart.v:80$411'.
Creating decoders for process `\serialTX.$proc$uart.v:64$410'.
Creating decoders for process `\serialTX.$proc$uart.v:55$409'.
Creating decoders for process `\serialTX.$proc$uart.v:108$408'.
Creating decoders for process `\serialTX.$proc$uart.v:94$405'.
1/1: $0\bits[3:0]
Creating decoders for process `\serialTX.$proc$uart.v:89$404'.
Creating decoders for process `\serialTX.$proc$uart.v:81$403'.
1/1: $0\q[8:0]
Creating decoders for process `\serialTX.$proc$uart.v:72$402'.
1/1: $0\state[0:0]
Creating decoders for process `\serialTX.$proc$uart.v:66$399'.
Creating decoders for process `$paramod\BaudClock\BAUD=115200.$proc$uart.v:29$605'.
Creating decoders for process `$paramod\BaudClock\BAUD=115200.$proc$uart.v:35$602'.
1/1: $0\divcounter[6:0]
Creating decoders for process `$paramod\memory\TAM=2048.$proc$SOCnexpoV8_.v:261$580'.
1/12: $0$memwr$\memArray$SOCnexpoV8_.v:263$569_EN[31:0]$583
2/12: $0$memwr$\memArray$SOCnexpoV8_.v:263$569_DATA[31:0]$582
3/12: $0$memwr$\memArray$SOCnexpoV8_.v:263$569_ADDR[10:0]$581
4/12: $0$memwr$\memArray$SOCnexpoV8_.v:264$570_EN[31:0]$586
5/12: $0$memwr$\memArray$SOCnexpoV8_.v:264$570_DATA[31:0]$585
6/12: $0$memwr$\memArray$SOCnexpoV8_.v:264$570_ADDR[10:0]$584
7/12: $0$memwr$\memArray$SOCnexpoV8_.v:265$571_EN[31:0]$589
8/12: $0$memwr$\memArray$SOCnexpoV8_.v:265$571_DATA[31:0]$588
9/12: $0$memwr$\memArray$SOCnexpoV8_.v:265$571_ADDR[10:0]$587
10/12: $0$memwr$\memArray$SOCnexpoV8_.v:266$572_EN[31:0]$592
11/12: $0$memwr$\memArray$SOCnexpoV8_.v:266$572_DATA[31:0]$591
12/12: $0$memwr$\memArray$SOCnexpoV8_.v:266$572_ADDR[10:0]$590
Creating decoders for process `\SOCnexpo.$proc$SOCnexpoV8_.v:149$361'.
Creating decoders for process `\SOCnexpo.$proc$SOCnexpoV8_.v:27$359'.
Creating decoders for process `\SOCnexpo.$proc$SOCnexpoV8_.v:26$358'.
Creating decoders for process `\SOCnexpo.$proc$SOCnexpoV8_.v:209$355'.
1/1: $0\rx_readed[0:0]
Creating decoders for process `\SOCnexpo.$proc$SOCnexpoV8_.v:187$354'.
1/1: $0\tx_ready[0:0]
Creating decoders for process `\SOCnexpo.$proc$SOCnexpoV8_.v:150$352'.
1/1: $0\leds_en[0:0]
Creating decoders for process `\SOCnexpo.$proc$SOCnexpoV8_.v:129$351'.
1/4: $0\leds4[7:0]
2/4: $0\leds1[7:0]
3/4: $0\leds3[7:0]
4/4: $0\leds2[7:0]
Creating decoders for process `\SOCnexpo.$proc$SOCnexpoV8_.v:83$343'.
1/1: $1\palabra[31:0]
Creating decoders for process `\SOCnexpo.$proc$SOCnexpoV8_.v:46$329'.
Creating decoders for process `\SOCnexpo.$proc$SOCnexpoV8_.v:30$327'.
1/1: $0\rst[0:0]
Creating decoders for process `\SOCnexpo.$proc$SOCnexpoV8_.v:28$325'.
Creating decoders for process `\RV32nexpo.$proc$Procesador_V2.0b/RV32nexpo.v:122$324'.
Creating decoders for process `\RV32nexpo.$proc$Procesador_V2.0b/RV32nexpo.v:96$323'.
Creating decoders for process `\RV32nexpo.$proc$Procesador_V2.0b/RV32nexpo.v:478$319'.
1/2: $0\instret[63:0]
2/2: $0\cycle[63:0]
Creating decoders for process `\RV32nexpo.$proc$Procesador_V2.0b/RV32nexpo.v:469$317'.
1/1: $0\PWM_[31:0]
Creating decoders for process `\RV32nexpo.$proc$Procesador_V2.0b/RV32nexpo.v:429$314'.
Creating decoders for process `\RV32nexpo.$proc$Procesador_V2.0b/RV32nexpo.v:387$308'.
1/1: $1\M_CSRData[31:0]
Creating decoders for process `\RV32nexpo.$proc$Procesador_V2.0b/RV32nexpo.v:350$305'.
Creating decoders for process `\RV32nexpo.$proc$Procesador_V2.0b/RV32nexpo.v:279$295'.
Creating decoders for process `\RV32nexpo.$proc$Procesador_V2.0b/RV32nexpo.v:197$288'.
1/12: $2\D_CSRRead[0:0]
2/12: $2\D_CSRWrite[0:0]
3/12: $1\D_RegWrite[0:0]
4/12: $1\D_ALUSrc2[0:0]
5/12: $1\D_ALUFun[0:0]
6/12: $1\D_halt[0:0]
7/12: $1\D_error[0:0]
8/12: $1\D_CSRRead[0:0]
9/12: $1\D_CSRWrite[0:0]
10/12: $1\D_funQual[0:0]
11/12: $1\D_MemtoReg[0:0]
12/12: $1\D_ALUSrc1[0:0]
Creating decoders for process `\RV32nexpo.$proc$Procesador_V2.0b/RV32nexpo.v:167$285'.
1/1: $1\D_imm[31:0]
Creating decoders for process `\RV32nexpo.$proc$Procesador_V2.0b/RV32nexpo.v:104$267'.
1/3: $0\FD_nop[0:0]
2/3: $0\FD_pc[31:0]
3/3: $0\F_pc[31:0]
Creating decoders for process `\RV32nexpo.$proc$Procesador_V2.0b/RV32nexpo.v:63$265'.
Creating decoders for process `\RV32nexpo.$proc$Procesador_V2.0b/RV32nexpo.v:58$264'.
1/1: $0\state[2:0]
Creating decoders for process `\ALU.$proc$Procesador_V2.0b/ALU.v:22$241'.
Creating decoders for process `\ALU.$proc$Procesador_V2.0b/ALU.v:67$226'.
Creating decoders for process `\ALU.$proc$Procesador_V2.0b/ALU.v:54$197'.
Creating decoders for process `\registros.$proc$Procesador_V2.0b/registros_32.v:28$119'.
Creating decoders for process `\registros.$proc$Procesador_V2.0b/registros_32.v:41$80'.
1/3: $0$memwr$\WORKREG$Procesador_V2.0b/registros_32.v:43$77_EN[31:0]$83
2/3: $0$memwr$\WORKREG$Procesador_V2.0b/registros_32.v:43$77_DATA[31:0]$82
3/3: $0$memwr$\WORKREG$Procesador_V2.0b/registros_32.v:43$77_ADDR[4:0]$81
Creating decoders for process `\ControladorMatrizLed.$proc$ControladorMatrizLed.v:23$12'.
Creating decoders for process `\ControladorMatrizLed.$proc$ControladorMatrizLed.v:21$11'.
Creating decoders for process `\ControladorMatrizLed.$proc$ControladorMatrizLed.v:41$4'.
1/2: $0\row[7:0]
2/2: $0\act_row[3:0]
Creating decoders for process `\ControladorMatrizLed.$proc$ControladorMatrizLed.v:24$1'.
1/1: $1\timer[11:0]

4.3.7. Executing PROC_DLATCH pass (convert process syncs to latches).
No latch inferred for signal `\SOCnexpo.\palabra' from process `\SOCnexpo.$proc$SOCnexpoV8_.v:83$343'.
No latch inferred for signal `\RV32nexpo.\M_CSRData' from process `\RV32nexpo.$proc$Procesador_V2.0b/RV32nexpo.v:387$308'.
No latch inferred for signal `\RV32nexpo.\D_RegWrite' from process `\RV32nexpo.$proc$Procesador_V2.0b/RV32nexpo.v:197$288'.
No latch inferred for signal `\RV32nexpo.\D_ALUSrc1' from process `\RV32nexpo.$proc$Procesador_V2.0b/RV32nexpo.v:197$288'.
No latch inferred for signal `\RV32nexpo.\D_ALUSrc2' from process `\RV32nexpo.$proc$Procesador_V2.0b/RV32nexpo.v:197$288'.
No latch inferred for signal `\RV32nexpo.\D_funQual' from process `\RV32nexpo.$proc$Procesador_V2.0b/RV32nexpo.v:197$288'.
No latch inferred for signal `\RV32nexpo.\D_CSRWrite' from process `\RV32nexpo.$proc$Procesador_V2.0b/RV32nexpo.v:197$288'.
No latch inferred for signal `\RV32nexpo.\D_CSRRead' from process `\RV32nexpo.$proc$Procesador_V2.0b/RV32nexpo.v:197$288'.
No latch inferred for signal `\RV32nexpo.\D_error' from process `\RV32nexpo.$proc$Procesador_V2.0b/RV32nexpo.v:197$288'.
No latch inferred for signal `\RV32nexpo.\D_halt' from process `\RV32nexpo.$proc$Procesador_V2.0b/RV32nexpo.v:197$288'.
No latch inferred for signal `\RV32nexpo.\D_ALUFun' from process `\RV32nexpo.$proc$Procesador_V2.0b/RV32nexpo.v:197$288'.
Latch inferred for signal `\RV32nexpo.\D_MemtoReg' from process `\RV32nexpo.$proc$Procesador_V2.0b/RV32nexpo.v:197$288': $auto$proc_dlatch.cc:417:proc_dlatch$1248
No latch inferred for signal `\RV32nexpo.\D_imm' from process `\RV32nexpo.$proc$Procesador_V2.0b/RV32nexpo.v:167$285'.
No latch inferred for signal `\RV32nexpo.\nextState' from process `\RV32nexpo.$proc$Procesador_V2.0b/RV32nexpo.v:63$265'.
No latch inferred for signal `\RV32nexpo.\loadpcNext' from process `\RV32nexpo.$proc$Procesador_V2.0b/RV32nexpo.v:63$265'.
No latch inferred for signal `\ALU.$func$\flip32$Procesador_V2.0b/ALU.v:37$184$\flip32' from process `\ALU.$proc$Procesador_V2.0b/ALU.v:22$241'.
No latch inferred for signal `\ALU.$func$\flip32$Procesador_V2.0b/ALU.v:37$186$\flip32' from process `\ALU.$proc$Procesador_V2.0b/ALU.v:22$241'.
No latch inferred for signal `\ALU.$func$\flip32$Procesador_V2.0b/ALU.v:37$186$\x' from process `\ALU.$proc$Procesador_V2.0b/ALU.v:22$241'.
No latch inferred for signal `\ALU.\branch' from process `\ALU.$proc$Procesador_V2.0b/ALU.v:67$226'.
No latch inferred for signal `\ALU.\ALUout' from process `\ALU.$proc$Procesador_V2.0b/ALU.v:54$197'.
No latch inferred for signal `\ALU.$func$\flip32$Procesador_V2.0b/ALU.v:57$185$\flip32' from process `\ALU.$proc$Procesador_V2.0b/ALU.v:54$197'.
No latch inferred for signal `\ALU.$func$\flip32$Procesador_V2.0b/ALU.v:57$185$\x' from process `\ALU.$proc$Procesador_V2.0b/ALU.v:54$197'.
No latch inferred for signal `\registros.\i' from process `\registros.$proc$Procesador_V2.0b/registros_32.v:28$119'.
No latch inferred for signal `\registros.$memwr$\WORKREG$Procesador_V2.0b/registros_32.v:30$45_ADDR' from process `\registros.$proc$Procesador_V2.0b/registros_32.v:28$119'.
No latch inferred for signal `\registros.$memwr$\WORKREG$Procesador_V2.0b/registros_32.v:30$45_DATA' from process `\registros.$proc$Procesador_V2.0b/registros_32.v:28$119'.
No latch inferred for signal `\registros.$memwr$\WORKREG$Procesador_V2.0b/registros_32.v:30$46_ADDR' from process `\registros.$proc$Procesador_V2.0b/registros_32.v:28$119'.
No latch inferred for signal `\registros.$memwr$\WORKREG$Procesador_V2.0b/registros_32.v:30$46_DATA' from process `\registros.$proc$Procesador_V2.0b/registros_32.v:28$119'.
No latch inferred for signal `\registros.$memwr$\WORKREG$Procesador_V2.0b/registros_32.v:30$47_ADDR' from process `\registros.$proc$Procesador_V2.0b/registros_32.v:28$119'.
No latch inferred for signal `\registros.$memwr$\WORKREG$Procesador_V2.0b/registros_32.v:30$47_DATA' from process `\registros.$proc$Procesador_V2.0b/registros_32.v:28$119'.
No latch inferred for signal `\registros.$memwr$\WORKREG$Procesador_V2.0b/registros_32.v:30$48_ADDR' from process `\registros.$proc$Procesador_V2.0b/registros_32.v:28$119'.
No latch inferred for signal `\registros.$memwr$\WORKREG$Procesador_V2.0b/registros_32.v:30$48_DATA' from process `\registros.$proc$Procesador_V2.0b/registros_32.v:28$119'.
No latch inferred for signal `\registros.$memwr$\WORKREG$Procesador_V2.0b/registros_32.v:30$49_ADDR' from process `\registros.$proc$Procesador_V2.0b/registros_32.v:28$119'.
No latch inferred for signal `\registros.$memwr$\WORKREG$Procesador_V2.0b/registros_32.v:30$49_DATA' from process `\registros.$proc$Procesador_V2.0b/registros_32.v:28$119'.
No latch inferred for signal `\registros.$memwr$\WORKREG$Procesador_V2.0b/registros_32.v:30$50_ADDR' from process `\registros.$proc$Procesador_V2.0b/registros_32.v:28$119'.
No latch inferred for signal `\registros.$memwr$\WORKREG$Procesador_V2.0b/registros_32.v:30$50_DATA' from process `\registros.$proc$Procesador_V2.0b/registros_32.v:28$119'.
No latch inferred for signal `\registros.$memwr$\WORKREG$Procesador_V2.0b/registros_32.v:30$51_ADDR' from process `\registros.$proc$Procesador_V2.0b/registros_32.v:28$119'.
No latch inferred for signal `\registros.$memwr$\WORKREG$Procesador_V2.0b/registros_32.v:30$51_DATA' from process `\registros.$proc$Procesador_V2.0b/registros_32.v:28$119'.
No latch inferred for signal `\registros.$memwr$\WORKREG$Procesador_V2.0b/registros_32.v:30$52_ADDR' from process `\registros.$proc$Procesador_V2.0b/registros_32.v:28$119'.
No latch inferred for signal `\registros.$memwr$\WORKREG$Procesador_V2.0b/registros_32.v:30$52_DATA' from process `\registros.$proc$Procesador_V2.0b/registros_32.v:28$119'.
No latch inferred for signal `\registros.$memwr$\WORKREG$Procesador_V2.0b/registros_32.v:30$53_ADDR' from process `\registros.$proc$Procesador_V2.0b/registros_32.v:28$119'.
No latch inferred for signal `\registros.$memwr$\WORKREG$Procesador_V2.0b/registros_32.v:30$53_DATA' from process `\registros.$proc$Procesador_V2.0b/registros_32.v:28$119'.
No latch inferred for signal `\registros.$memwr$\WORKREG$Procesador_V2.0b/registros_32.v:30$54_ADDR' from process `\registros.$proc$Procesador_V2.0b/registros_32.v:28$119'.
No latch inferred for signal `\registros.$memwr$\WORKREG$Procesador_V2.0b/registros_32.v:30$54_DATA' from process `\registros.$proc$Procesador_V2.0b/registros_32.v:28$119'.
No latch inferred for signal `\registros.$memwr$\WORKREG$Procesador_V2.0b/registros_32.v:30$55_ADDR' from process `\registros.$proc$Procesador_V2.0b/registros_32.v:28$119'.
No latch inferred for signal `\registros.$memwr$\WORKREG$Procesador_V2.0b/registros_32.v:30$55_DATA' from process `\registros.$proc$Procesador_V2.0b/registros_32.v:28$119'.
No latch inferred for signal `\registros.$memwr$\WORKREG$Procesador_V2.0b/registros_32.v:30$56_ADDR' from process `\registros.$proc$Procesador_V2.0b/registros_32.v:28$119'.
No latch inferred for signal `\registros.$memwr$\WORKREG$Procesador_V2.0b/registros_32.v:30$56_DATA' from process `\registros.$proc$Procesador_V2.0b/registros_32.v:28$119'.
No latch inferred for signal `\registros.$memwr$\WORKREG$Procesador_V2.0b/registros_32.v:30$57_ADDR' from process `\registros.$proc$Procesador_V2.0b/registros_32.v:28$119'.
No latch inferred for signal `\registros.$memwr$\WORKREG$Procesador_V2.0b/registros_32.v:30$57_DATA' from process `\registros.$proc$Procesador_V2.0b/registros_32.v:28$119'.
No latch inferred for signal `\registros.$memwr$\WORKREG$Procesador_V2.0b/registros_32.v:30$58_ADDR' from process `\registros.$proc$Procesador_V2.0b/registros_32.v:28$119'.
No latch inferred for signal `\registros.$memwr$\WORKREG$Procesador_V2.0b/registros_32.v:30$58_DATA' from process `\registros.$proc$Procesador_V2.0b/registros_32.v:28$119'.
No latch inferred for signal `\registros.$memwr$\WORKREG$Procesador_V2.0b/registros_32.v:30$59_ADDR' from process `\registros.$proc$Procesador_V2.0b/registros_32.v:28$119'.
No latch inferred for signal `\registros.$memwr$\WORKREG$Procesador_V2.0b/registros_32.v:30$59_DATA' from process `\registros.$proc$Procesador_V2.0b/registros_32.v:28$119'.
No latch inferred for signal `\registros.$memwr$\WORKREG$Procesador_V2.0b/registros_32.v:30$60_ADDR' from process `\registros.$proc$Procesador_V2.0b/registros_32.v:28$119'.
No latch inferred for signal `\registros.$memwr$\WORKREG$Procesador_V2.0b/registros_32.v:30$60_DATA' from process `\registros.$proc$Procesador_V2.0b/registros_32.v:28$119'.
No latch inferred for signal `\registros.$memwr$\WORKREG$Procesador_V2.0b/registros_32.v:30$61_ADDR' from process `\registros.$proc$Procesador_V2.0b/registros_32.v:28$119'.
No latch inferred for signal `\registros.$memwr$\WORKREG$Procesador_V2.0b/registros_32.v:30$61_DATA' from process `\registros.$proc$Procesador_V2.0b/registros_32.v:28$119'.
No latch inferred for signal `\registros.$memwr$\WORKREG$Procesador_V2.0b/registros_32.v:30$62_ADDR' from process `\registros.$proc$Procesador_V2.0b/registros_32.v:28$119'.
No latch inferred for signal `\registros.$memwr$\WORKREG$Procesador_V2.0b/registros_32.v:30$62_DATA' from process `\registros.$proc$Procesador_V2.0b/registros_32.v:28$119'.
No latch inferred for signal `\registros.$memwr$\WORKREG$Procesador_V2.0b/registros_32.v:30$63_ADDR' from process `\registros.$proc$Procesador_V2.0b/registros_32.v:28$119'.
No latch inferred for signal `\registros.$memwr$\WORKREG$Procesador_V2.0b/registros_32.v:30$63_DATA' from process `\registros.$proc$Procesador_V2.0b/registros_32.v:28$119'.
No latch inferred for signal `\registros.$memwr$\WORKREG$Procesador_V2.0b/registros_32.v:30$64_ADDR' from process `\registros.$proc$Procesador_V2.0b/registros_32.v:28$119'.
No latch inferred for signal `\registros.$memwr$\WORKREG$Procesador_V2.0b/registros_32.v:30$64_DATA' from process `\registros.$proc$Procesador_V2.0b/registros_32.v:28$119'.
No latch inferred for signal `\registros.$memwr$\WORKREG$Procesador_V2.0b/registros_32.v:30$65_ADDR' from process `\registros.$proc$Procesador_V2.0b/registros_32.v:28$119'.
No latch inferred for signal `\registros.$memwr$\WORKREG$Procesador_V2.0b/registros_32.v:30$65_DATA' from process `\registros.$proc$Procesador_V2.0b/registros_32.v:28$119'.
No latch inferred for signal `\registros.$memwr$\WORKREG$Procesador_V2.0b/registros_32.v:30$66_ADDR' from process `\registros.$proc$Procesador_V2.0b/registros_32.v:28$119'.
No latch inferred for signal `\registros.$memwr$\WORKREG$Procesador_V2.0b/registros_32.v:30$66_DATA' from process `\registros.$proc$Procesador_V2.0b/registros_32.v:28$119'.
No latch inferred for signal `\registros.$memwr$\WORKREG$Procesador_V2.0b/registros_32.v:30$67_ADDR' from process `\registros.$proc$Procesador_V2.0b/registros_32.v:28$119'.
No latch inferred for signal `\registros.$memwr$\WORKREG$Procesador_V2.0b/registros_32.v:30$67_DATA' from process `\registros.$proc$Procesador_V2.0b/registros_32.v:28$119'.
No latch inferred for signal `\registros.$memwr$\WORKREG$Procesador_V2.0b/registros_32.v:30$68_ADDR' from process `\registros.$proc$Procesador_V2.0b/registros_32.v:28$119'.
No latch inferred for signal `\registros.$memwr$\WORKREG$Procesador_V2.0b/registros_32.v:30$68_DATA' from process `\registros.$proc$Procesador_V2.0b/registros_32.v:28$119'.
No latch inferred for signal `\registros.$memwr$\WORKREG$Procesador_V2.0b/registros_32.v:30$69_ADDR' from process `\registros.$proc$Procesador_V2.0b/registros_32.v:28$119'.
No latch inferred for signal `\registros.$memwr$\WORKREG$Procesador_V2.0b/registros_32.v:30$69_DATA' from process `\registros.$proc$Procesador_V2.0b/registros_32.v:28$119'.
No latch inferred for signal `\registros.$memwr$\WORKREG$Procesador_V2.0b/registros_32.v:30$70_ADDR' from process `\registros.$proc$Procesador_V2.0b/registros_32.v:28$119'.
No latch inferred for signal `\registros.$memwr$\WORKREG$Procesador_V2.0b/registros_32.v:30$70_DATA' from process `\registros.$proc$Procesador_V2.0b/registros_32.v:28$119'.
No latch inferred for signal `\registros.$memwr$\WORKREG$Procesador_V2.0b/registros_32.v:30$71_ADDR' from process `\registros.$proc$Procesador_V2.0b/registros_32.v:28$119'.
No latch inferred for signal `\registros.$memwr$\WORKREG$Procesador_V2.0b/registros_32.v:30$71_DATA' from process `\registros.$proc$Procesador_V2.0b/registros_32.v:28$119'.
No latch inferred for signal `\registros.$memwr$\WORKREG$Procesador_V2.0b/registros_32.v:30$72_ADDR' from process `\registros.$proc$Procesador_V2.0b/registros_32.v:28$119'.
No latch inferred for signal `\registros.$memwr$\WORKREG$Procesador_V2.0b/registros_32.v:30$72_DATA' from process `\registros.$proc$Procesador_V2.0b/registros_32.v:28$119'.
No latch inferred for signal `\registros.$memwr$\WORKREG$Procesador_V2.0b/registros_32.v:30$73_ADDR' from process `\registros.$proc$Procesador_V2.0b/registros_32.v:28$119'.
No latch inferred for signal `\registros.$memwr$\WORKREG$Procesador_V2.0b/registros_32.v:30$73_DATA' from process `\registros.$proc$Procesador_V2.0b/registros_32.v:28$119'.
No latch inferred for signal `\registros.$memwr$\WORKREG$Procesador_V2.0b/registros_32.v:30$74_ADDR' from process `\registros.$proc$Procesador_V2.0b/registros_32.v:28$119'.
No latch inferred for signal `\registros.$memwr$\WORKREG$Procesador_V2.0b/registros_32.v:30$74_DATA' from process `\registros.$proc$Procesador_V2.0b/registros_32.v:28$119'.
No latch inferred for signal `\registros.$memwr$\WORKREG$Procesador_V2.0b/registros_32.v:30$75_ADDR' from process `\registros.$proc$Procesador_V2.0b/registros_32.v:28$119'.
No latch inferred for signal `\registros.$memwr$\WORKREG$Procesador_V2.0b/registros_32.v:30$75_DATA' from process `\registros.$proc$Procesador_V2.0b/registros_32.v:28$119'.
No latch inferred for signal `\registros.$memwr$\WORKREG$Procesador_V2.0b/registros_32.v:30$76_ADDR' from process `\registros.$proc$Procesador_V2.0b/registros_32.v:28$119'.
No latch inferred for signal `\registros.$memwr$\WORKREG$Procesador_V2.0b/registros_32.v:30$76_DATA' from process `\registros.$proc$Procesador_V2.0b/registros_32.v:28$119'.
No latch inferred for signal `\ControladorMatrizLed.\pwm' from process `\ControladorMatrizLed.$proc$ControladorMatrizLed.v:21$11'.

4.3.8. Executing PROC_DFF pass (convert process syncs to FFs).
Creating register for signal `\serialRX.\rcv' using process `\serialRX.$proc$uart.v:227$433'.
created $dff cell `$procdff$1249' with positive edge clock.
Creating register for signal `\serialRX.\data' using process `\serialRX.$proc$uart.v:221$432'.
created $dff cell `$procdff$1250' with positive edge clock.
Creating register for signal `\serialRX.\cont' using process `\serialRX.$proc$uart.v:202$427'.
created $dff cell `$procdff$1251' with positive edge clock.
Creating register for signal `\serialRX.\sr' using process `\serialRX.$proc$uart.v:191$425'.
created $dff cell `$procdff$1252' with positive edge clock.
Creating register for signal `\serialRX.\div2counter' using process `\serialRX.$proc$uart.v:169$421'.
created $dff cell `$procdff$1253' with positive edge clock.
Creating register for signal `\serialRX.\state' using process `\serialRX.$proc$uart.v:156$420'.
created $dff cell `$procdff$1254' with positive edge clock.
Creating register for signal `\serialRX.\q_t0' using process `\serialRX.$proc$uart.v:147$417'.
created $dff cell `$procdff$1255' with positive edge clock.
Creating register for signal `\serialRX.\din' using process `\serialRX.$proc$uart.v:142$416'.
created $dff cell `$procdff$1256' with positive edge clock.
Creating register for signal `\serialRX.\d1' using process `\serialRX.$proc$uart.v:139$415'.
created $dff cell `$procdff$1257' with positive edge clock.
Creating register for signal `\serialTX.\done' using process `\serialTX.$proc$uart.v:108$408'.
created $dff cell `$procdff$1258' with positive edge clock.
Creating register for signal `\serialTX.\bits' using process `\serialTX.$proc$uart.v:94$405'.
created $dff cell `$procdff$1259' with positive edge clock.
Creating register for signal `\serialTX.\TX' using process `\serialTX.$proc$uart.v:89$404'.
created $dff cell `$procdff$1260' with positive edge clock.
Creating register for signal `\serialTX.\q' using process `\serialTX.$proc$uart.v:81$403'.
created $dff cell `$procdff$1261' with positive edge clock.
Creating register for signal `\serialTX.\state' using process `\serialTX.$proc$uart.v:72$402'.
created $dff cell `$procdff$1262' with positive edge clock.
Creating register for signal `\serialTX.\q_re' using process `\serialTX.$proc$uart.v:66$399'.
created $dff cell `$procdff$1263' with positive edge clock.
Creating register for signal `$paramod\BaudClock\BAUD=115200.\divcounter' using process `$paramod\BaudClock\BAUD=115200.$proc$uart.v:35$602'.
created $dff cell `$procdff$1264' with positive edge clock.
Creating register for signal `$paramod\memory\TAM=2048.\DataOut' using process `$paramod\memory\TAM=2048.$proc$SOCnexpoV8_.v:261$580'.
created $dff cell `$procdff$1265' with positive edge clock.
Creating register for signal `$paramod\memory\TAM=2048.$memwr$\memArray$SOCnexpoV8_.v:263$569_ADDR' using process `$paramod\memory\TAM=2048.$proc$SOCnexpoV8_.v:261$580'.
created $dff cell `$procdff$1266' with positive edge clock.
Creating register for signal `$paramod\memory\TAM=2048.$memwr$\memArray$SOCnexpoV8_.v:263$569_DATA' using process `$paramod\memory\TAM=2048.$proc$SOCnexpoV8_.v:261$580'.
created $dff cell `$procdff$1267' with positive edge clock.
Creating register for signal `$paramod\memory\TAM=2048.$memwr$\memArray$SOCnexpoV8_.v:263$569_EN' using process `$paramod\memory\TAM=2048.$proc$SOCnexpoV8_.v:261$580'.
created $dff cell `$procdff$1268' with positive edge clock.
Creating register for signal `$paramod\memory\TAM=2048.$memwr$\memArray$SOCnexpoV8_.v:264$570_ADDR' using process `$paramod\memory\TAM=2048.$proc$SOCnexpoV8_.v:261$580'.
created $dff cell `$procdff$1269' with positive edge clock.
Creating register for signal `$paramod\memory\TAM=2048.$memwr$\memArray$SOCnexpoV8_.v:264$570_DATA' using process `$paramod\memory\TAM=2048.$proc$SOCnexpoV8_.v:261$580'.
created $dff cell `$procdff$1270' with positive edge clock.
Creating register for signal `$paramod\memory\TAM=2048.$memwr$\memArray$SOCnexpoV8_.v:264$570_EN' using process `$paramod\memory\TAM=2048.$proc$SOCnexpoV8_.v:261$580'.
created $dff cell `$procdff$1271' with positive edge clock.
Creating register for signal `$paramod\memory\TAM=2048.$memwr$\memArray$SOCnexpoV8_.v:265$571_ADDR' using process `$paramod\memory\TAM=2048.$proc$SOCnexpoV8_.v:261$580'.
created $dff cell `$procdff$1272' with positive edge clock.
Creating register for signal `$paramod\memory\TAM=2048.$memwr$\memArray$SOCnexpoV8_.v:265$571_DATA' using process `$paramod\memory\TAM=2048.$proc$SOCnexpoV8_.v:261$580'.
created $dff cell `$procdff$1273' with positive edge clock.
Creating register for signal `$paramod\memory\TAM=2048.$memwr$\memArray$SOCnexpoV8_.v:265$571_EN' using process `$paramod\memory\TAM=2048.$proc$SOCnexpoV8_.v:261$580'.
created $dff cell `$procdff$1274' with positive edge clock.
Creating register for signal `$paramod\memory\TAM=2048.$memwr$\memArray$SOCnexpoV8_.v:266$572_ADDR' using process `$paramod\memory\TAM=2048.$proc$SOCnexpoV8_.v:261$580'.
created $dff cell `$procdff$1275' with positive edge clock.
Creating register for signal `$paramod\memory\TAM=2048.$memwr$\memArray$SOCnexpoV8_.v:266$572_DATA' using process `$paramod\memory\TAM=2048.$proc$SOCnexpoV8_.v:261$580'.
created $dff cell `$procdff$1276' with positive edge clock.
Creating register for signal `$paramod\memory\TAM=2048.$memwr$\memArray$SOCnexpoV8_.v:266$572_EN' using process `$paramod\memory\TAM=2048.$proc$SOCnexpoV8_.v:261$580'.
created $dff cell `$procdff$1277' with positive edge clock.
Creating register for signal `\SOCnexpo.\rx_readed' using process `\SOCnexpo.$proc$SOCnexpoV8_.v:209$355'.
created $dff cell `$procdff$1278' with positive edge clock.
Creating register for signal `\SOCnexpo.\tx_ready' using process `\SOCnexpo.$proc$SOCnexpoV8_.v:187$354'.
created $dff cell `$procdff$1279' with positive edge clock.
Creating register for signal `\SOCnexpo.\leds_en' using process `\SOCnexpo.$proc$SOCnexpoV8_.v:150$352'.
created $dff cell `$procdff$1280' with positive edge clock.
Creating register for signal `\SOCnexpo.\leds1' using process `\SOCnexpo.$proc$SOCnexpoV8_.v:129$351'.
created $dff cell `$procdff$1281' with positive edge clock.
Creating register for signal `\SOCnexpo.\leds2' using process `\SOCnexpo.$proc$SOCnexpoV8_.v:129$351'.
created $dff cell `$procdff$1282' with positive edge clock.
Creating register for signal `\SOCnexpo.\leds3' using process `\SOCnexpo.$proc$SOCnexpoV8_.v:129$351'.
created $dff cell `$procdff$1283' with positive edge clock.
Creating register for signal `\SOCnexpo.\leds4' using process `\SOCnexpo.$proc$SOCnexpoV8_.v:129$351'.
created $dff cell `$procdff$1284' with positive edge clock.
Creating register for signal `\SOCnexpo.\instr' using process `\SOCnexpo.$proc$SOCnexpoV8_.v:46$329'.
created $dff cell `$procdff$1285' with positive edge clock.
Creating register for signal `\SOCnexpo.\rst' using process `\SOCnexpo.$proc$SOCnexpoV8_.v:30$327'.
created $dff cell `$procdff$1286' with positive edge clock.
Creating register for signal `\SOCnexpo.\Espera' using process `\SOCnexpo.$proc$SOCnexpoV8_.v:28$325'.
created $dff cell `$procdff$1287' with positive edge clock.
Creating register for signal `\RV32nexpo.\cycle' using process `\RV32nexpo.$proc$Procesador_V2.0b/RV32nexpo.v:478$319'.
created $dff cell `$procdff$1288' with positive edge clock.
Creating register for signal `\RV32nexpo.\instret' using process `\RV32nexpo.$proc$Procesador_V2.0b/RV32nexpo.v:478$319'.
created $dff cell `$procdff$1289' with positive edge clock.
Creating register for signal `\RV32nexpo.\PWM_' using process `\RV32nexpo.$proc$Procesador_V2.0b/RV32nexpo.v:469$317'.
created $dff cell `$procdff$1290' with positive edge clock.
Creating register for signal `\RV32nexpo.\MW_resultado' using process `\RV32nexpo.$proc$Procesador_V2.0b/RV32nexpo.v:429$314'.
created $dff cell `$procdff$1291' with positive edge clock.
Creating register for signal `\RV32nexpo.\MW_rd' using process `\RV32nexpo.$proc$Procesador_V2.0b/RV32nexpo.v:429$314'.
created $dff cell `$procdff$1292' with positive edge clock.
Creating register for signal `\RV32nexpo.\MW_funct3' using process `\RV32nexpo.$proc$Procesador_V2.0b/RV32nexpo.v:429$314'.
created $dff cell `$procdff$1293' with positive edge clock.
Creating register for signal `\RV32nexpo.\MW_address_LSB' using process `\RV32nexpo.$proc$Procesador_V2.0b/RV32nexpo.v:429$314'.
created $dff cell `$procdff$1294' with positive edge clock.
Creating register for signal `\RV32nexpo.\MW_nop' using process `\RV32nexpo.$proc$Procesador_V2.0b/RV32nexpo.v:429$314'.
created $dff cell `$procdff$1295' with positive edge clock.
Creating register for signal `\RV32nexpo.\MW_MemRead' using process `\RV32nexpo.$proc$Procesador_V2.0b/RV32nexpo.v:429$314'.
created $dff cell `$procdff$1296' with positive edge clock.
Creating register for signal `\RV32nexpo.\MW_RegWrite' using process `\RV32nexpo.$proc$Procesador_V2.0b/RV32nexpo.v:429$314'.
created $dff cell `$procdff$1297' with positive edge clock.
Creating register for signal `\RV32nexpo.\EM_resultado' using process `\RV32nexpo.$proc$Procesador_V2.0b/RV32nexpo.v:350$305'.
created $dff cell `$procdff$1298' with positive edge clock.
Creating register for signal `\RV32nexpo.\EM_rs2Data' using process `\RV32nexpo.$proc$Procesador_V2.0b/RV32nexpo.v:350$305'.
created $dff cell `$procdff$1299' with positive edge clock.
Creating register for signal `\RV32nexpo.\EM_csrDataIn' using process `\RV32nexpo.$proc$Procesador_V2.0b/RV32nexpo.v:350$305'.
created $dff cell `$procdff$1300' with positive edge clock.
Creating register for signal `\RV32nexpo.\EM_csr' using process `\RV32nexpo.$proc$Procesador_V2.0b/RV32nexpo.v:350$305'.
created $dff cell `$procdff$1301' with positive edge clock.
Creating register for signal `\RV32nexpo.\EM_rd' using process `\RV32nexpo.$proc$Procesador_V2.0b/RV32nexpo.v:350$305'.
created $dff cell `$procdff$1302' with positive edge clock.
Creating register for signal `\RV32nexpo.\EM_funct3' using process `\RV32nexpo.$proc$Procesador_V2.0b/RV32nexpo.v:350$305'.
created $dff cell `$procdff$1303' with positive edge clock.
Creating register for signal `\RV32nexpo.\EM_nop' using process `\RV32nexpo.$proc$Procesador_V2.0b/RV32nexpo.v:350$305'.
created $dff cell `$procdff$1304' with positive edge clock.
Creating register for signal `\RV32nexpo.\EM_MemRead' using process `\RV32nexpo.$proc$Procesador_V2.0b/RV32nexpo.v:350$305'.
created $dff cell `$procdff$1305' with positive edge clock.
Creating register for signal `\RV32nexpo.\EM_MemWrite' using process `\RV32nexpo.$proc$Procesador_V2.0b/RV32nexpo.v:350$305'.
created $dff cell `$procdff$1306' with positive edge clock.
Creating register for signal `\RV32nexpo.\EM_RegWrite' using process `\RV32nexpo.$proc$Procesador_V2.0b/RV32nexpo.v:350$305'.
created $dff cell `$procdff$1307' with positive edge clock.
Creating register for signal `\RV32nexpo.\EM_isCSR' using process `\RV32nexpo.$proc$Procesador_V2.0b/RV32nexpo.v:350$305'.
created $dff cell `$procdff$1308' with positive edge clock.
Creating register for signal `\RV32nexpo.\EM_CSRRead' using process `\RV32nexpo.$proc$Procesador_V2.0b/RV32nexpo.v:350$305'.
created $dff cell `$procdff$1309' with positive edge clock.
Creating register for signal `\RV32nexpo.\EM_CSRWrite' using process `\RV32nexpo.$proc$Procesador_V2.0b/RV32nexpo.v:350$305'.
created $dff cell `$procdff$1310' with positive edge clock.
Creating register for signal `\RV32nexpo.\DE_pc' using process `\RV32nexpo.$proc$Procesador_V2.0b/RV32nexpo.v:279$295'.
created $dff cell `$procdff$1311' with positive edge clock.
Creating register for signal `\RV32nexpo.\DE_rs1Data' using process `\RV32nexpo.$proc$Procesador_V2.0b/RV32nexpo.v:279$295'.
created $dff cell `$procdff$1312' with positive edge clock.
Creating register for signal `\RV32nexpo.\DE_rs2Data' using process `\RV32nexpo.$proc$Procesador_V2.0b/RV32nexpo.v:279$295'.
created $dff cell `$procdff$1313' with positive edge clock.
Creating register for signal `\RV32nexpo.\DE_imm' using process `\RV32nexpo.$proc$Procesador_V2.0b/RV32nexpo.v:279$295'.
created $dff cell `$procdff$1314' with positive edge clock.
Creating register for signal `\RV32nexpo.\DE_rs1' using process `\RV32nexpo.$proc$Procesador_V2.0b/RV32nexpo.v:279$295'.
created $dff cell `$procdff$1315' with positive edge clock.
Creating register for signal `\RV32nexpo.\DE_rs2' using process `\RV32nexpo.$proc$Procesador_V2.0b/RV32nexpo.v:279$295'.
created $dff cell `$procdff$1316' with positive edge clock.
Creating register for signal `\RV32nexpo.\DE_rd' using process `\RV32nexpo.$proc$Procesador_V2.0b/RV32nexpo.v:279$295'.
created $dff cell `$procdff$1317' with positive edge clock.
Creating register for signal `\RV32nexpo.\DE_ALUCtrl' using process `\RV32nexpo.$proc$Procesador_V2.0b/RV32nexpo.v:279$295'.
created $dff cell `$procdff$1318' with positive edge clock.
Creating register for signal `\RV32nexpo.\DE_funct3' using process `\RV32nexpo.$proc$Procesador_V2.0b/RV32nexpo.v:279$295'.
created $dff cell `$procdff$1319' with positive edge clock.
Creating register for signal `\RV32nexpo.\DE_nop' using process `\RV32nexpo.$proc$Procesador_V2.0b/RV32nexpo.v:279$295'.
created $dff cell `$procdff$1320' with positive edge clock.
Creating register for signal `\RV32nexpo.\DE_MemWrite' using process `\RV32nexpo.$proc$Procesador_V2.0b/RV32nexpo.v:279$295'.
created $dff cell `$procdff$1321' with positive edge clock.
Creating register for signal `\RV32nexpo.\DE_RegWrite' using process `\RV32nexpo.$proc$Procesador_V2.0b/RV32nexpo.v:279$295'.
created $dff cell `$procdff$1322' with positive edge clock.
Creating register for signal `\RV32nexpo.\DE_MemRead' using process `\RV32nexpo.$proc$Procesador_V2.0b/RV32nexpo.v:279$295'.
created $dff cell `$procdff$1323' with positive edge clock.
Creating register for signal `\RV32nexpo.\DE_ALUSrc1' using process `\RV32nexpo.$proc$Procesador_V2.0b/RV32nexpo.v:279$295'.
created $dff cell `$procdff$1324' with positive edge clock.
Creating register for signal `\RV32nexpo.\DE_ALUSrc2' using process `\RV32nexpo.$proc$Procesador_V2.0b/RV32nexpo.v:279$295'.
created $dff cell `$procdff$1325' with positive edge clock.
Creating register for signal `\RV32nexpo.\DE_isJALR' using process `\RV32nexpo.$proc$Procesador_V2.0b/RV32nexpo.v:279$295'.
created $dff cell `$procdff$1326' with positive edge clock.
Creating register for signal `\RV32nexpo.\DE_isJAL' using process `\RV32nexpo.$proc$Procesador_V2.0b/RV32nexpo.v:279$295'.
created $dff cell `$procdff$1327' with positive edge clock.
Creating register for signal `\RV32nexpo.\DE_isBRANCH' using process `\RV32nexpo.$proc$Procesador_V2.0b/RV32nexpo.v:279$295'.
created $dff cell `$procdff$1328' with positive edge clock.
Creating register for signal `\RV32nexpo.\DE_isCSR' using process `\RV32nexpo.$proc$Procesador_V2.0b/RV32nexpo.v:279$295'.
created $dff cell `$procdff$1329' with positive edge clock.
Creating register for signal `\RV32nexpo.\DE_isEBREAK' using process `\RV32nexpo.$proc$Procesador_V2.0b/RV32nexpo.v:279$295'.
created $dff cell `$procdff$1330' with positive edge clock.
Creating register for signal `\RV32nexpo.\DE_CSRWrite' using process `\RV32nexpo.$proc$Procesador_V2.0b/RV32nexpo.v:279$295'.
created $dff cell `$procdff$1331' with positive edge clock.
Creating register for signal `\RV32nexpo.\DE_CSRRead' using process `\RV32nexpo.$proc$Procesador_V2.0b/RV32nexpo.v:279$295'.
created $dff cell `$procdff$1332' with positive edge clock.
Creating register for signal `\RV32nexpo.\F_pc' using process `\RV32nexpo.$proc$Procesador_V2.0b/RV32nexpo.v:104$267'.
created $dff cell `$procdff$1333' with positive edge clock.
Creating register for signal `\RV32nexpo.\FD_pc' using process `\RV32nexpo.$proc$Procesador_V2.0b/RV32nexpo.v:104$267'.
created $dff cell `$procdff$1334' with positive edge clock.
Creating register for signal `\RV32nexpo.\FD_nop' using process `\RV32nexpo.$proc$Procesador_V2.0b/RV32nexpo.v:104$267'.
created $dff cell `$procdff$1335' with positive edge clock.
Creating register for signal `\RV32nexpo.\state' using process `\RV32nexpo.$proc$Procesador_V2.0b/RV32nexpo.v:58$264'.
created $dff cell `$procdff$1336' with positive edge clock.
Creating register for signal `\registros.$memwr$\WORKREG$Procesador_V2.0b/registros_32.v:43$77_ADDR' using process `\registros.$proc$Procesador_V2.0b/registros_32.v:41$80'.
created $dff cell `$procdff$1337' with positive edge clock.
Creating register for signal `\registros.$memwr$\WORKREG$Procesador_V2.0b/registros_32.v:43$77_DATA' using process `\registros.$proc$Procesador_V2.0b/registros_32.v:41$80'.
created $dff cell `$procdff$1338' with positive edge clock.
Creating register for signal `\registros.$memwr$\WORKREG$Procesador_V2.0b/registros_32.v:43$77_EN' using process `\registros.$proc$Procesador_V2.0b/registros_32.v:41$80'.
created $dff cell `$procdff$1339' with positive edge clock.
Creating register for signal `\ControladorMatrizLed.\act_row' using process `\ControladorMatrizLed.$proc$ControladorMatrizLed.v:41$4'.
created $dff cell `$procdff$1340' with positive edge clock.
Creating register for signal `\ControladorMatrizLed.\row' using process `\ControladorMatrizLed.$proc$ControladorMatrizLed.v:41$4'.
created $dff cell `$procdff$1341' with positive edge clock.
Creating register for signal `\ControladorMatrizLed.\timer' using process `\ControladorMatrizLed.$proc$ControladorMatrizLed.v:24$1'.
created $dff cell `$procdff$1342' with positive edge clock.

4.3.9. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Removing empty process `serialRX.$proc$uart.v:226$440'.
Removing empty process `serialRX.$proc$uart.v:219$439'.
Removing empty process `serialRX.$proc$uart.v:201$438'.
Removing empty process `serialRX.$proc$uart.v:190$437'.
Removing empty process `serialRX.$proc$uart.v:167$436'.
Removing empty process `serialRX.$proc$uart.v:154$435'.
Removing empty process `serialRX.$proc$uart.v:146$434'.
Removing empty process `serialRX.$proc$uart.v:227$433'.
Found and cleaned up 1 empty switch in `\serialRX.$proc$uart.v:221$432'.
Removing empty process `serialRX.$proc$uart.v:221$432'.
Found and cleaned up 2 empty switches in `\serialRX.$proc$uart.v:202$427'.
Removing empty process `serialRX.$proc$uart.v:202$427'.
Found and cleaned up 1 empty switch in `\serialRX.$proc$uart.v:191$425'.
Removing empty process `serialRX.$proc$uart.v:191$425'.
Found and cleaned up 2 empty switches in `\serialRX.$proc$uart.v:169$421'.
Removing empty process `serialRX.$proc$uart.v:169$421'.
Found and cleaned up 2 empty switches in `\serialRX.$proc$uart.v:156$420'.
Removing empty process `serialRX.$proc$uart.v:156$420'.
Removing empty process `serialRX.$proc$uart.v:147$417'.
Removing empty process `serialRX.$proc$uart.v:142$416'.
Removing empty process `serialRX.$proc$uart.v:139$415'.
Removing empty process `serialTX.$proc$uart.v:107$414'.
Removing empty process `serialTX.$proc$uart.v:93$413'.
Removing empty process `serialTX.$proc$uart.v:88$412'.
Removing empty process `serialTX.$proc$uart.v:80$411'.
Removing empty process `serialTX.$proc$uart.v:64$410'.
Removing empty process `serialTX.$proc$uart.v:55$409'.
Removing empty process `serialTX.$proc$uart.v:108$408'.
Found and cleaned up 2 empty switches in `\serialTX.$proc$uart.v:94$405'.
Removing empty process `serialTX.$proc$uart.v:94$405'.
Removing empty process `serialTX.$proc$uart.v:89$404'.
Found and cleaned up 2 empty switches in `\serialTX.$proc$uart.v:81$403'.
Removing empty process `serialTX.$proc$uart.v:81$403'.
Found and cleaned up 2 empty switches in `\serialTX.$proc$uart.v:72$402'.
Removing empty process `serialTX.$proc$uart.v:72$402'.
Removing empty process `serialTX.$proc$uart.v:66$399'.
Removing empty process `$paramod\BaudClock\BAUD=115200.$proc$uart.v:29$605'.
Found and cleaned up 1 empty switch in `$paramod\BaudClock\BAUD=115200.$proc$uart.v:35$602'.
Removing empty process `$paramod\BaudClock\BAUD=115200.$proc$uart.v:35$602'.
Found and cleaned up 5 empty switches in `$paramod\memory\TAM=2048.$proc$SOCnexpoV8_.v:261$580'.
Removing empty process `$paramod\memory\TAM=2048.$proc$SOCnexpoV8_.v:261$580'.
Removing empty process `SOCnexpo.$proc$SOCnexpoV8_.v:149$361'.
Removing empty process `SOCnexpo.$proc$SOCnexpoV8_.v:27$359'.
Removing empty process `SOCnexpo.$proc$SOCnexpoV8_.v:26$358'.
Found and cleaned up 3 empty switches in `\SOCnexpo.$proc$SOCnexpoV8_.v:209$355'.
Removing empty process `SOCnexpo.$proc$SOCnexpoV8_.v:209$355'.
Found and cleaned up 3 empty switches in `\SOCnexpo.$proc$SOCnexpoV8_.v:187$354'.
Removing empty process `SOCnexpo.$proc$SOCnexpoV8_.v:187$354'.
Found and cleaned up 2 empty switches in `\SOCnexpo.$proc$SOCnexpoV8_.v:150$352'.
Removing empty process `SOCnexpo.$proc$SOCnexpoV8_.v:150$352'.
Found and cleaned up 8 empty switches in `\SOCnexpo.$proc$SOCnexpoV8_.v:129$351'.
Removing empty process `SOCnexpo.$proc$SOCnexpoV8_.v:129$351'.
Found and cleaned up 1 empty switch in `\SOCnexpo.$proc$SOCnexpoV8_.v:83$343'.
Removing empty process `SOCnexpo.$proc$SOCnexpoV8_.v:83$343'.
Removing empty process `SOCnexpo.$proc$SOCnexpoV8_.v:46$329'.
Found and cleaned up 1 empty switch in `\SOCnexpo.$proc$SOCnexpoV8_.v:30$327'.
Removing empty process `SOCnexpo.$proc$SOCnexpoV8_.v:30$327'.
Removing empty process `SOCnexpo.$proc$SOCnexpoV8_.v:28$325'.
Removing empty process `RV32nexpo.$proc$Procesador_V2.0b/RV32nexpo.v:122$324'.
Removing empty process `RV32nexpo.$proc$Procesador_V2.0b/RV32nexpo.v:96$323'.
Found and cleaned up 1 empty switch in `\RV32nexpo.$proc$Procesador_V2.0b/RV32nexpo.v:478$319'.
Removing empty process `RV32nexpo.$proc$Procesador_V2.0b/RV32nexpo.v:478$319'.
Found and cleaned up 3 empty switches in `\RV32nexpo.$proc$Procesador_V2.0b/RV32nexpo.v:469$317'.
Removing empty process `RV32nexpo.$proc$Procesador_V2.0b/RV32nexpo.v:469$317'.
Removing empty process `RV32nexpo.$proc$Procesador_V2.0b/RV32nexpo.v:429$314'.
Found and cleaned up 1 empty switch in `\RV32nexpo.$proc$Procesador_V2.0b/RV32nexpo.v:387$308'.
Removing empty process `RV32nexpo.$proc$Procesador_V2.0b/RV32nexpo.v:387$308'.
Removing empty process `RV32nexpo.$proc$Procesador_V2.0b/RV32nexpo.v:350$305'.
Removing empty process `RV32nexpo.$proc$Procesador_V2.0b/RV32nexpo.v:279$295'.
Found and cleaned up 2 empty switches in `\RV32nexpo.$proc$Procesador_V2.0b/RV32nexpo.v:197$288'.
Removing empty process `RV32nexpo.$proc$Procesador_V2.0b/RV32nexpo.v:197$288'.
Found and cleaned up 1 empty switch in `\RV32nexpo.$proc$Procesador_V2.0b/RV32nexpo.v:167$285'.
Removing empty process `RV32nexpo.$proc$Procesador_V2.0b/RV32nexpo.v:167$285'.
Found and cleaned up 2 empty switches in `\RV32nexpo.$proc$Procesador_V2.0b/RV32nexpo.v:104$267'.
Removing empty process `RV32nexpo.$proc$Procesador_V2.0b/RV32nexpo.v:104$267'.
Removing empty process `RV32nexpo.$proc$Procesador_V2.0b/RV32nexpo.v:63$265'.
Found and cleaned up 1 empty switch in `\RV32nexpo.$proc$Procesador_V2.0b/RV32nexpo.v:58$264'.
Removing empty process `RV32nexpo.$proc$Procesador_V2.0b/RV32nexpo.v:58$264'.
Removing empty process `ALU.$proc$Procesador_V2.0b/ALU.v:22$241'.
Removing empty process `ALU.$proc$Procesador_V2.0b/ALU.v:67$226'.
Removing empty process `ALU.$proc$Procesador_V2.0b/ALU.v:54$197'.
Removing empty process `registros.$proc$Procesador_V2.0b/registros_32.v:28$119'.
Found and cleaned up 1 empty switch in `\registros.$proc$Procesador_V2.0b/registros_32.v:41$80'.
Removing empty process `registros.$proc$Procesador_V2.0b/registros_32.v:41$80'.
Removing empty process `ControladorMatrizLed.$proc$ControladorMatrizLed.v:23$12'.
Removing empty process `ControladorMatrizLed.$proc$ControladorMatrizLed.v:21$11'.
Found and cleaned up 2 empty switches in `\ControladorMatrizLed.$proc$ControladorMatrizLed.v:41$4'.
Removing empty process `ControladorMatrizLed.$proc$ControladorMatrizLed.v:41$4'.
Found and cleaned up 1 empty switch in `\ControladorMatrizLed.$proc$ControladorMatrizLed.v:24$1'.
Removing empty process `ControladorMatrizLed.$proc$ControladorMatrizLed.v:24$1'.
Cleaned up 53 empty switches.

4.4. Executing FLATTEN pass (flatten design).
Using template RV32nexpo for cells of type RV32nexpo.
Using template $paramod\memory\TAM=2048 for cells of type $paramod\memory\TAM=2048.
Using template ControladorMatrizLed for cells of type ControladorMatrizLed.
Using template serialTX for cells of type serialTX.
Using template serialRX for cells of type serialRX.
Using template LoadfromMEM for cells of type LoadfromMEM.
Using template StoretoMEM for cells of type StoretoMEM.
Using template ALU for cells of type ALU.
Using template registros for cells of type registros.
Using template $paramod\BaudClock\BAUD=115200 for cells of type $paramod\BaudClock\BAUD=115200.
No more expansions possible.
Deleting now unused module serialRX.
Deleting now unused module serialTX.
Deleting now unused module $paramod\BaudClock\BAUD=115200.
Deleting now unused module $paramod\memory\TAM=2048.
Deleting now unused module RV32nexpo.
Deleting now unused module LoadfromMEM.
Deleting now unused module StoretoMEM.
Deleting now unused module ALU.
Deleting now unused module registros.
Deleting now unused module ControladorMatrizLed.

4.5. Executing TRIBUF pass.

4.6. Executing DEMINOUT pass (demote inout ports to input or output).

4.7. Executing OPT_EXPR pass (perform const folding).
Optimizing module SOCnexpo.

4.8. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \SOCnexpo..
Removed 93 unused cells and 776 unused wires.

4.9. Executing CHECK pass (checking for obvious problems).
checking module SOCnexpo..
Warning: Wire SOCnexpo.\RV32I.error is used but has no driver.
Warning: Wire SOCnexpo.\RV32I.end_prog is used but has no driver.
found and reported 2 problems.

4.10. Executing OPT pass (performing simple optimizations).

4.10.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module SOCnexpo.

4.10.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\SOCnexpo'.
Removed a total of 7 cells.

4.10.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \SOCnexpo..
Creating internal representation of mux trees.
Evaluating internal representation of mux trees.
Analyzing evaluation results.
dead port 2/2 on $mux $techmap\RV32I.$procmux$825.
dead port 1/2 on $mux $techmap\RV32I.$procmux$827.
dead port 1/2 on $mux $techmap\RV32I.$procmux$829.
dead port 1/2 on $mux $techmap\RV32I.$procmux$831.
dead port 1/2 on $mux $techmap\RV32I.$procmux$833.
dead port 1/2 on $mux $techmap\RV32I.$procmux$835.
dead port 1/2 on $mux $techmap\RV32I.$procmux$837.
dead port 1/2 on $mux $techmap\RV32I.$procmux$839.
dead port 1/2 on $mux $techmap\RV32I.$procmux$841.
dead port 1/2 on $mux $techmap\RV32I.$procmux$843.
dead port 1/2 on $mux $techmap\RV32I.$procmux$845.
dead port 1/2 on $mux $techmap\RV32I.$procmux$847.
Removed 12 multiplexer ports.

4.10.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
Optimizing cells in module \SOCnexpo.
New input vector for $reduce_or cell $techmap\RV32I.reg32.$reduce_or$Procesador_V2.0b/registros_32.v:42$84: { \RV32I.MW_rd [0] \RV32I.MW_rd [1] \RV32I.MW_rd [2] \RV32I.MW_rd [3] \RV32I.MW_rd [4] }
New input vector for $reduce_or cell $techmap\RV32I.$reduce_or$Procesador_V2.0b/RV32nexpo.v:264$293: { \RV32I.FD_instr [15] \RV32I.FD_instr [16] \RV32I.FD_instr [17] \RV32I.FD_instr [18] \RV32I.FD_instr [19] }
New input vector for $reduce_or cell $techmap\RAM.$reduce_or$SOCnexpoV8_.v:254$574: { \RAM.WRmask [0] \RAM.WRmask [1] \RAM.WRmask [2] \RAM.WRmask [3] }
Consolidated identical input bits for $mux cell $techmap\RAM.$procmux$643:
Old ports: A=0, B=255, Y=$techmap\RAM.$procmux$643_Y
New ports: A=1'0, B=1'1, Y=$techmap\RAM.$procmux$643_Y [0]
New connections: $techmap\RAM.$procmux$643_Y [31:1] = { 24'000000000000000000000000 $techmap\RAM.$procmux$643_Y [0] $techmap\RAM.$procmux$643_Y [0] $techmap\RAM.$procmux$643_Y [0] $techmap\RAM.$procmux$643_Y [0] $techmap\RAM.$procmux$643_Y [0] $techmap\RAM.$procmux$643_Y [0] $techmap\RAM.$procmux$643_Y [0] }
Consolidated identical input bits for $mux cell $techmap\RAM.$procmux$655:
Old ports: A=0, B=65280, Y=$techmap\RAM.$procmux$655_Y
New ports: A=1'0, B=1'1, Y=$techmap\RAM.$procmux$655_Y [8]
New connections: { $techmap\RAM.$procmux$655_Y [31:9] $techmap\RAM.$procmux$655_Y [7:0] } = { 16'0000000000000000 $techmap\RAM.$procmux$655_Y [8] $techmap\RAM.$procmux$655_Y [8] $techmap\RAM.$procmux$655_Y [8] $techmap\RAM.$procmux$655_Y [8] $techmap\RAM.$procmux$655_Y [8] $techmap\RAM.$procmux$655_Y [8] $techmap\RAM.$procmux$655_Y [8] 8'00000000 }
Consolidated identical input bits for $mux cell $techmap\RAM.$procmux$667:
Old ports: A=0, B=16711680, Y=$techmap\RAM.$procmux$667_Y
New ports: A=1'0, B=1'1, Y=$techmap\RAM.$procmux$667_Y [16]
New connections: { $techmap\RAM.$procmux$667_Y [31:17] $techmap\RAM.$procmux$667_Y [15:0] } = { 8'00000000 $techmap\RAM.$procmux$667_Y [16] $techmap\RAM.$procmux$667_Y [16] $techmap\RAM.$procmux$667_Y [16] $techmap\RAM.$procmux$667_Y [16] $techmap\RAM.$procmux$667_Y [16] $techmap\RAM.$procmux$667_Y [16] $techmap\RAM.$procmux$667_Y [16] 16'0000000000000000 }
Consolidated identical input bits for $mux cell $techmap\RAM.$procmux$679:
Old ports: A=0, B=32'11111111000000000000000000000000, Y=$techmap\RAM.$procmux$679_Y
New ports: A=1'0, B=1'1, Y=$techmap\RAM.$procmux$679_Y [24]
New connections: { $techmap\RAM.$procmux$679_Y [31:25] $techmap\RAM.$procmux$679_Y [23:0] } = { $techmap\RAM.$procmux$679_Y [24] $techmap\RAM.$procmux$679_Y [24] $techmap\RAM.$procmux$679_Y [24] $techmap\RAM.$procmux$679_Y [24] $techmap\RAM.$procmux$679_Y [24] $techmap\RAM.$procmux$679_Y [24] $techmap\RAM.$procmux$679_Y [24] 24'000000000000000000000000 }
New ctrl vector for $pmux cell $techmap\RV32I.$procmux$785: { $techmap\RV32I.$eq$Procesador_V2.0b/RV32nexpo.v:473$318_Y $auto$opt_reduce.cc:132:opt_mux$1346 $techmap\RV32I.$procmux$789_CMP $auto$opt_reduce.cc:132:opt_mux$1344 $techmap\RV32I.$procmux$786_CMP }
Consolidated identical input bits for $mux cell $techmap\RV32I.reg32.$procmux$1113:
Old ports: A=0, B=32'11111111111111111111111111111111, Y=$techmap\RV32I.reg32.$0$memwr$\WORKREG$Procesador_V2.0b/registros_32.v:43$77_EN[31:0]$83
New ports: A=1'0, B=1'1, Y=$techmap\RV32I.reg32.$0$memwr$\WORKREG$Procesador_V2.0b/registros_32.v:43$77_EN[31:0]$83 [0]
New connections: $techmap\RV32I.reg32.$0$memwr$\WORKREG$Procesador_V2.0b/registros_32.v:43$77_EN[31:0]$83 [31:1] = { $techmap\RV32I.reg32.$0$memwr$\WORKREG$Procesador_V2.0b/registros_32.v:43$77_EN[31:0]$83 [0] $techmap\RV32I.reg32.$0$memwr$\WORKREG$Procesador_V2.0b/registros_32.v:43$77_EN[31:0]$83 [0] $techmap\RV32I.reg32.$0$memwr$\WORKREG$Procesador_V2.0b/registros_32.v:43$77_EN[31:0]$83 [0] $techmap\RV32I.reg32.$0$memwr$\WORKREG$Procesador_V2.0b/registros_32.v:43$77_EN[31:0]$83 [0] $techmap\RV32I.reg32.$0$memwr$\WORKREG$Procesador_V2.0b/registros_32.v:43$77_EN[31:0]$83 [0] $techmap\RV32I.reg32.$0$memwr$\WORKREG$Procesador_V2.0b/registros_32.v:43$77_EN[31:0]$83 [0] $techmap\RV32I.reg32.$0$memwr$\WORKREG$Procesador_V2.0b/registros_32.v:43$77_EN[31:0]$83 [0] $techmap\RV32I.reg32.$0$memwr$\WORKREG$Procesador_V2.0b/registros_32.v:43$77_EN[31:0]$83 [0] $techmap\RV32I.reg32.$0$memwr$\WORKREG$Procesador_V2.0b/registros_32.v:43$77_EN[31:0]$83 [0] $techmap\RV32I.reg32.$0$memwr$\WORKREG$Procesador_V2.0b/registros_32.v:43$77_EN[31:0]$83 [0] $techmap\RV32I.reg32.$0$memwr$\WORKREG$Procesador_V2.0b/registros_32.v:43$77_EN[31:0]$83 [0] $techmap\RV32I.reg32.$0$memwr$\WORKREG$Procesador_V2.0b/registros_32.v:43$77_EN[31:0]$83 [0] $techmap\RV32I.reg32.$0$memwr$\WORKREG$Procesador_V2.0b/registros_32.v:43$77_EN[31:0]$83 [0] $techmap\RV32I.reg32.$0$memwr$\WORKREG$Procesador_V2.0b/registros_32.v:43$77_EN[31:0]$83 [0] $techmap\RV32I.reg32.$0$memwr$\WORKREG$Procesador_V2.0b/registros_32.v:43$77_EN[31:0]$83 [0] $techmap\RV32I.reg32.$0$memwr$\WORKREG$Procesador_V2.0b/registros_32.v:43$77_EN[31:0]$83 [0] $techmap\RV32I.reg32.$0$memwr$\WORKREG$Procesador_V2.0b/registros_32.v:43$77_EN[31:0]$83 [0] $techmap\RV32I.reg32.$0$memwr$\WORKREG$Procesador_V2.0b/registros_32.v:43$77_EN[31:0]$83 [0] $techmap\RV32I.reg32.$0$memwr$\WORKREG$Procesador_V2.0b/registros_32.v:43$77_EN[31:0]$83 [0] $techmap\RV32I.reg32.$0$memwr$\WORKREG$Procesador_V2.0b/registros_32.v:43$77_EN[31:0]$83 [0] $techmap\RV32I.reg32.$0$memwr$\WORKREG$Procesador_V2.0b/registros_32.v:43$77_EN[31:0]$83 [0] $techmap\RV32I.reg32.$0$memwr$\WORKREG$Procesador_V2.0b/registros_32.v:43$77_EN[31:0]$83 [0] $techmap\RV32I.reg32.$0$memwr$\WORKREG$Procesador_V2.0b/registros_32.v:43$77_EN[31:0]$83 [0] $techmap\RV32I.reg32.$0$memwr$\WORKREG$Procesador_V2.0b/registros_32.v:43$77_EN[31:0]$83 [0] $techmap\RV32I.reg32.$0$memwr$\WORKREG$Procesador_V2.0b/registros_32.v:43$77_EN[31:0]$83 [0] $techmap\RV32I.reg32.$0$memwr$\WORKREG$Procesador_V2.0b/registros_32.v:43$77_EN[31:0]$83 [0] $techmap\RV32I.reg32.$0$memwr$\WORKREG$Procesador_V2.0b/registros_32.v:43$77_EN[31:0]$83 [0] $techmap\RV32I.reg32.$0$memwr$\WORKREG$Procesador_V2.0b/registros_32.v:43$77_EN[31:0]$83 [0] $techmap\RV32I.reg32.$0$memwr$\WORKREG$Procesador_V2.0b/registros_32.v:43$77_EN[31:0]$83 [0] $techmap\RV32I.reg32.$0$memwr$\WORKREG$Procesador_V2.0b/registros_32.v:43$77_EN[31:0]$83 [0] $techmap\RV32I.reg32.$0$memwr$\WORKREG$Procesador_V2.0b/registros_32.v:43$77_EN[31:0]$83 [0] }
Optimizing cells in module \SOCnexpo.
Consolidated identical input bits for $mux cell $techmap\RAM.$procmux$645:
Old ports: A=0, B=$techmap\RAM.$procmux$643_Y, Y=$techmap\RAM.$0$memwr$\memArray$SOCnexpoV8_.v:263$569_EN[31:0]$583
New ports: A=1'0, B=$techmap\RAM.$procmux$643_Y [0], Y=$techmap\RAM.$0$memwr$\memArray$SOCnexpoV8_.v:263$569_EN[31:0]$583 [0]
New connections: $techmap\RAM.$0$memwr$\memArray$SOCnexpoV8_.v:263$569_EN[31:0]$583 [31:1] = { 24'000000000000000000000000 $techmap\RAM.$0$memwr$\memArray$SOCnexpoV8_.v:263$569_EN[31:0]$583 [0] $techmap\RAM.$0$memwr$\memArray$SOCnexpoV8_.v:263$569_EN[31:0]$583 [0] $techmap\RAM.$0$memwr$\memArray$SOCnexpoV8_.v:263$569_EN[31:0]$583 [0] $techmap\RAM.$0$memwr$\memArray$SOCnexpoV8_.v:263$569_EN[31:0]$583 [0] $techmap\RAM.$0$memwr$\memArray$SOCnexpoV8_.v:263$569_EN[31:0]$583 [0] $techmap\RAM.$0$memwr$\memArray$SOCnexpoV8_.v:263$569_EN[31:0]$583 [0] $techmap\RAM.$0$memwr$\memArray$SOCnexpoV8_.v:263$569_EN[31:0]$583 [0] }
Consolidated identical input bits for $mux cell $techmap\RAM.$procmux$657:
Old ports: A=0, B=$techmap\RAM.$procmux$655_Y, Y=$techmap\RAM.$0$memwr$\memArray$SOCnexpoV8_.v:264$570_EN[31:0]$586
New ports: A=1'0, B=$techmap\RAM.$procmux$655_Y [8], Y=$techmap\RAM.$0$memwr$\memArray$SOCnexpoV8_.v:264$570_EN[31:0]$586 [8]
New connections: { $techmap\RAM.$0$memwr$\memArray$SOCnexpoV8_.v:264$570_EN[31:0]$586 [31:9] $techmap\RAM.$0$memwr$\memArray$SOCnexpoV8_.v:264$570_EN[31:0]$586 [7:0] } = { 16'0000000000000000 $techmap\RAM.$0$memwr$\memArray$SOCnexpoV8_.v:264$570_EN[31:0]$586 [8] $techmap\RAM.$0$memwr$\memArray$SOCnexpoV8_.v:264$570_EN[31:0]$586 [8] $techmap\RAM.$0$memwr$\memArray$SOCnexpoV8_.v:264$570_EN[31:0]$586 [8] $techmap\RAM.$0$memwr$\memArray$SOCnexpoV8_.v:264$570_EN[31:0]$586 [8] $techmap\RAM.$0$memwr$\memArray$SOCnexpoV8_.v:264$570_EN[31:0]$586 [8] $techmap\RAM.$0$memwr$\memArray$SOCnexpoV8_.v:264$570_EN[31:0]$586 [8] $techmap\RAM.$0$memwr$\memArray$SOCnexpoV8_.v:264$570_EN[31:0]$586 [8] 8'00000000 }
Consolidated identical input bits for $mux cell $techmap\RAM.$procmux$669:
Old ports: A=0, B=$techmap\RAM.$procmux$667_Y, Y=$techmap\RAM.$0$memwr$\memArray$SOCnexpoV8_.v:265$571_EN[31:0]$589
New ports: A=1'0, B=$techmap\RAM.$procmux$667_Y [16], Y=$techmap\RAM.$0$memwr$\memArray$SOCnexpoV8_.v:265$571_EN[31:0]$589 [16]
New connections: { $techmap\RAM.$0$memwr$\memArray$SOCnexpoV8_.v:265$571_EN[31:0]$589 [31:17] $techmap\RAM.$0$memwr$\memArray$SOCnexpoV8_.v:265$571_EN[31:0]$589 [15:0] } = { 8'00000000 $techmap\RAM.$0$memwr$\memArray$SOCnexpoV8_.v:265$571_EN[31:0]$589 [16] $techmap\RAM.$0$memwr$\memArray$SOCnexpoV8_.v:265$571_EN[31:0]$589 [16] $techmap\RAM.$0$memwr$\memArray$SOCnexpoV8_.v:265$571_EN[31:0]$589 [16] $techmap\RAM.$0$memwr$\memArray$SOCnexpoV8_.v:265$571_EN[31:0]$589 [16] $techmap\RAM.$0$memwr$\memArray$SOCnexpoV8_.v:265$571_EN[31:0]$589 [16] $techmap\RAM.$0$memwr$\memArray$SOCnexpoV8_.v:265$571_EN[31:0]$589 [16] $techmap\RAM.$0$memwr$\memArray$SOCnexpoV8_.v:265$571_EN[31:0]$589 [16] 16'0000000000000000 }
Consolidated identical input bits for $mux cell $techmap\RAM.$procmux$681:
Old ports: A=0, B=$techmap\RAM.$procmux$679_Y, Y=$techmap\RAM.$0$memwr$\memArray$SOCnexpoV8_.v:266$572_EN[31:0]$592
New ports: A=1'0, B=$techmap\RAM.$procmux$679_Y [24], Y=$techmap\RAM.$0$memwr$\memArray$SOCnexpoV8_.v:266$572_EN[31:0]$592 [24]
New connections: { $techmap\RAM.$0$memwr$\memArray$SOCnexpoV8_.v:266$572_EN[31:0]$592 [31:25] $techmap\RAM.$0$memwr$\memArray$SOCnexpoV8_.v:266$572_EN[31:0]$592 [23:0] } = { $techmap\RAM.$0$memwr$\memArray$SOCnexpoV8_.v:266$572_EN[31:0]$592 [24] $techmap\RAM.$0$memwr$\memArray$SOCnexpoV8_.v:266$572_EN[31:0]$592 [24] $techmap\RAM.$0$memwr$\memArray$SOCnexpoV8_.v:266$572_EN[31:0]$592 [24] $techmap\RAM.$0$memwr$\memArray$SOCnexpoV8_.v:266$572_EN[31:0]$592 [24] $techmap\RAM.$0$memwr$\memArray$SOCnexpoV8_.v:266$572_EN[31:0]$592 [24] $techmap\RAM.$0$memwr$\memArray$SOCnexpoV8_.v:266$572_EN[31:0]$592 [24] $techmap\RAM.$0$memwr$\memArray$SOCnexpoV8_.v:266$572_EN[31:0]$592 [24] 24'000000000000000000000000 }
Optimizing cells in module \SOCnexpo.
Performed a total of 13 changes.

4.10.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\SOCnexpo'.
Removed a total of 3 cells.

4.10.6. Executing OPT_RMDFF pass (remove dff with constant values).
Promoting init spec \UART_RX.rcv = 1'0 to constant driver in module SOCnexpo.
Promoted 1 init specs to constant drivers.

4.10.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \SOCnexpo..
Removed 0 unused cells and 24 unused wires.

4.10.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module SOCnexpo.

4.10.9. Rerunning OPT passes. (Maybe there is more to do..)

4.10.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \SOCnexpo..
Creating internal representation of mux trees.
Evaluating internal representation of mux trees.
Analyzing evaluation results.
Removed 0 multiplexer ports.

4.10.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
Optimizing cells in module \SOCnexpo.
Performed a total of 0 changes.

4.10.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\SOCnexpo'.
Removed a total of 0 cells.

4.10.13. Executing OPT_RMDFF pass (remove dff with constant values).

4.10.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \SOCnexpo..

4.10.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module SOCnexpo.

4.10.16. Finished OPT passes. (There is nothing left to do.)

4.11. Executing WREDUCE pass (reducing word size of cells).
Removed top 21 address bits (of 32) from memory init port SOCnexpo.$meminit$\MEMROM$SOCnexpoV8_.v:42$357 (MEMROM).
Removed top 21 address bits (of 32) from memory init port SOCnexpo.$techmap\RAM.$meminit$\memArray$SOCnexpoV8_.v:258$594 (RAM.memArray).
Removed top 27 address bits (of 32) from memory init port SOCnexpo.$techmap\RV32I.reg32.$meminit$\WORKREG$Procesador_V2.0b/registros_32.v:30$100 (RV32I.reg32.WORKREG).
Removed top 27 address bits (of 32) from memory init port SOCnexpo.$techmap\RV32I.reg32.$meminit$\WORKREG$Procesador_V2.0b/registros_32.v:30$101 (RV32I.reg32.WORKREG).
Removed top 27 address bits (of 32) from memory init port SOCnexpo.$techmap\RV32I.reg32.$meminit$\WORKREG$Procesador_V2.0b/registros_32.v:30$102 (RV32I.reg32.WORKREG).
Removed top 27 address bits (of 32) from memory init port SOCnexpo.$techmap\RV32I.reg32.$meminit$\WORKREG$Procesador_V2.0b/registros_32.v:30$103 (RV32I.reg32.WORKREG).
Removed top 27 address bits (of 32) from memory init port SOCnexpo.$techmap\RV32I.reg32.$meminit$\WORKREG$Procesador_V2.0b/registros_32.v:30$104 (RV32I.reg32.WORKREG).
Removed top 27 address bits (of 32) from memory init port SOCnexpo.$techmap\RV32I.reg32.$meminit$\WORKREG$Procesador_V2.0b/registros_32.v:30$105 (RV32I.reg32.WORKREG).
Removed top 27 address bits (of 32) from memory init port SOCnexpo.$techmap\RV32I.reg32.$meminit$\WORKREG$Procesador_V2.0b/registros_32.v:30$106 (RV32I.reg32.WORKREG).
Removed top 27 address bits (of 32) from memory init port SOCnexpo.$techmap\RV32I.reg32.$meminit$\WORKREG$Procesador_V2.0b/registros_32.v:30$107 (RV32I.reg32.WORKREG).
Removed top 27 address bits (of 32) from memory init port SOCnexpo.$techmap\RV32I.reg32.$meminit$\WORKREG$Procesador_V2.0b/registros_32.v:30$108 (RV32I.reg32.WORKREG).
Removed top 27 address bits (of 32) from memory init port SOCnexpo.$techmap\RV32I.reg32.$meminit$\WORKREG$Procesador_V2.0b/registros_32.v:30$109 (RV32I.reg32.WORKREG).
Removed top 27 address bits (of 32) from memory init port SOCnexpo.$techmap\RV32I.reg32.$meminit$\WORKREG$Procesador_V2.0b/registros_32.v:30$110 (RV32I.reg32.WORKREG).
Removed top 27 address bits (of 32) from memory init port SOCnexpo.$techmap\RV32I.reg32.$meminit$\WORKREG$Procesador_V2.0b/registros_32.v:30$111 (RV32I.reg32.WORKREG).
Removed top 27 address bits (of 32) from memory init port SOCnexpo.$techmap\RV32I.reg32.$meminit$\WORKREG$Procesador_V2.0b/registros_32.v:30$112 (RV32I.reg32.WORKREG).
Removed top 27 address bits (of 32) from memory init port SOCnexpo.$techmap\RV32I.reg32.$meminit$\WORKREG$Procesador_V2.0b/registros_32.v:30$113 (RV32I.reg32.WORKREG).
Removed top 27 address bits (of 32) from memory init port SOCnexpo.$techmap\RV32I.reg32.$meminit$\WORKREG$Procesador_V2.0b/registros_32.v:30$114 (RV32I.reg32.WORKREG).
Removed top 27 address bits (of 32) from memory init port SOCnexpo.$techmap\RV32I.reg32.$meminit$\WORKREG$Procesador_V2.0b/registros_32.v:30$115 (RV32I.reg32.WORKREG).
Removed top 27 address bits (of 32) from memory init port SOCnexpo.$techmap\RV32I.reg32.$meminit$\WORKREG$Procesador_V2.0b/registros_32.v:30$116 (RV32I.reg32.WORKREG).
Removed top 27 address bits (of 32) from memory init port SOCnexpo.$techmap\RV32I.reg32.$meminit$\WORKREG$Procesador_V2.0b/registros_32.v:30$117 (RV32I.reg32.WORKREG).
Removed top 27 address bits (of 32) from memory init port SOCnexpo.$techmap\RV32I.reg32.$meminit$\WORKREG$Procesador_V2.0b/registros_32.v:30$86 (RV32I.reg32.WORKREG).
Removed top 27 address bits (of 32) from memory init port SOCnexpo.$techmap\RV32I.reg32.$meminit$\WORKREG$Procesador_V2.0b/registros_32.v:30$87 (RV32I.reg32.WORKREG).
Removed top 27 address bits (of 32) from memory init port SOCnexpo.$techmap\RV32I.reg32.$meminit$\WORKREG$Procesador_V2.0b/registros_32.v:30$88 (RV32I.reg32.WORKREG).
Removed top 27 address bits (of 32) from memory init port SOCnexpo.$techmap\RV32I.reg32.$meminit$\WORKREG$Procesador_V2.0b/registros_32.v:30$89 (RV32I.reg32.WORKREG).
Removed top 27 address bits (of 32) from memory init port SOCnexpo.$techmap\RV32I.reg32.$meminit$\WORKREG$Procesador_V2.0b/registros_32.v:30$90 (RV32I.reg32.WORKREG).
Removed top 27 address bits (of 32) from memory init port SOCnexpo.$techmap\RV32I.reg32.$meminit$\WORKREG$Procesador_V2.0b/registros_32.v:30$91 (RV32I.reg32.WORKREG).
Removed top 27 address bits (of 32) from memory init port SOCnexpo.$techmap\RV32I.reg32.$meminit$\WORKREG$Procesador_V2.0b/registros_32.v:30$92 (RV32I.reg32.WORKREG).
Removed top 27 address bits (of 32) from memory init port SOCnexpo.$techmap\RV32I.reg32.$meminit$\WORKREG$Procesador_V2.0b/registros_32.v:30$93 (RV32I.reg32.WORKREG).
Removed top 27 address bits (of 32) from memory init port SOCnexpo.$techmap\RV32I.reg32.$meminit$\WORKREG$Procesador_V2.0b/registros_32.v:30$94 (RV32I.reg32.WORKREG).
Removed top 27 address bits (of 32) from memory init port SOCnexpo.$techmap\RV32I.reg32.$meminit$\WORKREG$Procesador_V2.0b/registros_32.v:30$95 (RV32I.reg32.WORKREG).
Removed top 27 address bits (of 32) from memory init port SOCnexpo.$techmap\RV32I.reg32.$meminit$\WORKREG$Procesador_V2.0b/registros_32.v:30$96 (RV32I.reg32.WORKREG).
Removed top 27 address bits (of 32) from memory init port SOCnexpo.$techmap\RV32I.reg32.$meminit$\WORKREG$Procesador_V2.0b/registros_32.v:30$97 (RV32I.reg32.WORKREG).
Removed top 27 address bits (of 32) from memory init port SOCnexpo.$techmap\RV32I.reg32.$meminit$\WORKREG$Procesador_V2.0b/registros_32.v:30$98 (RV32I.reg32.WORKREG).
Removed top 27 address bits (of 32) from memory init port SOCnexpo.$techmap\RV32I.reg32.$meminit$\WORKREG$Procesador_V2.0b/registros_32.v:30$99 (RV32I.reg32.WORKREG).
Removed top 31 bits (of 32) from port B of cell SOCnexpo.$add$SOCnexpoV8_.v:28$326 ($add).
Removed top 24 bits (of 32) from port Y of cell SOCnexpo.$add$SOCnexpoV8_.v:28$326 ($add).
Removed top 17 bits (of 18) from port B of cell SOCnexpo.$eq$SOCnexpoV8_.v:74$331 ($eq).
Removed top 2 bits (of 3) from port B of cell SOCnexpo.$eq$SOCnexpoV8_.v:77$335 ($eq).
Removed top 1 bits (of 3) from port B of cell SOCnexpo.$eq$SOCnexpoV8_.v:78$337 ($eq).
Removed top 1 bits (of 3) from port B of cell SOCnexpo.$eq$SOCnexpoV8_.v:79$339 ($eq).
Removed top 1 bits (of 32) from mux cell SOCnexpo.$procmux$764 ($pmux).
Removed top 1 bits (of 2) from port B of cell SOCnexpo.$procmux$767_CMP0 ($eq).
Removed top 12 bits (of 32) from mux cell SOCnexpo.$techmap\RV32I.$procmux$1087 ($mux).
Removed cell SOCnexpo.$techmap\RV32I.$procmux$1066 ($mux).
Removed cell SOCnexpo.$techmap\RV32I.$procmux$1062 ($mux).
Removed top 63 bits (of 64) from port B of cell SOCnexpo.$techmap\RV32I.$add$Procesador_V2.0b/RV32nexpo.v:484$322 ($add).
Removed top 31 bits (of 32) from port B of cell SOCnexpo.$techmap\RV32I.$add$Procesador_V2.0b/RV32nexpo.v:483$320 ($add).
Removed top 1 bits (of 2) from port B of cell SOCnexpo.$techmap\RV32I.$eq$Procesador_V2.0b/RV32nexpo.v:218$289 ($eq).
Removed top 1 bits (of 7) from port B of cell SOCnexpo.$techmap\RV32I.$eq$Procesador_V2.0b/RV32nexpo.v:149$276 ($eq).
Removed top 1 bits (of 7) from port B of cell SOCnexpo.$techmap\RV32I.$eq$Procesador_V2.0b/RV32nexpo.v:148$275 ($eq).
Removed top 1 bits (of 7) from port B of cell SOCnexpo.$techmap\RV32I.$eq$Procesador_V2.0b/RV32nexpo.v:147$274 ($eq).
Removed top 2 bits (of 7) from port B of cell SOCnexpo.$techmap\RV32I.$eq$Procesador_V2.0b/RV32nexpo.v:146$273 ($eq).
Removed top 2 bits (of 7) from port B of cell SOCnexpo.$techmap\RV32I.$eq$Procesador_V2.0b/RV32nexpo.v:145$272 ($eq).
Removed top 3 bits (of 7) from port B of cell SOCnexpo.$techmap\RV32I.$eq$Procesador_V2.0b/RV32nexpo.v:144$271 ($eq).
Removed top 5 bits (of 7) from port B of cell SOCnexpo.$techmap\RV32I.$eq$Procesador_V2.0b/RV32nexpo.v:143$270 ($eq).
Removed top 29 bits (of 32) from port B of cell SOCnexpo.$techmap\RV32I.$add$Procesador_V2.0b/RV32nexpo.v:100$266 ($add).
Removed top 7 bits (of 32) from FF cell SOCnexpo.$techmap\RAM.$procdff$1277 ($dff).
Removed top 8 bits (of 32) from FF cell SOCnexpo.$techmap\RAM.$procdff$1274 ($dff).
Removed top 16 bits (of 32) from FF cell SOCnexpo.$techmap\RAM.$procdff$1271 ($dff).
Removed top 24 bits (of 32) from FF cell SOCnexpo.$techmap\RAM.$procdff$1268 ($dff).
Removed cell SOCnexpo.$techmap\RAM.$procmux$689 ($mux).
Removed cell SOCnexpo.$techmap\RAM.$procmux$687 ($mux).
Removed cell SOCnexpo.$techmap\RAM.$procmux$685 ($mux).
Removed cell SOCnexpo.$techmap\RAM.$procmux$683 ($mux).
Removed cell SOCnexpo.$techmap\RAM.$procmux$677 ($mux).
Removed cell SOCnexpo.$techmap\RAM.$procmux$675 ($mux).
Removed cell SOCnexpo.$techmap\RAM.$procmux$673 ($mux).
Removed cell SOCnexpo.$techmap\RAM.$procmux$671 ($mux).
Removed cell SOCnexpo.$techmap\RAM.$procmux$665 ($mux).
Removed cell SOCnexpo.$techmap\RAM.$procmux$663 ($mux).
Removed cell SOCnexpo.$techmap\RAM.$procmux$661 ($mux).
Removed cell SOCnexpo.$techmap\RAM.$procmux$659 ($mux).
Removed cell SOCnexpo.$techmap\RAM.$procmux$653 ($mux).
Removed cell SOCnexpo.$techmap\RAM.$procmux$651 ($mux).
Removed cell SOCnexpo.$techmap\RAM.$procmux$649 ($mux).
Removed cell SOCnexpo.$techmap\RAM.$procmux$647 ($mux).
Removed top 1 bits (of 2) from port B of cell SOCnexpo.$techmap\LEDS8_4.$procmux$1123_CMP0 ($eq).
Removed top 3 bits (of 10) from port B of cell SOCnexpo.$techmap\LEDS8_4.$le$ControladorMatrizLed.v:38$3 ($le).
Removed top 31 bits (of 32) from port B of cell SOCnexpo.$techmap\LEDS8_4.$add$ControladorMatrizLed.v:28$2 ($add).
Removed top 20 bits (of 32) from port Y of cell SOCnexpo.$techmap\LEDS8_4.$add$ControladorMatrizLed.v:28$2 ($add).
Removed top 31 bits (of 32) from port B of cell SOCnexpo.$techmap\UART_TX.$add$uart.v:98$406 ($add).
Removed top 28 bits (of 32) from port Y of cell SOCnexpo.$techmap\UART_TX.$add$uart.v:98$406 ($add).
Removed top 1 bits (of 5) from port B of cell SOCnexpo.$techmap\UART_RX.$eq$uart.v:210$431 ($eq).
Removed top 31 bits (of 32) from port B of cell SOCnexpo.$techmap\UART_RX.$add$uart.v:207$430 ($add).
Removed top 27 bits (of 32) from port Y of cell SOCnexpo.$techmap\UART_RX.$add$uart.v:207$430 ($add).
Removed top 1 bits (of 7) from port B of cell SOCnexpo.$techmap\UART_RX.$eq$uart.v:176$424 ($eq).
Removed top 31 bits (of 32) from port B of cell SOCnexpo.$techmap\UART_RX.$add$uart.v:172$423 ($add).
Removed top 25 bits (of 32) from port Y of cell SOCnexpo.$techmap\UART_RX.$add$uart.v:172$423 ($add).
Removed top 26 bits (of 32) from port B of cell SOCnexpo.$techmap\UART_RX.$lt$uart.v:171$422 ($lt).
Removed top 31 bits (of 32) from mux cell SOCnexpo.$techmap\RV32I.load.$ternary$Procesador_V2.0b/interfaz_mem.v:61$261 ($mux).
Removed top 31 bits (of 32) from mux cell SOCnexpo.$techmap\RV32I.load.$ternary$Procesador_V2.0b/interfaz_mem.v:60$259 ($mux).
Removed top 2 bits (of 4) from mux cell SOCnexpo.$techmap\RV32I.store.$ternary$Procesador_V2.0b/interfaz_mem.v:35$252 ($mux).
Removed top 1 bits (of 33) from port Y of cell SOCnexpo.$techmap\RV32I.alu.$or$Procesador_V2.0b/ALU.v:63$225 ($or).
Removed top 1 bits (of 33) from port A of cell SOCnexpo.$techmap\RV32I.alu.$or$Procesador_V2.0b/ALU.v:63$225 ($or).
Removed top 1 bits (of 33) from port B of cell SOCnexpo.$techmap\RV32I.alu.$or$Procesador_V2.0b/ALU.v:63$225 ($or).
Removed top 1 bits (of 33) from mux cell SOCnexpo.$techmap\RV32I.alu.$ternary$Procesador_V2.0b/ALU.v:63$224 ($mux).
Removed top 1 bits (of 33) from port Y of cell SOCnexpo.$techmap\RV32I.alu.$and$Procesador_V2.0b/ALU.v:63$222 ($and).
Removed top 1 bits (of 33) from port Y of cell SOCnexpo.$techmap\RV32I.alu.$or$Procesador_V2.0b/ALU.v:62$221 ($or).
Removed top 1 bits (of 33) from port A of cell SOCnexpo.$techmap\RV32I.alu.$or$Procesador_V2.0b/ALU.v:62$221 ($or).
Removed top 1 bits (of 33) from port B of cell SOCnexpo.$techmap\RV32I.alu.$or$Procesador_V2.0b/ALU.v:62$221 ($or).
Removed top 1 bits (of 33) from mux cell SOCnexpo.$techmap\RV32I.alu.$ternary$Procesador_V2.0b/ALU.v:62$220 ($mux).
Removed top 1 bits (of 33) from port Y of cell SOCnexpo.$techmap\RV32I.alu.$or$Procesador_V2.0b/ALU.v:62$218 ($or).
Removed top 1 bits (of 33) from port B of cell SOCnexpo.$techmap\RV32I.alu.$or$Procesador_V2.0b/ALU.v:61$217 ($or).
Removed top 1 bits (of 33) from port Y of cell SOCnexpo.$techmap\RV32I.alu.$or$Procesador_V2.0b/ALU.v:61$217 ($or).
Removed top 1 bits (of 33) from port A of cell SOCnexpo.$techmap\RV32I.alu.$or$Procesador_V2.0b/ALU.v:61$217 ($or).
Removed top 1 bits (of 33) from port Y of cell SOCnexpo.$techmap\RV32I.alu.$or$Procesador_V2.0b/ALU.v:60$215 ($or).
Removed top 1 bits (of 33) from port A of cell SOCnexpo.$techmap\RV32I.alu.$or$Procesador_V2.0b/ALU.v:60$215 ($or).
Removed top 1 bits (of 33) from port B of cell SOCnexpo.$techmap\RV32I.alu.$or$Procesador_V2.0b/ALU.v:60$215 ($or).
Removed top 1 bits (of 33) from mux cell SOCnexpo.$techmap\RV32I.alu.$ternary$Procesador_V2.0b/ALU.v:60$214 ($mux).
Removed top 1 bits (of 33) from port Y of cell SOCnexpo.$techmap\RV32I.alu.$xor$Procesador_V2.0b/ALU.v:60$212 ($xor).
Removed top 1 bits (of 33) from port Y of cell SOCnexpo.$techmap\RV32I.alu.$or$Procesador_V2.0b/ALU.v:59$211 ($or).
Removed top 1 bits (of 33) from port A of cell SOCnexpo.$techmap\RV32I.alu.$or$Procesador_V2.0b/ALU.v:59$211 ($or).
Removed top 1 bits (of 33) from port B of cell SOCnexpo.$techmap\RV32I.alu.$or$Procesador_V2.0b/ALU.v:59$211 ($or).
Removed top 32 bits (of 33) from mux cell SOCnexpo.$techmap\RV32I.alu.$ternary$Procesador_V2.0b/ALU.v:59$210 ($mux).
Removed top 1 bits (of 33) from port Y of cell SOCnexpo.$techmap\RV32I.alu.$or$Procesador_V2.0b/ALU.v:58$208 ($or).
Removed top 1 bits (of 33) from port A of cell SOCnexpo.$techmap\RV32I.alu.$or$Procesador_V2.0b/ALU.v:58$208 ($or).
Removed top 1 bits (of 33) from port B of cell SOCnexpo.$techmap\RV32I.alu.$or$Procesador_V2.0b/ALU.v:58$208 ($or).
Removed top 32 bits (of 33) from mux cell SOCnexpo.$techmap\RV32I.alu.$ternary$Procesador_V2.0b/ALU.v:58$207 ($mux).
Removed top 1 bits (of 33) from port B of cell SOCnexpo.$techmap\RV32I.alu.$or$Procesador_V2.0b/ALU.v:57$205 ($or).
Removed top 1 bits (of 33) from port Y of cell SOCnexpo.$techmap\RV32I.alu.$or$Procesador_V2.0b/ALU.v:57$205 ($or).
Removed top 1 bits (of 33) from port A of cell SOCnexpo.$techmap\RV32I.alu.$or$Procesador_V2.0b/ALU.v:57$205 ($or).
Removed top 1 bits (of 33) from mux cell SOCnexpo.$techmap\RV32I.alu.$ternary$Procesador_V2.0b/ALU.v:56$203 ($mux).
Removed top 1 bits (of 33) from mux cell SOCnexpo.$techmap\RV32I.alu.$ternary$Procesador_V2.0b/ALU.v:56$201 ($mux).
Removed top 1 bits (of 33) from port Y of cell SOCnexpo.$techmap\RV32I.alu.$add$Procesador_V2.0b/ALU.v:56$200 ($add).
Removed top 1 bits (of 33) from port A of cell SOCnexpo.$techmap\RV32I.alu.$add$Procesador_V2.0b/ALU.v:47$193 ($add).
Removed top 32 bits (of 33) from port B of cell SOCnexpo.$techmap\RV32I.alu.$add$Procesador_V2.0b/ALU.v:47$192 ($add).
Removed top 1 bits (of 33) from port Y of cell SOCnexpo.$techmap\RV32I.alu.$sshr$Procesador_V2.0b/ALU.v:38$190 ($sshr).
Removed top 7 bits (of 8) from port A of cell SOCnexpo.$techmap\RV32I.alu.$shl$Procesador_V2.0b/ALU.v:31$187 ($shl).
Removed top 31 bits (of 32) from FF cell SOCnexpo.$techmap\RV32I.reg32.$procdff$1339 ($dff).
Removed cell SOCnexpo.$techmap\RV32I.reg32.$procmux$1117 ($mux).
Removed cell SOCnexpo.$techmap\RV32I.reg32.$procmux$1115 ($mux).
Removed top 31 bits (of 32) from port B of cell SOCnexpo.$techmap\UART_TX.bclk.$add$uart.v:39$603 ($add).
Removed top 25 bits (of 32) from port Y of cell SOCnexpo.$techmap\UART_TX.bclk.$add$uart.v:39$603 ($add).
Removed top 31 bits (of 32) from port B of cell SOCnexpo.$techmap\UART_RX.bclk.$add$uart.v:39$603 ($add).
Removed top 25 bits (of 32) from port Y of cell SOCnexpo.$techmap\UART_RX.bclk.$add$uart.v:39$603 ($add).
Removed top 12 bits (of 32) from mux cell SOCnexpo.$techmap\RV32I.$procmux$1089 ($mux).
Removed top 7 bits (of 24) from FF cell SOCnexpo.$techmap\RAM.$procdff$1274 ($dff).
Removed top 7 bits (of 16) from FF cell SOCnexpo.$techmap\RAM.$procdff$1271 ($dff).
Removed top 7 bits (of 8) from FF cell SOCnexpo.$techmap\RAM.$procdff$1268 ($dff).
Removed top 12 bits (of 32) from mux cell SOCnexpo.$techmap\RV32I.$procmux$1091 ($mux).
Removed top 1 bits (of 32) from mux cell SOCnexpo.$techmap\RV32I.$procmux$1093 ($mux).
Removed top 1 bits (of 32) from mux cell SOCnexpo.$techmap\RV32I.$procmux$1095 ($mux).
Removed top 20 bits (of 32) from wire SOCnexpo.$techmap\LEDS8_4.$add$ControladorMatrizLed.v:28$2_Y.
Removed top 24 bits (of 32) from wire SOCnexpo.$techmap\RAM.$0$memwr$\memArray$SOCnexpoV8_.v:263$569_EN[31:0]$583.
Removed top 16 bits (of 32) from wire SOCnexpo.$techmap\RAM.$0$memwr$\memArray$SOCnexpoV8_.v:264$570_DATA[31:0]$585.
Removed top 16 bits (of 32) from wire SOCnexpo.$techmap\RAM.$0$memwr$\memArray$SOCnexpoV8_.v:264$570_EN[31:0]$586.
Removed top 8 bits (of 32) from wire SOCnexpo.$techmap\RAM.$0$memwr$\memArray$SOCnexpoV8_.v:265$571_DATA[31:0]$588.
Removed top 8 bits (of 32) from wire SOCnexpo.$techmap\RAM.$0$memwr$\memArray$SOCnexpoV8_.v:265$571_EN[31:0]$589.
Removed top 24 bits (of 32) from wire SOCnexpo.$techmap\RAM.$procmux$643_Y.
Removed top 16 bits (of 32) from wire SOCnexpo.$techmap\RAM.$procmux$655_Y.
Removed top 16 bits (of 32) from wire SOCnexpo.$techmap\RAM.$procmux$659_Y.
Removed top 8 bits (of 32) from wire SOCnexpo.$techmap\RAM.$procmux$667_Y.
Removed top 8 bits (of 32) from wire SOCnexpo.$techmap\RAM.$procmux$671_Y.
Removed top 63 bits (of 64) from wire SOCnexpo.$techmap\RV32I.$logic_not$Procesador_V2.0b/RV32nexpo.v:484$321_Y.
Removed top 1 bits (of 33) from wire SOCnexpo.$techmap\RV32I.alu.$add$Procesador_V2.0b/ALU.v:56$200_Y.
Removed top 1 bits (of 33) from wire SOCnexpo.$techmap\RV32I.alu.$and$Procesador_V2.0b/ALU.v:63$222_Y.
Removed top 1 bits (of 33) from wire SOCnexpo.$techmap\RV32I.alu.$or$Procesador_V2.0b/ALU.v:57$205_Y.
Removed top 25 bits (of 33) from wire SOCnexpo.$techmap\RV32I.alu.$or$Procesador_V2.0b/ALU.v:61$217_Y.
Removed top 1 bits (of 33) from wire SOCnexpo.$techmap\RV32I.alu.$or$Procesador_V2.0b/ALU.v:62$218_Y.
Removed top 1 bits (of 33) from wire SOCnexpo.$techmap\RV32I.alu.$or$Procesador_V2.0b/ALU.v:62$221_Y.
Removed top 10 bits (of 33) from wire SOCnexpo.$techmap\RV32I.alu.$ternary$Procesador_V2.0b/ALU.v:56$201_Y.
Removed top 9 bits (of 33) from wire SOCnexpo.$techmap\RV32I.alu.$ternary$Procesador_V2.0b/ALU.v:56$203_Y.
Removed top 8 bits (of 32) from wire SOCnexpo.$techmap\RV32I.alu.$ternary$Procesador_V2.0b/ALU.v:57$204_Y.
Removed top 9 bits (of 33) from wire SOCnexpo.$techmap\RV32I.alu.$ternary$Procesador_V2.0b/ALU.v:62$220_Y.
Removed top 25 bits (of 32) from wire SOCnexpo.$techmap\UART_RX.$add$uart.v:172$423_Y.
Removed top 27 bits (of 32) from wire SOCnexpo.$techmap\UART_RX.$add$uart.v:207$430_Y.
Removed top 25 bits (of 32) from wire SOCnexpo.$techmap\UART_RX.bclk.$add$uart.v:39$603_Y.
Removed top 31 bits (of 32) from wire SOCnexpo.$techmap\UART_TX.bclk.$add$uart.v:39$603_Y.
Removed top 1 bits (of 8) from wire SOCnexpo.RV32I.D_funct7.
Removed top 1 bits (of 8) from wire SOCnexpo.RV32I.D_opcode.
Removed top 23 bits (of 32) from wire SOCnexpo.UART_data.
Removed top 1 bits (of 32) from wire SOCnexpo.palabra.

4.12. Executing PEEPOPT pass (run peephole optimizers).

4.13. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \SOCnexpo..
Removed 0 unused cells and 55 unused wires.

4.14. Executing SHARE pass (SAT-based resource sharing).
Found 2 cells in module SOCnexpo that may be considered for resource sharing.
Analyzing resource sharing options for $techmap\RV32I.alu.$sshr$Procesador_V2.0b/ALU.v:38$190 ($sshr):
Found 4 activation_patterns using ctrl signal { \RV32I.alu.funcionIs [5] \RV32I.alu.funcionIs [1] \RV32I.DE_isJALR \RV32I.E_Jump \RV32I.E_JumpOrBranch \rst }.
No candidates found.
Analyzing resource sharing options for $techmap\RV32I.alu.$shl$Procesador_V2.0b/ALU.v:31$187 ($shl):
Found 7 activation_patterns using ctrl signal { \RV32I.alu.funcionIs [5] \RV32I.alu.funcionIs [1] \RV32I.DE_isJALR \RV32I.E_Jump \RV32I.E_JumpOrBranch \rst }.
No candidates found.

4.15. Executing TECHMAP pass (map to technology primitives).

4.15.1. Executing Verilog-2005 frontend: /home/jfdava/.apio/packages/toolchain-yosys/bin/../share/yosys/cmp2lut.v
Parsing Verilog input from `/home/jfdava/.apio/packages/toolchain-yosys/bin/../share/yosys/cmp2lut.v' to AST representation.
Generating RTLIL representation for module `\_90_lut_cmp_'.
Successfully finished Verilog frontend.

4.15.2. Continuing TECHMAP pass.
No more expansions possible.

4.16. Executing OPT_EXPR pass (perform const folding).
Optimizing module SOCnexpo.

4.17. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \SOCnexpo..
Removed 0 unused cells and 6 unused wires.

4.18. Executing ALUMACC pass (create $alu and $macc cells).
Extracting $alu and $macc cells in module SOCnexpo:
creating $macc model for $add$SOCnexpoV8_.v:28$326 ($add).
creating $macc model for $techmap\LEDS8_4.$add$ControladorMatrizLed.v:28$2 ($add).
creating $macc model for $techmap\RV32I.$add$Procesador_V2.0b/RV32nexpo.v:100$266 ($add).
creating $macc model for $techmap\RV32I.$add$Procesador_V2.0b/RV32nexpo.v:338$299 ($add).
creating $macc model for $techmap\RV32I.$add$Procesador_V2.0b/RV32nexpo.v:483$320 ($add).
creating $macc model for $techmap\RV32I.$add$Procesador_V2.0b/RV32nexpo.v:484$322 ($add).
creating $macc model for $techmap\RV32I.alu.$add$Procesador_V2.0b/ALU.v:47$192 ($add).
creating $macc model for $techmap\RV32I.alu.$add$Procesador_V2.0b/ALU.v:47$193 ($add).
creating $macc model for $techmap\RV32I.alu.$add$Procesador_V2.0b/ALU.v:56$200 ($add).
creating $macc model for $techmap\UART_RX.$add$uart.v:172$423 ($add).
creating $macc model for $techmap\UART_RX.$add$uart.v:207$430 ($add).
creating $macc model for $techmap\UART_RX.bclk.$add$uart.v:39$603 ($add).
creating $macc model for $techmap\UART_TX.$add$uart.v:98$406 ($add).
creating $macc model for $techmap\UART_TX.bclk.$add$uart.v:39$603 ($add).
merging $macc model for $techmap\RV32I.alu.$add$Procesador_V2.0b/ALU.v:47$192 into $techmap\RV32I.alu.$add$Procesador_V2.0b/ALU.v:47$193.
creating $alu model for $macc $techmap\UART_TX.$add$uart.v:98$406.
creating $alu model for $macc $techmap\UART_RX.bclk.$add$uart.v:39$603.
creating $alu model for $macc $techmap\UART_RX.$add$uart.v:207$430.
creating $alu model for $macc $techmap\UART_RX.$add$uart.v:172$423.
creating $alu model for $macc $techmap\RV32I.alu.$add$Procesador_V2.0b/ALU.v:56$200.
creating $alu model for $macc $techmap\RV32I.alu.$add$Procesador_V2.0b/ALU.v:47$193.
creating $alu model for $macc $techmap\UART_TX.bclk.$add$uart.v:39$603.
creating $alu model for $macc $techmap\RV32I.$add$Procesador_V2.0b/RV32nexpo.v:484$322.
creating $alu model for $macc $techmap\RV32I.$add$Procesador_V2.0b/RV32nexpo.v:483$320.
creating $alu model for $macc $techmap\RV32I.$add$Procesador_V2.0b/RV32nexpo.v:338$299.
creating $alu model for $macc $techmap\RV32I.$add$Procesador_V2.0b/RV32nexpo.v:100$266.
creating $alu model for $macc $techmap\LEDS8_4.$add$ControladorMatrizLed.v:28$2.
creating $alu model for $macc $add$SOCnexpoV8_.v:28$326.
creating $alu model for $techmap\LEDS8_4.$le$ControladorMatrizLed.v:38$3 ($le): new $alu
creating $alu model for $techmap\UART_RX.$lt$uart.v:171$422 ($lt): new $alu
creating $alu model for $techmap\UART_RX.$eq$uart.v:176$424 ($eq): merged with $techmap\UART_RX.$lt$uart.v:171$422.
creating $alu cell for $techmap\UART_RX.$lt$uart.v:171$422, $techmap\UART_RX.$eq$uart.v:176$424: $auto$alumacc.cc:485:replace_alu$1379
creating $alu cell for $techmap\LEDS8_4.$le$ControladorMatrizLed.v:38$3: $auto$alumacc.cc:485:replace_alu$1390
creating $alu cell for $add$SOCnexpoV8_.v:28$326: $auto$alumacc.cc:485:replace_alu$1403
creating $alu cell for $techmap\LEDS8_4.$add$ControladorMatrizLed.v:28$2: $auto$alumacc.cc:485:replace_alu$1406
creating $alu cell for $techmap\RV32I.$add$Procesador_V2.0b/RV32nexpo.v:100$266: $auto$alumacc.cc:485:replace_alu$1409
creating $alu cell for $techmap\RV32I.$add$Procesador_V2.0b/RV32nexpo.v:338$299: $auto$alumacc.cc:485:replace_alu$1412
creating $alu cell for $techmap\RV32I.$add$Procesador_V2.0b/RV32nexpo.v:483$320: $auto$alumacc.cc:485:replace_alu$1415
creating $alu cell for $techmap\RV32I.$add$Procesador_V2.0b/RV32nexpo.v:484$322: $auto$alumacc.cc:485:replace_alu$1418
creating $alu cell for $techmap\UART_TX.bclk.$add$uart.v:39$603: $auto$alumacc.cc:485:replace_alu$1421
creating $alu cell for $techmap\RV32I.alu.$add$Procesador_V2.0b/ALU.v:47$193: $auto$alumacc.cc:485:replace_alu$1424
creating $alu cell for $techmap\RV32I.alu.$add$Procesador_V2.0b/ALU.v:56$200: $auto$alumacc.cc:485:replace_alu$1427
creating $alu cell for $techmap\UART_RX.$add$uart.v:172$423: $auto$alumacc.cc:485:replace_alu$1430
creating $alu cell for $techmap\UART_RX.$add$uart.v:207$430: $auto$alumacc.cc:485:replace_alu$1433
creating $alu cell for $techmap\UART_RX.bclk.$add$uart.v:39$603: $auto$alumacc.cc:485:replace_alu$1436
creating $alu cell for $techmap\UART_TX.$add$uart.v:98$406: $auto$alumacc.cc:485:replace_alu$1439
created 15 $alu and 0 $macc cells.

4.19. Executing OPT pass (performing simple optimizations).

4.19.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module SOCnexpo.

4.19.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\SOCnexpo'.
Removed a total of 3 cells.

4.19.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \SOCnexpo..
Creating internal representation of mux trees.
Evaluating internal representation of mux trees.
Analyzing evaluation results.
Removed 0 multiplexer ports.

4.19.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
Optimizing cells in module \SOCnexpo.
New input vector for $reduce_or cell $auto$alumacc.cc:520:replace_alu$1401: { $auto$rtlil.cc:1862:Not$1400 $auto$rtlil.cc:1865:ReduceAnd$1396 }
New input vector for $reduce_and cell $auto$alumacc.cc:75:get_eq$1395: { $auto$alumacc.cc:501:replace_alu$1391 [0] $auto$alumacc.cc:501:replace_alu$1391 [1] $auto$alumacc.cc:501:replace_alu$1391 [2] $auto$alumacc.cc:501:replace_alu$1391 [3] $auto$alumacc.cc:501:replace_alu$1391 [4] $auto$alumacc.cc:501:replace_alu$1391 [5] $auto$alumacc.cc:501:replace_alu$1391 [6] $auto$alumacc.cc:501:replace_alu$1391 [7] $auto$alumacc.cc:501:replace_alu$1391 [8] $auto$alumacc.cc:501:replace_alu$1391 [9] }
New input vector for $reduce_and cell $auto$alumacc.cc:75:get_eq$1384: { $auto$alumacc.cc:501:replace_alu$1380 [0] $auto$alumacc.cc:501:replace_alu$1380 [1] $auto$alumacc.cc:501:replace_alu$1380 [2] $auto$alumacc.cc:501:replace_alu$1380 [3] $auto$alumacc.cc:501:replace_alu$1380 [4] $auto$alumacc.cc:501:replace_alu$1380 [5] $auto$alumacc.cc:501:replace_alu$1380 [6] }
Optimizing cells in module \SOCnexpo.
Performed a total of 3 changes.

4.19.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\SOCnexpo'.
Removed a total of 0 cells.

4.19.6. Executing OPT_RMDFF pass (remove dff with constant values).

4.19.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \SOCnexpo..
Removed 2 unused cells and 8 unused wires.

4.19.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module SOCnexpo.

4.19.9. Rerunning OPT passes. (Maybe there is more to do..)

4.19.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \SOCnexpo..
Creating internal representation of mux trees.
Evaluating internal representation of mux trees.
Analyzing evaluation results.
Removed 0 multiplexer ports.

4.19.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
Optimizing cells in module \SOCnexpo.
Performed a total of 0 changes.

4.19.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\SOCnexpo'.
Removed a total of 0 cells.

4.19.13. Executing OPT_RMDFF pass (remove dff with constant values).

4.19.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \SOCnexpo..

4.19.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module SOCnexpo.

4.19.16. Finished OPT passes. (There is nothing left to do.)

4.20. Executing FSM pass (extract and optimize FSM).

4.20.1. Executing FSM_DETECT pass (finding FSMs in design).
Not marking SOCnexpo.LEDS8_4.act_row as FSM state register:
Register is connected to module port.
Users of register don't seem to benefit from recoding.

4.20.2. Executing FSM_EXTRACT pass (extracting FSM from design).

4.20.3. Executing FSM_OPT pass (simple optimizations of FSMs).

4.20.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \SOCnexpo..

4.20.5. Executing FSM_OPT pass (simple optimizations of FSMs).

4.20.6. Executing FSM_RECODE pass (re-assigning FSM state encoding).

4.20.7. Executing FSM_INFO pass (dumping all available information on FSM cells).

4.20.8. Executing FSM_MAP pass (mapping FSMs to basic logic).

4.21. Executing OPT pass (performing simple optimizations).

4.21.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module SOCnexpo.

4.21.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\SOCnexpo'.
Removed a total of 0 cells.

4.21.3. Executing OPT_RMDFF pass (remove dff with constant values).

4.21.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \SOCnexpo..

4.21.5. Finished fast OPT passes.

4.22. Executing MEMORY pass.

4.22.1. Executing OPT_MEM pass (optimize memories).
Performed a total of 0 transformations.

4.22.2. Executing MEMORY_DFF pass (merging $dff cells to $memrd and $memwr).
Checking cell `$techmap\RAM.$memwr$\memArray$SOCnexpoV8_.v:263$595' in module `\SOCnexpo': merged $dff to cell.
Checking cell `$techmap\RAM.$memwr$\memArray$SOCnexpoV8_.v:264$596' in module `\SOCnexpo': merged $dff to cell.
Checking cell `$techmap\RAM.$memwr$\memArray$SOCnexpoV8_.v:265$597' in module `\SOCnexpo': merged $dff to cell.
Checking cell `$techmap\RAM.$memwr$\memArray$SOCnexpoV8_.v:266$598' in module `\SOCnexpo': merged $dff to cell.
Checking cell `$techmap\RV32I.reg32.$memwr$\WORKREG$Procesador_V2.0b/registros_32.v:43$118' in module `\SOCnexpo': merged $dff to cell.
Checking cell `$memrd$\MEMROM$SOCnexpoV8_.v:47$330' in module `\SOCnexpo': merged data $dff to cell.
Checking cell `$techmap\RAM.$memrd$\memArray$SOCnexpoV8_.v:268$593' in module `\SOCnexpo': merged data $dff to cell.
Checking cell `$techmap\RV32I.reg32.$memrd$\WORKREG$Procesador_V2.0b/registros_32.v:35$78' in module `\SOCnexpo': merged data $dff to cell.
Checking cell `$techmap\RV32I.reg32.$memrd$\WORKREG$Procesador_V2.0b/registros_32.v:38$79' in module `\SOCnexpo': merged data $dff to cell.

4.22.3. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \SOCnexpo..
Removed 16 unused cells and 22 unused wires.

4.22.4. Executing MEMORY_SHARE pass (consolidating $memrd/$memwr cells).
Consolidating write ports of memory SOCnexpo.RAM.memArray by address:
New clock domain: posedge \clk12MHz
Port 0 ($techmap\RAM.$memwr$\memArray$SOCnexpoV8_.v:263$595) has addr \RV32I.EM_resultado [12:2].
Active bits: 00000000000000000000000011111111
Port 1 ($techmap\RAM.$memwr$\memArray$SOCnexpoV8_.v:264$596) has addr \RV32I.EM_resultado [12:2].
Active bits: 00000000000000001111111100000000
Merging port 0 into this one.
Active bits: 00000000000000001111111111111111
Port 2 ($techmap\RAM.$memwr$\memArray$SOCnexpoV8_.v:265$597) has addr \RV32I.EM_resultado [12:2].
Active bits: 00000000111111110000000000000000
Merging port 1 into this one.
Active bits: 00000000111111111111111111111111
Port 3 ($techmap\RAM.$memwr$\memArray$SOCnexpoV8_.v:266$598) has addr \RV32I.EM_resultado [12:2].
Active bits: 11111111000000000000000000000000
Merging port 2 into this one.
Active bits: 11111111111111111111111111111111

4.22.5. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \SOCnexpo..

4.22.6. Executing MEMORY_COLLECT pass (generating $mem cells).
Collecting $memrd, $memwr and $meminit for memory `\MEMROM' in module `\SOCnexpo':
$meminit$\MEMROM$SOCnexpoV8_.v:42$357 ($meminit)
$memrd$\MEMROM$SOCnexpoV8_.v:47$330 ($memrd)
Collecting $memrd, $memwr and $meminit for memory `\RAM.memArray' in module `\SOCnexpo':
$techmap\RAM.$meminit$\memArray$SOCnexpoV8_.v:258$594 ($meminit)
$techmap\RAM.$memwr$\memArray$SOCnexpoV8_.v:266$598 ($memwr)
$techmap\RAM.$memrd$\memArray$SOCnexpoV8_.v:268$593 ($memrd)
Collecting $memrd, $memwr and $meminit for memory `\RV32I.reg32.WORKREG' in module `\SOCnexpo':
$techmap\RV32I.reg32.$meminit$\WORKREG$Procesador_V2.0b/registros_32.v:30$86 ($meminit)
$techmap\RV32I.reg32.$meminit$\WORKREG$Procesador_V2.0b/registros_32.v:30$87 ($meminit)
$techmap\RV32I.reg32.$meminit$\WORKREG$Procesador_V2.0b/registros_32.v:30$88 ($meminit)
$techmap\RV32I.reg32.$meminit$\WORKREG$Procesador_V2.0b/registros_32.v:30$89 ($meminit)
$techmap\RV32I.reg32.$meminit$\WORKREG$Procesador_V2.0b/registros_32.v:30$90 ($meminit)
$techmap\RV32I.reg32.$meminit$\WORKREG$Procesador_V2.0b/registros_32.v:30$91 ($meminit)
$techmap\RV32I.reg32.$meminit$\WORKREG$Procesador_V2.0b/registros_32.v:30$92 ($meminit)
$techmap\RV32I.reg32.$meminit$\WORKREG$Procesador_V2.0b/registros_32.v:30$93 ($meminit)
$techmap\RV32I.reg32.$meminit$\WORKREG$Procesador_V2.0b/registros_32.v:30$94 ($meminit)
$techmap\RV32I.reg32.$meminit$\WORKREG$Procesador_V2.0b/registros_32.v:30$95 ($meminit)
$techmap\RV32I.reg32.$meminit$\WORKREG$Procesador_V2.0b/registros_32.v:30$96 ($meminit)
$techmap\RV32I.reg32.$meminit$\WORKREG$Procesador_V2.0b/registros_32.v:30$97 ($meminit)
$techmap\RV32I.reg32.$meminit$\WORKREG$Procesador_V2.0b/registros_32.v:30$98 ($meminit)
$techmap\RV32I.reg32.$meminit$\WORKREG$Procesador_V2.0b/registros_32.v:30$99 ($meminit)
$techmap\RV32I.reg32.$meminit$\WORKREG$Procesador_V2.0b/registros_32.v:30$100 ($meminit)
$techmap\RV32I.reg32.$meminit$\WORKREG$Procesador_V2.0b/registros_32.v:30$101 ($meminit)
$techmap\RV32I.reg32.$meminit$\WORKREG$Procesador_V2.0b/registros_32.v:30$102 ($meminit)
$techmap\RV32I.reg32.$meminit$\WORKREG$Procesador_V2.0b/registros_32.v:30$103 ($meminit)
$techmap\RV32I.reg32.$meminit$\WORKREG$Procesador_V2.0b/registros_32.v:30$104 ($meminit)
$techmap\RV32I.reg32.$meminit$\WORKREG$Procesador_V2.0b/registros_32.v:30$105 ($meminit)
$techmap\RV32I.reg32.$meminit$\WORKREG$Procesador_V2.0b/registros_32.v:30$106 ($meminit)
$techmap\RV32I.reg32.$meminit$\WORKREG$Procesador_V2.0b/registros_32.v:30$107 ($meminit)
$techmap\RV32I.reg32.$meminit$\WORKREG$Procesador_V2.0b/registros_32.v:30$108 ($meminit)
$techmap\RV32I.reg32.$meminit$\WORKREG$Procesador_V2.0b/registros_32.v:30$109 ($meminit)
$techmap\RV32I.reg32.$meminit$\WORKREG$Procesador_V2.0b/registros_32.v:30$110 ($meminit)
$techmap\RV32I.reg32.$meminit$\WORKREG$Procesador_V2.0b/registros_32.v:30$111 ($meminit)
$techmap\RV32I.reg32.$meminit$\WORKREG$Procesador_V2.0b/registros_32.v:30$112 ($meminit)
$techmap\RV32I.reg32.$meminit$\WORKREG$Procesador_V2.0b/registros_32.v:30$113 ($meminit)
$techmap\RV32I.reg32.$meminit$\WORKREG$Procesador_V2.0b/registros_32.v:30$114 ($meminit)
$techmap\RV32I.reg32.$meminit$\WORKREG$Procesador_V2.0b/registros_32.v:30$115 ($meminit)
$techmap\RV32I.reg32.$meminit$\WORKREG$Procesador_V2.0b/registros_32.v:30$116 ($meminit)
$techmap\RV32I.reg32.$meminit$\WORKREG$Procesador_V2.0b/registros_32.v:30$117 ($meminit)
$techmap\RV32I.reg32.$memwr$\WORKREG$Procesador_V2.0b/registros_32.v:43$118 ($memwr)
$techmap\RV32I.reg32.$memrd$\WORKREG$Procesador_V2.0b/registros_32.v:38$79 ($memrd)
$techmap\RV32I.reg32.$memrd$\WORKREG$Procesador_V2.0b/registros_32.v:35$78 ($memrd)

4.23. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \SOCnexpo..

4.24. Executing MEMORY_BRAM pass (mapping $mem cells to block memories).
Processing SOCnexpo.MEMROM:
Properties: ports=1 bits=65536 rports=1 wports=0 dbits=32 abits=11 words=2048
Checking rule #1 for bram type $__ICE40_RAM4K_M0 (variant 1):
Bram geometry: abits=8 dbits=16 wports=0 rports=0
Estimated number of duplicates for more read ports: dups=1
Metrics for $__ICE40_RAM4K_M0: awaste=0 dwaste=0 bwaste=0 waste=0 efficiency=100
Rule #1 for bram type $__ICE40_RAM4K_M0 (variant 1) accepted.
Mapping to bram type $__ICE40_RAM4K_M0 (variant 1):
Read port #0 is in clock domain \clk12MHz.
Mapped to bram port A1.1.
Updated properties: dups=1 waste=0 efficiency=100
Storing for later selection.
Checking rule #2 for bram type $__ICE40_RAM4K_M123 (variant 1):
Bram geometry: abits=9 dbits=8 wports=0 rports=0
Estimated number of duplicates for more read ports: dups=1
Metrics for $__ICE40_RAM4K_M123: awaste=0 dwaste=0 bwaste=0 waste=0 efficiency=100
Rule #2 for bram type $__ICE40_RAM4K_M123 (variant 1) accepted.
Mapping to bram type $__ICE40_RAM4K_M123 (variant 1):
Read port #0 is in clock domain \clk12MHz.
Mapped to bram port A1.1.
Updated properties: dups=1 waste=0 efficiency=100
Storing for later selection.
Checking rule #2 for bram type $__ICE40_RAM4K_M123 (variant 2):
Bram geometry: abits=10 dbits=4 wports=0 rports=0
Estimated number of duplicates for more read ports: dups=1
Metrics for $__ICE40_RAM4K_M123: awaste=0 dwaste=0 bwaste=0 waste=0 efficiency=100
Rule #2 for bram type $__ICE40_RAM4K_M123 (variant 2) accepted.
Mapping to bram type $__ICE40_RAM4K_M123 (variant 2):
Read port #0 is in clock domain \clk12MHz.
Mapped to bram port A1.1.
Updated properties: dups=1 waste=0 efficiency=100
Storing for later selection.
Checking rule #2 for bram type $__ICE40_RAM4K_M123 (variant 3):
Bram geometry: abits=11 dbits=2 wports=0 rports=0
Estimated number of duplicates for more read ports: dups=1
Metrics for $__ICE40_RAM4K_M123: awaste=0 dwaste=0 bwaste=0 waste=0 efficiency=100
Rule #2 for bram type $__ICE40_RAM4K_M123 (variant 3) accepted.
Mapping to bram type $__ICE40_RAM4K_M123 (variant 3):
Read port #0 is in clock domain \clk12MHz.
Mapped to bram port A1.1.
Updated properties: dups=1 waste=0 efficiency=100
Storing for later selection.
Selecting best of 4 rules:
Efficiency for rule 2.3: efficiency=100, cells=16, acells=1
Efficiency for rule 2.2: efficiency=100, cells=16, acells=2
Efficiency for rule 2.1: efficiency=100, cells=16, acells=4
Efficiency for rule 1.1: efficiency=100, cells=16, acells=8
Selected rule 2.3 with efficiency 100.
Mapping to bram type $__ICE40_RAM4K_M123 (variant 3):
Read port #0 is in clock domain \clk12MHz.
Mapped to bram port A1.1.
Creating $__ICE40_RAM4K_M123 cell at grid position <0 0 0>: MEMROM.0.0.0
Creating $__ICE40_RAM4K_M123 cell at grid position <1 0 0>: MEMROM.1.0.0
Creating $__ICE40_RAM4K_M123 cell at grid position <2 0 0>: MEMROM.2.0.0
Creating $__ICE40_RAM4K_M123 cell at grid position <3 0 0>: MEMROM.3.0.0
Creating $__ICE40_RAM4K_M123 cell at grid position <4 0 0>: MEMROM.4.0.0
Creating $__ICE40_RAM4K_M123 cell at grid position <5 0 0>: MEMROM.5.0.0
Creating $__ICE40_RAM4K_M123 cell at grid position <6 0 0>: MEMROM.6.0.0
Creating $__ICE40_RAM4K_M123 cell at grid position <7 0 0>: MEMROM.7.0.0
Creating $__ICE40_RAM4K_M123 cell at grid position <8 0 0>: MEMROM.8.0.0
Creating $__ICE40_RAM4K_M123 cell at grid position <9 0 0>: MEMROM.9.0.0
Creating $__ICE40_RAM4K_M123 cell at grid position <10 0 0>: MEMROM.10.0.0
Creating $__ICE40_RAM4K_M123 cell at grid position <11 0 0>: MEMROM.11.0.0
Creating $__ICE40_RAM4K_M123 cell at grid position <12 0 0>: MEMROM.12.0.0
Creating $__ICE40_RAM4K_M123 cell at grid position <13 0 0>: MEMROM.13.0.0
Creating $__ICE40_RAM4K_M123 cell at grid position <14 0 0>: MEMROM.14.0.0
Creating $__ICE40_RAM4K_M123 cell at grid position <15 0 0>: MEMROM.15.0.0
Processing SOCnexpo.RAM.memArray:
Properties: ports=2 bits=65536 rports=1 wports=1 dbits=32 abits=11 words=2048
Checking rule #1 for bram type $__ICE40_RAM4K_M0 (variant 1):
Bram geometry: abits=8 dbits=16 wports=0 rports=0
Estimated number of duplicates for more read ports: dups=1
Metrics for $__ICE40_RAM4K_M0: awaste=0 dwaste=0 bwaste=0 waste=0 efficiency=100
Rule #1 for bram type $__ICE40_RAM4K_M0 (variant 1) accepted.
Mapping to bram type $__ICE40_RAM4K_M0 (variant 1):
Write port #0 is in clock domain \clk12MHz.
Mapped to bram port B1.
Read port #0 is in clock domain \clk12MHz.
Mapped to bram port A1.1.
Updated properties: dups=1 waste=0 efficiency=100
Storing for later selection.
Checking rule #2 for bram type $__ICE40_RAM4K_M123 (variant 1):
Bram geometry: abits=9 dbits=8 wports=0 rports=0
Estimated number of duplicates for more read ports: dups=1
Metrics for $__ICE40_RAM4K_M123: awaste=0 dwaste=0 bwaste=0 waste=0 efficiency=100
Rule #2 for bram type $__ICE40_RAM4K_M123 (variant 1) accepted.
Mapping to bram type $__ICE40_RAM4K_M123 (variant 1):
Write port #0 is in clock domain \clk12MHz.
Mapped to bram port B1.
Read port #0 is in clock domain \clk12MHz.
Mapped to bram port A1.1.
Updated properties: dups=1 waste=0 efficiency=100
Storing for later selection.
Checking rule #2 for bram type $__ICE40_RAM4K_M123 (variant 2):
Bram geometry: abits=10 dbits=4 wports=0 rports=0
Estimated number of duplicates for more read ports: dups=1
Metrics for $__ICE40_RAM4K_M123: awaste=0 dwaste=0 bwaste=0 waste=0 efficiency=100
Rule #2 for bram type $__ICE40_RAM4K_M123 (variant 2) accepted.
Mapping to bram type $__ICE40_RAM4K_M123 (variant 2):
Write port #0 is in clock domain \clk12MHz.
Mapped to bram port B1.
Read port #0 is in clock domain \clk12MHz.
Mapped to bram port A1.1.
Updated properties: dups=1 waste=0 efficiency=100
Storing for later selection.
Checking rule #2 for bram type $__ICE40_RAM4K_M123 (variant 3):
Bram geometry: abits=11 dbits=2 wports=0 rports=0
Estimated number of duplicates for more read ports: dups=1
Metrics for $__ICE40_RAM4K_M123: awaste=0 dwaste=0 bwaste=0 waste=0 efficiency=100
Rule #2 for bram type $__ICE40_RAM4K_M123 (variant 3) accepted.
Mapping to bram type $__ICE40_RAM4K_M123 (variant 3):
Write port #0 is in clock domain \clk12MHz.
Mapped to bram port B1.
Read port #0 is in clock domain \clk12MHz.
Mapped to bram port A1.1.
Updated properties: dups=1 waste=0 efficiency=100
Storing for later selection.
Selecting best of 4 rules:
Efficiency for rule 2.3: efficiency=100, cells=16, acells=1
Efficiency for rule 2.2: efficiency=100, cells=16, acells=2
Efficiency for rule 2.1: efficiency=100, cells=16, acells=4
Efficiency for rule 1.1: efficiency=100, cells=16, acells=8
Selected rule 2.3 with efficiency 100.
Mapping to bram type $__ICE40_RAM4K_M123 (variant 3):
Write port #0 is in clock domain \clk12MHz.
Mapped to bram port B1.
Read port #0 is in clock domain \clk12MHz.
Mapped to bram port A1.1.
Creating $__ICE40_RAM4K_M123 cell at grid position <0 0 0>: RAM.memArray.0.0.0
Creating $__ICE40_RAM4K_M123 cell at grid position <1 0 0>: RAM.memArray.1.0.0
Creating $__ICE40_RAM4K_M123 cell at grid position <2 0 0>: RAM.memArray.2.0.0
Creating $__ICE40_RAM4K_M123 cell at grid position <3 0 0>: RAM.memArray.3.0.0
Creating $__ICE40_RAM4K_M123 cell at grid position <4 0 0>: RAM.memArray.4.0.0
Creating $__ICE40_RAM4K_M123 cell at grid position <5 0 0>: RAM.memArray.5.0.0
Creating $__ICE40_RAM4K_M123 cell at grid position <6 0 0>: RAM.memArray.6.0.0
Creating $__ICE40_RAM4K_M123 cell at grid position <7 0 0>: RAM.memArray.7.0.0
Creating $__ICE40_RAM4K_M123 cell at grid position <8 0 0>: RAM.memArray.8.0.0
Creating $__ICE40_RAM4K_M123 cell at grid position <9 0 0>: RAM.memArray.9.0.0
Creating $__ICE40_RAM4K_M123 cell at grid position <10 0 0>: RAM.memArray.10.0.0
Creating $__ICE40_RAM4K_M123 cell at grid position <11 0 0>: RAM.memArray.11.0.0
Creating $__ICE40_RAM4K_M123 cell at grid position <12 0 0>: RAM.memArray.12.0.0
Creating $__ICE40_RAM4K_M123 cell at grid position <13 0 0>: RAM.memArray.13.0.0
Creating $__ICE40_RAM4K_M123 cell at grid position <14 0 0>: RAM.memArray.14.0.0
Creating $__ICE40_RAM4K_M123 cell at grid position <15 0 0>: RAM.memArray.15.0.0
Processing SOCnexpo.RV32I.reg32.WORKREG:
Properties: ports=3 bits=1024 rports=2 wports=1 dbits=32 abits=5 words=32
Checking rule #1 for bram type $__ICE40_RAM4K_M0 (variant 1):
Bram geometry: abits=8 dbits=16 wports=0 rports=0
Estimated number of duplicates for more read ports: dups=1
Metrics for $__ICE40_RAM4K_M0: awaste=224 dwaste=0 bwaste=3584 waste=3584 efficiency=12
Rule #1 for bram type $__ICE40_RAM4K_M0 (variant 1) accepted.
Mapping to bram type $__ICE40_RAM4K_M0 (variant 1):
Write port #0 is in clock domain \clk12MHz.
Mapped to bram port B1.
Read port #0 is in clock domain \clk12MHz.
Mapped to bram port A1.1.
Read port #1 is in clock domain \clk12MHz.
Failed to map read port #1.
Growing more read ports by duplicating bram cells.
Read port #0 is in clock domain \clk12MHz.
Mapped to bram port A1.1.
Read port #1 is in clock domain \clk12MHz.
Mapped to bram port A1.2.
Updated properties: dups=2 waste=7168 efficiency=6
Storing for later selection.
Checking rule #2 for bram type $__ICE40_RAM4K_M123 (variant 1):
Bram geometry: abits=9 dbits=8 wports=0 rports=0
Estimated number of duplicates for more read ports: dups=1
Metrics for $__ICE40_RAM4K_M123: awaste=480 dwaste=0 bwaste=3840 waste=3840 efficiency=6
Rule #2 for bram type $__ICE40_RAM4K_M123 (variant 1) accepted.
Mapping to bram type $__ICE40_RAM4K_M123 (variant 1):
Write port #0 is in clock domain \clk12MHz.
Mapped to bram port B1.
Read port #0 is in clock domain \clk12MHz.
Mapped to bram port A1.1.
Read port #1 is in clock domain \clk12MHz.
Failed to map read port #1.
Growing more read ports by duplicating bram cells.
Read port #0 is in clock domain \clk12MHz.
Mapped to bram port A1.1.
Read port #1 is in clock domain \clk12MHz.
Mapped to bram port A1.2.
Updated properties: dups=2 waste=7680 efficiency=3
Storing for later selection.
Checking rule #2 for bram type $__ICE40_RAM4K_M123 (variant 2):
Bram geometry: abits=10 dbits=4 wports=0 rports=0
Estimated number of duplicates for more read ports: dups=1
Metrics for $__ICE40_RAM4K_M123: awaste=992 dwaste=0 bwaste=3968 waste=3968 efficiency=3
Rule #2 for bram type $__ICE40_RAM4K_M123 (variant 2) accepted.
Mapping to bram type $__ICE40_RAM4K_M123 (variant 2):
Write port #0 is in clock domain \clk12MHz.
Mapped to bram port B1.
Read port #0 is in clock domain \clk12MHz.
Mapped to bram port A1.1.
Read port #1 is in clock domain \clk12MHz.
Failed to map read port #1.
Growing more read ports by duplicating bram cells.
Read port #0 is in clock domain \clk12MHz.
Mapped to bram port A1.1.
Read port #1 is in clock domain \clk12MHz.
Mapped to bram port A1.2.
Updated properties: dups=2 waste=7936 efficiency=1
Rule for bram type $__ICE40_RAM4K_M123 rejected: requirement 'min efficiency 2' not met.
Mapping to bram type $__ICE40_RAM4K_M123 failed.
Checking rule #2 for bram type $__ICE40_RAM4K_M123 (variant 3):
Bram geometry: abits=11 dbits=2 wports=0 rports=0
Estimated number of duplicates for more read ports: dups=1
Metrics for $__ICE40_RAM4K_M123: awaste=2016 dwaste=0 bwaste=4032 waste=4032 efficiency=1
Rule #2 for bram type $__ICE40_RAM4K_M123 (variant 3) rejected: requirement 'min efficiency 2' not met.
Selecting best of 2 rules:
Efficiency for rule 2.1: efficiency=3, cells=8, acells=1
Efficiency for rule 1.1: efficiency=6, cells=4, acells=1
Selected rule 1.1 with efficiency 6.
Mapping to bram type $__ICE40_RAM4K_M0 (variant 1):
Write port #0 is in clock domain \clk12MHz.
Mapped to bram port B1.
Read port #0 is in clock domain \clk12MHz.
Mapped to bram port A1.1.
Read port #1 is in clock domain \clk12MHz.
Failed to map read port #1.
Growing more read ports by duplicating bram cells.
Read port #0 is in clock domain \clk12MHz.
Mapped to bram port A1.1.
Read port #1 is in clock domain \clk12MHz.
Mapped to bram port A1.2.
Creating $__ICE40_RAM4K_M0 cell at grid position <0 0 0>: RV32I.reg32.WORKREG.0.0.0
Creating $__ICE40_RAM4K_M0 cell at grid position <0 0 1>: RV32I.reg32.WORKREG.0.0.1
Creating $__ICE40_RAM4K_M0 cell at grid position <1 0 0>: RV32I.reg32.WORKREG.1.0.0
Creating $__ICE40_RAM4K_M0 cell at grid position <1 0 1>: RV32I.reg32.WORKREG.1.0.1

4.25. Executing TECHMAP pass (map to technology primitives).

4.25.1. Executing Verilog-2005 frontend: /home/jfdava/.apio/packages/toolchain-yosys/bin/../share/yosys/ice40/brams_map.v
Parsing Verilog input from `/home/jfdava/.apio/packages/toolchain-yosys/bin/../share/yosys/ice40/brams_map.v' to AST representation.
Generating RTLIL representation for module `\$__ICE40_RAM4K'.
Generating RTLIL representation for module `\$__ICE40_RAM4K_M0'.
Generating RTLIL representation for module `\$__ICE40_RAM4K_M123'.
Successfully finished Verilog frontend.

4.25.2. Continuing TECHMAP pass.
Using template $paramod$49da78f14376c226e3f73898b86349d2523b6092\$__ICE40_RAM4K_M123 for cells of type $__ICE40_RAM4K_M123.
Using template $paramod$a8aa7d12844ac8b0d870ac804d4149ae6f078986\$__ICE40_RAM4K_M123 for cells of type $__ICE40_RAM4K_M123.
Using template $paramod$e7da016e61eb174bc4a157898a70972884970ec1\$__ICE40_RAM4K_M123 for cells of type $__ICE40_RAM4K_M123.
Using template $paramod$732cb071c562212ef3fc6e2f3380ae189ce1250d\$__ICE40_RAM4K_M0 for cells of type $__ICE40_RAM4K_M0.
Using template $paramod$8c9caa9c316a640b79d653050021d5a2b518ca58\$__ICE40_RAM4K_M123 for cells of type $__ICE40_RAM4K_M123.
Using template $paramod$8065e31cc199b6cff6b083f1ad4bbb23eb7038da\$__ICE40_RAM4K_M123 for cells of type $__ICE40_RAM4K_M123.
Using template $paramod$43e316d8c83333e77d3cda6acbe2e82aee4ba905\$__ICE40_RAM4K_M123 for cells of type $__ICE40_RAM4K_M123.
Using template $paramod$0e44341c6359cd699a4f2624e0c6abd2aaa97866\$__ICE40_RAM4K_M123 for cells of type $__ICE40_RAM4K_M123.
Using template $paramod$253ec975b63a5a47e1562e71285c7fdecc505f28\$__ICE40_RAM4K_M123 for cells of type $__ICE40_RAM4K_M123.
Using template $paramod$d39ff6d1e4c8175799ee3dc79aed312674933750\$__ICE40_RAM4K_M123 for cells of type $__ICE40_RAM4K_M123.
Using template $paramod$d7dc27f0be80a639292a2b7c5f939f4b572c8541\$__ICE40_RAM4K_M123 for cells of type $__ICE40_RAM4K_M123.
Using template $paramod$ef3795b17e30aa643d5036c6dfc722da236e6e25\$__ICE40_RAM4K_M123 for cells of type $__ICE40_RAM4K_M123.
Using template $paramod$04a91933b7c4f704d0da0f1a9143463ab94e1526\$__ICE40_RAM4K_M123 for cells of type $__ICE40_RAM4K_M123.
Using template $paramod$ef61f3b15c1b8a8796d63c7c136e0deeb92ae25a\$__ICE40_RAM4K_M123 for cells of type $__ICE40_RAM4K_M123.
Using template $paramod$1ea0f20111d0936fdb52ae728dd91e890aab8f17\$__ICE40_RAM4K_M123 for cells of type $__ICE40_RAM4K_M123.
Using template $paramod$e316530381baf3e4177deadcaaf0acb6f41e4f8d\$__ICE40_RAM4K_M123 for cells of type $__ICE40_RAM4K_M123.
Using template $paramod$b4fa3dd6f6d32c6c412d9a1a8f9680eb73d43084\$__ICE40_RAM4K_M123 for cells of type $__ICE40_RAM4K_M123.
Using template $paramod$5b3a546462178891c10942a5739f8be9ea8c9310\$__ICE40_RAM4K_M123 for cells of type $__ICE40_RAM4K_M123.
Using template $paramod$9efb18edb8de02bad1a7094f5e96d3699b439d6d\$__ICE40_RAM4K_M123 for cells of type $__ICE40_RAM4K_M123.
Using template $paramod$9c3de4fde3caf232a36174b45213ceae29494249\$__ICE40_RAM4K_M123 for cells of type $__ICE40_RAM4K_M123.
Using template $paramod$ad71a841cb7560dd185296d03b6e23729c25ddb1\$__ICE40_RAM4K_M123 for cells of type $__ICE40_RAM4K_M123.
Using template $paramod$c968b0013a165f3634e5c92d29081f0d392b5770\$__ICE40_RAM4K_M123 for cells of type $__ICE40_RAM4K_M123.
Using template $paramod$97cde197a967de7b4af14f3d3b27b3b7f2ff1eb3\$__ICE40_RAM4K_M123 for cells of type $__ICE40_RAM4K_M123.
Using template $paramod$c299441b407b39a3eed06ffb52e1d5f8b024d123\$__ICE40_RAM4K_M123 for cells of type $__ICE40_RAM4K_M123.
Using template $paramod$631aa3d8085982bec08e3c6462eb04a92cf6ea98\$__ICE40_RAM4K_M123 for cells of type $__ICE40_RAM4K_M123.
Using template $paramod$3cac6450a894b4e9da8ffe19af6571a02c73b999\$__ICE40_RAM4K_M123 for cells of type $__ICE40_RAM4K_M123.
Using template $paramod$bbe8445093f44dd5346ea54bfbfffb984fe06ac1\$__ICE40_RAM4K_M123 for cells of type $__ICE40_RAM4K_M123.
Using template $paramod$11e971eef5d171a268adb0d67074bada7e5847c6\$__ICE40_RAM4K_M123 for cells of type $__ICE40_RAM4K_M123.
Using template $paramod$0f1abeea0452129e2da1b5b4af3205daf6f62996\$__ICE40_RAM4K for cells of type $__ICE40_RAM4K.
Using template $paramod$fe63ec2ab6634e93d6eb73a2d422aa8c63752778\$__ICE40_RAM4K for cells of type $__ICE40_RAM4K.
Using template $paramod$6583422058d296b054b8f17a5973c9c276116928\$__ICE40_RAM4K for cells of type $__ICE40_RAM4K.
Using template $paramod$2d99f85ef83aa950a288ec9b60ddf3213e3287b1\$__ICE40_RAM4K for cells of type $__ICE40_RAM4K.
Using template $paramod$a99a0694763cb9c4bfe6aef49cb7fd96bc2d56a2\$__ICE40_RAM4K for cells of type $__ICE40_RAM4K.
Using template $paramod$19c8f5c5865cd3db63daf576d0474b888e1da522\$__ICE40_RAM4K for cells of type $__ICE40_RAM4K.
Using template $paramod$44870a8530cb3ab4e7642ea0523cbc6664165311\$__ICE40_RAM4K for cells of type $__ICE40_RAM4K.
Using template $paramod$bd5ae792e284658ab9479e6718256c6e5cbe74bd\$__ICE40_RAM4K for cells of type $__ICE40_RAM4K.
Using template $paramod$d9f430b26a8f802b8897ed6d8702c74f582ca96b\$__ICE40_RAM4K for cells of type $__ICE40_RAM4K.
Using template $paramod$d05de495dde6bb70860f9129064bfff9f6763c10\$__ICE40_RAM4K for cells of type $__ICE40_RAM4K.
Using template $paramod$622fc6a661b18ed5b926d36c52950e5152072fad\$__ICE40_RAM4K for cells of type $__ICE40_RAM4K.
Using template $paramod$dabb5c3961102dbebaf39564c774caa0adba5d45\$__ICE40_RAM4K for cells of type $__ICE40_RAM4K.
Using template $paramod$3f99c3a72696703ff7cfa334b2933aba4c8d0425\$__ICE40_RAM4K for cells of type $__ICE40_RAM4K.
Using template $paramod$44c3ede37ee5e397586e794c35ae8d78d8c226d5\$__ICE40_RAM4K for cells of type $__ICE40_RAM4K.
Using template $paramod$8fc1ea870b69862a705dbd6f2c96f45ccc7f768c\$__ICE40_RAM4K for cells of type $__ICE40_RAM4K.
Using template $paramod$48a496dfb2a3148cf50ade5fd1c59eda856af1e7\$__ICE40_RAM4K for cells of type $__ICE40_RAM4K.
Using template $paramod$54aab2e17318fee33c9f5f74decaf5df4782f578\$__ICE40_RAM4K for cells of type $__ICE40_RAM4K.
Using template $paramod$6aa27761b0b72336c8f5da0e2970c81894ec70e6\$__ICE40_RAM4K for cells of type $__ICE40_RAM4K.
Using template $paramod$019ddcf982d74081f554bd2465497fdf78ee4917\$__ICE40_RAM4K for cells of type $__ICE40_RAM4K.
Using template $paramod$3b62b2558518b799c357a045fad41a9b4cc26cca\$__ICE40_RAM4K for cells of type $__ICE40_RAM4K.
Using template $paramod$d58b47ffcfc063077771eab072f3ca381b742177\$__ICE40_RAM4K for cells of type $__ICE40_RAM4K.
Using template $paramod$1e99678737b2cd4ee98a7e5b173390505a9d3fc4\$__ICE40_RAM4K for cells of type $__ICE40_RAM4K.
Using template $paramod$902085627fd59a6b268dff8bd9ce895169f304f6\$__ICE40_RAM4K for cells of type $__ICE40_RAM4K.
Using template $paramod$8d1dd2c7d7f45163b6190bc987af418ed338ad34\$__ICE40_RAM4K for cells of type $__ICE40_RAM4K.
Using template $paramod$b03cd6bb204a56f8104ccd8441ff4f1d11137e7a\$__ICE40_RAM4K for cells of type $__ICE40_RAM4K.
Using template $paramod$84b3f69eba997ca69281cdead1cfd0c79b03fdd3\$__ICE40_RAM4K for cells of type $__ICE40_RAM4K.
Using template $paramod$2a28e4b01580b8da3604211d655b7a30cfba2b78\$__ICE40_RAM4K for cells of type $__ICE40_RAM4K.
Using template $paramod$a39408acb3a0fc515cdfe0eb701254c4be50fda9\$__ICE40_RAM4K for cells of type $__ICE40_RAM4K.
No more expansions possible.

4.26. Executing ICE40_BRAMINIT pass.

4.27. Executing OPT pass (performing simple optimizations).

4.27.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module SOCnexpo.

4.27.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\SOCnexpo'.
Removed a total of 3 cells.

4.27.3. Executing OPT_RMDFF pass (remove dff with constant values).

4.27.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \SOCnexpo..
Removed 2 unused cells and 890 unused wires.

4.27.5. Finished fast OPT passes.

4.28. Executing MEMORY_MAP pass (converting $mem cells to logic and flip-flops).

4.29. Executing OPT pass (performing simple optimizations).

4.29.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module SOCnexpo.

4.29.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\SOCnexpo'.
Removed a total of 0 cells.

4.29.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \SOCnexpo..
Creating internal representation of mux trees.
Evaluating internal representation of mux trees.
Analyzing evaluation results.
Removed 0 multiplexer ports.

4.29.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
Optimizing cells in module \SOCnexpo.
Consolidated identical input bits for $pmux cell $procmux$764:
Old ports: A=31'1100001011011000110111101001000, B=93'110111001110101010011010010000001000000010000001101111011001000000000000000000000000000000000, Y=\palabra
New ports: A=7'1011010, B=21'111010000111010000000, Y={ \palabra [18] \palabra [16] \palabra [8] \palabra [6:5] \palabra [3:2] }
New connections: { \palabra [30:19] \palabra [17] \palabra [15:9] \palabra [7] \palabra [4] \palabra [1:0] } = { \palabra [18] \palabra [8] 1'0 \palabra [16] \palabra [16] \palabra [16] \palabra [3] 1'0 \palabra [18] \palabra [8] \palabra [16] \palabra [3] 2'00 \palabra [8] \palabra [6] 1'0 \palabra [8] \palabra [8] \palabra [6] 4'0000 }
Consolidated identical input bits for $mux cell $techmap\RV32I.$procmux$1087:
Old ports: A={ \RV32I.FD_instr [31] \RV32I.FD_instr [31] \RV32I.FD_instr [31] \RV32I.FD_instr [31] \RV32I.FD_instr [31] \RV32I.FD_instr [31] \RV32I.FD_instr [31] \RV32I.FD_instr [31] \RV32I.FD_instr [31:20] }, B={ \RV32I.FD_instr [19:12] \RV32I.FD_instr [20] \RV32I.FD_instr [30:21] 1'0 }, Y=$techmap\RV32I.$procmux$1087_Y [19:0]
New ports: A={ \RV32I.FD_instr [31] \RV32I.FD_instr [31] \RV32I.FD_instr [31] \RV32I.FD_instr [31] \RV32I.FD_instr [31] \RV32I.FD_instr [31] \RV32I.FD_instr [31] \RV32I.FD_instr [31] \RV32I.FD_instr [31] \RV32I.FD_instr [20] }, B={ \RV32I.FD_instr [19:12] \RV32I.FD_instr [20] 1'0 }, Y={ $techmap\RV32I.$procmux$1087_Y [19:11] $techmap\RV32I.$procmux$1087_Y [0] }
New connections: $techmap\RV32I.$procmux$1087_Y [10:1] = \RV32I.FD_instr [30:21]
Consolidated identical input bits for $mux cell $techmap\RV32I.load.$ternary$Procesador_V2.0b/interfaz_mem.v:67$262:
Old ports: A={ \RV32I.load.signo_byte \RV32I.load.signo_byte \RV32I.load.signo_byte \RV32I.load.signo_byte \RV32I.load.signo_byte \RV32I.load.signo_byte \RV32I.load.signo_byte \RV32I.load.signo_byte \RV32I.load.signo_byte \RV32I.load.signo_byte \RV32I.load.signo_byte \RV32I.load.signo_byte \RV32I.load.signo_byte \RV32I.load.signo_byte \RV32I.load.signo_byte \RV32I.load.signo_byte \RV32I.load.signo_byte \RV32I.load.signo_byte \RV32I.load.signo_byte \RV32I.load.signo_byte \RV32I.load.signo_byte \RV32I.load.signo_byte \RV32I.load.signo_byte \RV32I.load.signo_byte \RV32I.load.data_byte }, B={ \RV32I.load.signo_half \RV32I.load.signo_half \RV32I.load.signo_half \RV32I.load.signo_half \RV32I.load.signo_half \RV32I.load.signo_half \RV32I.load.signo_half \RV32I.load.signo_half \RV32I.load.signo_half \RV32I.load.signo_half \RV32I.load.signo_half \RV32I.load.signo_half \RV32I.load.signo_half \RV32I.load.signo_half \RV32I.load.signo_half \RV32I.load.signo_half \RV32I.load.data_half }, Y=$techmap\RV32I.load.$ternary$Procesador_V2.0b/interfaz_mem.v:67$262_Y
New ports: A={ \RV32I.load.signo_byte \RV32I.load.signo_byte \RV32I.load.signo_byte \RV32I.load.signo_byte \RV32I.load.signo_byte \RV32I.load.signo_byte \RV32I.load.signo_byte \RV32I.load.signo_byte \RV32I.load.signo_byte \RV32I.load.data_byte }, B={ \RV32I.load.signo_half \RV32I.load.data_half }, Y=$techmap\RV32I.load.$ternary$Procesador_V2.0b/interfaz_mem.v:67$262_Y [16:0]
New connections: $techmap\RV32I.load.$ternary$Procesador_V2.0b/interfaz_mem.v:67$262_Y [31:17] = { $techmap\RV32I.load.$ternary$Procesador_V2.0b/interfaz_mem.v:67$262_Y [16] $techmap\RV32I.load.$ternary$Procesador_V2.0b/interfaz_mem.v:67$262_Y [16] $techmap\RV32I.load.$ternary$Procesador_V2.0b/interfaz_mem.v:67$262_Y [16] $techmap\RV32I.load.$ternary$Procesador_V2.0b/interfaz_mem.v:67$262_Y [16] $techmap\RV32I.load.$ternary$Procesador_V2.0b/interfaz_mem.v:67$262_Y [16] $techmap\RV32I.load.$ternary$Procesador_V2.0b/interfaz_mem.v:67$262_Y [16] $techmap\RV32I.load.$ternary$Procesador_V2.0b/interfaz_mem.v:67$262_Y [16] $techmap\RV32I.load.$ternary$Procesador_V2.0b/interfaz_mem.v:67$262_Y [16] $techmap\RV32I.load.$ternary$Procesador_V2.0b/interfaz_mem.v:67$262_Y [16] $techmap\RV32I.load.$ternary$Procesador_V2.0b/interfaz_mem.v:67$262_Y [16] $techmap\RV32I.load.$ternary$Procesador_V2.0b/interfaz_mem.v:67$262_Y [16] $techmap\RV32I.load.$ternary$Procesador_V2.0b/interfaz_mem.v:67$262_Y [16] $techmap\RV32I.load.$ternary$Procesador_V2.0b/interfaz_mem.v:67$262_Y [16] $techmap\RV32I.load.$ternary$Procesador_V2.0b/interfaz_mem.v:67$262_Y [16] $techmap\RV32I.load.$ternary$Procesador_V2.0b/interfaz_mem.v:67$262_Y [16] }
Consolidated identical input bits for $mux cell $techmap\RV32I.store.$ternary$Procesador_V2.0b/interfaz_mem.v:33$250:
Old ports: A=4'0011, B=4'1100, Y=$techmap\RV32I.store.$ternary$Procesador_V2.0b/interfaz_mem.v:33$250_Y
New ports: A=2'01, B=2'10, Y={ $techmap\RV32I.store.$ternary$Procesador_V2.0b/interfaz_mem.v:33$250_Y [2] $techmap\RV32I.store.$ternary$Procesador_V2.0b/interfaz_mem.v:33$250_Y [0] }
New connections: { $techmap\RV32I.store.$ternary$Procesador_V2.0b/interfaz_mem.v:33$250_Y [3] $techmap\RV32I.store.$ternary$Procesador_V2.0b/interfaz_mem.v:33$250_Y [1] } = { $techmap\RV32I.store.$ternary$Procesador_V2.0b/interfaz_mem.v:33$250_Y [2] $techmap\RV32I.store.$ternary$Procesador_V2.0b/interfaz_mem.v:33$250_Y [0] }
Consolidated identical input bits for $mux cell $techmap\RV32I.store.$ternary$Procesador_V2.0b/interfaz_mem.v:34$251:
Old ports: A=4'0100, B=4'1000, Y=$techmap\RV32I.store.$ternary$Procesador_V2.0b/interfaz_mem.v:34$251_Y
New ports: A=2'01, B=2'10, Y=$techmap\RV32I.store.$ternary$Procesador_V2.0b/interfaz_mem.v:34$251_Y [3:2]
New connections: $techmap\RV32I.store.$ternary$Procesador_V2.0b/interfaz_mem.v:34$251_Y [1:0] = 2'00
Consolidated identical input bits for $mux cell $ternary$SOCnexpoV8_.v:101$345:
Old ports: A=0, B={ 1'0 \palabra }, Y=$ternary$SOCnexpoV8_.v:101$345_Y
New ports: A=31'0000000000000000000000000000000, B=\palabra, Y=$ternary$SOCnexpoV8_.v:101$345_Y [30:0]
New connections: $ternary$SOCnexpoV8_.v:101$345_Y [31] = 1'0
Optimizing cells in module \SOCnexpo.
Consolidated identical input bits for $mux cell $techmap\RV32I.$procmux$1089:
Old ports: A=$techmap\RV32I.$procmux$1087_Y [19:0], B={ \RV32I.FD_instr [31] \RV32I.FD_instr [31] \RV32I.FD_instr [31] \RV32I.FD_instr [31] \RV32I.FD_instr [31] \RV32I.FD_instr [31] \RV32I.FD_instr [31] \RV32I.FD_instr [31] \RV32I.FD_instr [31:25] \RV32I.FD_instr [11:7] }, Y=$techmap\RV32I.$procmux$1089_Y [19:0]
New ports: A={ $techmap\RV32I.$procmux$1087_Y [19:11] \RV32I.FD_instr [24:21] $techmap\RV32I.$procmux$1087_Y [0] }, B={ \RV32I.FD_instr [31] \RV32I.FD_instr [31] \RV32I.FD_instr [31] \RV32I.FD_instr [31] \RV32I.FD_instr [31] \RV32I.FD_instr [31] \RV32I.FD_instr [31] \RV32I.FD_instr [31] \RV32I.FD_instr [31] \RV32I.FD_instr [11:7] }, Y={ $techmap\RV32I.$procmux$1089_Y [19:11] $techmap\RV32I.$procmux$1089_Y [4:0] }
New connections: $techmap\RV32I.$procmux$1089_Y [10:5] = \RV32I.FD_instr [30:25]
Consolidated identical input bits for $mux cell $ternary$SOCnexpoV8_.v:101$345:
Old ports: A=31'0000000000000000000000000000000, B=\palabra, Y=$ternary$SOCnexpoV8_.v:101$345_Y [30:0]
New ports: A=7'0000000, B={ \palabra [18] \palabra [16] \palabra [8] \palabra [6:5] \palabra [3:2] }, Y={ $ternary$SOCnexpoV8_.v:101$345_Y [18] $ternary$SOCnexpoV8_.v:101$345_Y [16] $ternary$SOCnexpoV8_.v:101$345_Y [8] $ternary$SOCnexpoV8_.v:101$345_Y [6:5] $ternary$SOCnexpoV8_.v:101$345_Y [3:2] }
New connections: { $ternary$SOCnexpoV8_.v:101$345_Y [30:19] $ternary$SOCnexpoV8_.v:101$345_Y [17] $ternary$SOCnexpoV8_.v:101$345_Y [15:9] $ternary$SOCnexpoV8_.v:101$345_Y [7] $ternary$SOCnexpoV8_.v:101$345_Y [4] $ternary$SOCnexpoV8_.v:101$345_Y [1:0] } = { $ternary$SOCnexpoV8_.v:101$345_Y [18] $ternary$SOCnexpoV8_.v:101$345_Y [8] 1'0 $ternary$SOCnexpoV8_.v:101$345_Y [16] $ternary$SOCnexpoV8_.v:101$345_Y [16] $ternary$SOCnexpoV8_.v:101$345_Y [16] $ternary$SOCnexpoV8_.v:101$345_Y [3] 1'0 $ternary$SOCnexpoV8_.v:101$345_Y [18] $ternary$SOCnexpoV8_.v:101$345_Y [8] $ternary$SOCnexpoV8_.v:101$345_Y [16] $ternary$SOCnexpoV8_.v:101$345_Y [3] 2'00 $ternary$SOCnexpoV8_.v:101$345_Y [8] $ternary$SOCnexpoV8_.v:101$345_Y [6] 1'0 $ternary$SOCnexpoV8_.v:101$345_Y [8] $ternary$SOCnexpoV8_.v:101$345_Y [8] $ternary$SOCnexpoV8_.v:101$345_Y [6] 4'0000 }
Consolidated identical input bits for $mux cell $ternary$SOCnexpoV8_.v:101$346:
Old ports: A=$ternary$SOCnexpoV8_.v:101$345_Y, B={ 23'00000000000000000000000 \tx_ready \UART_RX.data }, Y=$ternary$SOCnexpoV8_.v:101$346_Y
New ports: A=$ternary$SOCnexpoV8_.v:101$345_Y [30:0], B={ 22'0000000000000000000000 \tx_ready \UART_RX.data }, Y=$ternary$SOCnexpoV8_.v:101$346_Y [30:0]
New connections: $ternary$SOCnexpoV8_.v:101$346_Y [31] = 1'0
Optimizing cells in module \SOCnexpo.
Consolidated identical input bits for $mux cell $techmap\RV32I.$procmux$1091:
Old ports: A=$techmap\RV32I.$procmux$1089_Y [19:0], B={ \RV32I.FD_instr [31] \RV32I.FD_instr [31] \RV32I.FD_instr [31] \RV32I.FD_instr [31] \RV32I.FD_instr [31] \RV32I.FD_instr [31] \RV32I.FD_instr [31] \RV32I.FD_instr [31] \RV32I.FD_instr [7] \RV32I.FD_instr [30:25] \RV32I.FD_instr [11:8] 1'0 }, Y=$techmap\RV32I.$procmux$1091_Y [19:0]
New ports: A={ $techmap\RV32I.$procmux$1089_Y [19:11] $techmap\RV32I.$procmux$1089_Y [4:0] }, B={ \RV32I.FD_instr [31] \RV32I.FD_instr [31] \RV32I.FD_instr [31] \RV32I.FD_instr [31] \RV32I.FD_instr [31] \RV32I.FD_instr [31] \RV32I.FD_instr [31] \RV32I.FD_instr [31] \RV32I.FD_instr [7] \RV32I.FD_instr [11:8] 1'0 }, Y={ $techmap\RV32I.$procmux$1091_Y [19:11] $techmap\RV32I.$procmux$1091_Y [4:0] }
New connections: $techmap\RV32I.$procmux$1091_Y [10:5] = \RV32I.FD_instr [30:25]
Consolidated identical input bits for $mux cell $ternary$SOCnexpoV8_.v:101$346:
Old ports: A=$ternary$SOCnexpoV8_.v:101$345_Y [30:0], B={ 22'0000000000000000000000 \tx_ready \UART_RX.data }, Y=$ternary$SOCnexpoV8_.v:101$346_Y [30:0]
New ports: A={ $ternary$SOCnexpoV8_.v:101$345_Y [3] $ternary$SOCnexpoV8_.v:101$345_Y [18] $ternary$SOCnexpoV8_.v:101$345_Y [16] $ternary$SOCnexpoV8_.v:101$345_Y [8] $ternary$SOCnexpoV8_.v:101$345_Y [6] $ternary$SOCnexpoV8_.v:101$345_Y [8] 1'0 $ternary$SOCnexpoV8_.v:101$345_Y [6:5] 1'0 $ternary$SOCnexpoV8_.v:101$345_Y [3:2] 2'00 }, B={ 5'00000 \tx_ready \UART_RX.data }, Y={ $ternary$SOCnexpoV8_.v:101$346_Y [19:18] $ternary$SOCnexpoV8_.v:101$346_Y [16] $ternary$SOCnexpoV8_.v:101$346_Y [10:0] }
New connections: { $ternary$SOCnexpoV8_.v:101$346_Y [30:20] $ternary$SOCnexpoV8_.v:101$346_Y [17] $ternary$SOCnexpoV8_.v:101$346_Y [15:11] } = { $ternary$SOCnexpoV8_.v:101$346_Y [18] $ternary$SOCnexpoV8_.v:101$346_Y [10] 1'0 $ternary$SOCnexpoV8_.v:101$346_Y [16] $ternary$SOCnexpoV8_.v:101$346_Y [16] $ternary$SOCnexpoV8_.v:101$346_Y [16] $ternary$SOCnexpoV8_.v:101$346_Y [19] 1'0 $ternary$SOCnexpoV8_.v:101$346_Y [18] $ternary$SOCnexpoV8_.v:101$346_Y [10] $ternary$SOCnexpoV8_.v:101$346_Y [16] 2'00 $ternary$SOCnexpoV8_.v:101$346_Y [10:9] 1'0 $ternary$SOCnexpoV8_.v:101$346_Y [10] }
Consolidated identical input bits for $mux cell $ternary$SOCnexpoV8_.v:101$347:
Old ports: A=$ternary$SOCnexpoV8_.v:101$346_Y, B={ 31'0000000000000000000000000000000 \leds_en }, Y=$ternary$SOCnexpoV8_.v:101$347_Y
New ports: A=$ternary$SOCnexpoV8_.v:101$346_Y [30:0], B={ 30'000000000000000000000000000000 \leds_en }, Y=$ternary$SOCnexpoV8_.v:101$347_Y [30:0]
New connections: $ternary$SOCnexpoV8_.v:101$347_Y [31] = 1'0
Optimizing cells in module \SOCnexpo.
Consolidated identical input bits for $mux cell $ternary$SOCnexpoV8_.v:101$347:
Old ports: A=$ternary$SOCnexpoV8_.v:101$346_Y [30:0], B={ 30'000000000000000000000000000000 \leds_en }, Y=$ternary$SOCnexpoV8_.v:101$347_Y [30:0]
New ports: A={ $ternary$SOCnexpoV8_.v:101$346_Y [19:18] $ternary$SOCnexpoV8_.v:101$346_Y [16] $ternary$SOCnexpoV8_.v:101$346_Y [10:0] }, B={ 13'0000000000000 \leds_en }, Y={ $ternary$SOCnexpoV8_.v:101$347_Y [19:18] $ternary$SOCnexpoV8_.v:101$347_Y [16] $ternary$SOCnexpoV8_.v:101$347_Y [10:0] }
New connections: { $ternary$SOCnexpoV8_.v:101$347_Y [30:20] $ternary$SOCnexpoV8_.v:101$347_Y [17] $ternary$SOCnexpoV8_.v:101$347_Y [15:11] } = { $ternary$SOCnexpoV8_.v:101$347_Y [18] $ternary$SOCnexpoV8_.v:101$347_Y [10] 1'0 $ternary$SOCnexpoV8_.v:101$347_Y [16] $ternary$SOCnexpoV8_.v:101$347_Y [16] $ternary$SOCnexpoV8_.v:101$347_Y [16] $ternary$SOCnexpoV8_.v:101$347_Y [19] 1'0 $ternary$SOCnexpoV8_.v:101$347_Y [18] $ternary$SOCnexpoV8_.v:101$347_Y [10] $ternary$SOCnexpoV8_.v:101$347_Y [16] 2'00 $ternary$SOCnexpoV8_.v:101$347_Y [10:9] 1'0 $ternary$SOCnexpoV8_.v:101$347_Y [10] }
Optimizing cells in module \SOCnexpo.
Performed a total of 13 changes.

4.29.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\SOCnexpo'.
Removed a total of 1 cells.

4.29.6. Executing OPT_RMDFF pass (remove dff with constant values).

4.29.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \SOCnexpo..
Removed 0 unused cells and 1 unused wires.

4.29.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module SOCnexpo.

4.29.9. Rerunning OPT passes. (Maybe there is more to do..)

4.29.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \SOCnexpo..
Creating internal representation of mux trees.
Evaluating internal representation of mux trees.
Analyzing evaluation results.
Removed 0 multiplexer ports.

4.29.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
Optimizing cells in module \SOCnexpo.
Performed a total of 0 changes.

4.29.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\SOCnexpo'.
Removed a total of 0 cells.

4.29.13. Executing OPT_RMDFF pass (remove dff with constant values).

4.29.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \SOCnexpo..

4.29.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module SOCnexpo.

4.29.16. Finished OPT passes. (There is nothing left to do.)

4.30. Executing ICE40_WRAPCARRY pass (wrap carries).

4.31. Executing TECHMAP pass (map to technology primitives).

4.31.1. Executing Verilog-2005 frontend: /home/jfdava/.apio/packages/toolchain-yosys/bin/../share/yosys/techmap.v
Parsing Verilog input from `/home/jfdava/.apio/packages/toolchain-yosys/bin/../share/yosys/techmap.v' to AST representation.
Generating RTLIL representation for module `\_90_simplemap_bool_ops'.
Generating RTLIL representation for module `\_90_simplemap_reduce_ops'.
Generating RTLIL representation for module `\_90_simplemap_logic_ops'.
Generating RTLIL representation for module `\_90_simplemap_compare_ops'.
Generating RTLIL representation for module `\_90_simplemap_various'.
Generating RTLIL representation for module `\_90_simplemap_registers'.
Generating RTLIL representation for module `\_90_shift_ops_shr_shl_sshl_sshr'.
Generating RTLIL representation for module `\_90_shift_shiftx'.
Generating RTLIL representation for module `\_90_fa'.
Generating RTLIL representation for module `\_90_lcu'.
Generating RTLIL representation for module `\_90_alu'.
Generating RTLIL representation for module `\_90_macc'.
Generating RTLIL representation for module `\_90_alumacc'.
Generating RTLIL representation for module `\$__div_mod_u'.
Generating RTLIL representation for module `\$__div_mod'.
Generating RTLIL representation for module `\_90_div'.
Generating RTLIL representation for module `\_90_mod'.
Generating RTLIL representation for module `\_90_pow'.
Generating RTLIL representation for module `\_90_pmux'.
Generating RTLIL representation for module `\_90_lut'.
Successfully finished Verilog frontend.

4.31.2. Executing Verilog-2005 frontend: /home/jfdava/.apio/packages/toolchain-yosys/bin/../share/yosys/ice40/arith_map.v
Parsing Verilog input from `/home/jfdava/.apio/packages/toolchain-yosys/bin/../share/yosys/ice40/arith_map.v' to AST representation.
Generating RTLIL representation for module `\_80_ice40_alu'.
Successfully finished Verilog frontend.

4.31.3. Continuing TECHMAP pass.
Using template $paramod\_80_ice40_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=1\B_WIDTH=12\Y_WIDTH=12 for cells of type $alu.
Using extmapper simplemap for cells of type $eq.
Using extmapper simplemap for cells of type $logic_not.
Using extmapper simplemap for cells of type $and.
Using extmapper simplemap for cells of type $not.
Using extmapper simplemap for cells of type $mux.
Using template $paramod\_90_pmux\WIDTH=7\S_WIDTH=3 for cells of type $pmux.
Using extmapper simplemap for cells of type $dff.
Using template $paramod\_80_ice40_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=6\B_WIDTH=7\Y_WIDTH=7 for cells of type $alu.
Using extmapper simplemap for cells of type $or.
Using extmapper simplemap for cells of type $reduce_and.
Using extmapper simplemap for cells of type $reduce_or.
Using template $paramod\_90_pmux\WIDTH=32\S_WIDTH=5 for cells of type $pmux.
Using template $paramod\_80_ice40_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=1\B_WIDTH=7\Y_WIDTH=7 for cells of type $alu.
Using template $paramod\_80_ice40_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=1\B_WIDTH=64\Y_WIDTH=64 for cells of type $alu.
Using extmapper simplemap for cells of type $logic_or.
Using extmapper simplemap for cells of type $logic_and.
Using template $paramod\_80_ice40_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=32\B_WIDTH=32\Y_WIDTH=32 for cells of type $alu.
Using template $paramod\_90_pmux\WIDTH=4\S_WIDTH=3 for cells of type $pmux.
Using template $paramod\_90_pmux\WIDTH=8\S_WIDTH=3 for cells of type $pmux.
Using template $paramod\_80_ice40_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=1\B_WIDTH=8\Y_WIDTH=8 for cells of type $alu.
Using template $paramod\_80_ice40_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=1\B_WIDTH=30\Y_WIDTH=30 for cells of type $alu.
Using template $paramod\_80_ice40_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=7\B_WIDTH=10\Y_WIDTH=10 for cells of type $alu.
Using template $paramod\_80_ice40_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=1\B_WIDTH=5\Y_WIDTH=5 for cells of type $alu.
Using extmapper simplemap for cells of type $xor.
Using template $paramod$constmap:87f69c0bea22f84de4bcd0314b57cb19e61b5eb7$paramod$88abf4b792300efa328894e6936be740fdc22f6d\_90_shift_ops_shr_shl_sshl_sshr for cells of type $sshr.
Using template $paramod$constmap:1b6115d36d46c0296d0024e3e3623593810ba834$paramod$2c522b46cc21505f45a595eaa4706e490799228e\_90_shift_ops_shr_shl_sshl_sshr for cells of type $shl.
Using template $paramod\_80_ice40_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=32\B_WIDTH=33\Y_WIDTH=33 for cells of type $alu.
Using template $paramod\_80_ice40_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=1\B_WIDTH=4\Y_WIDTH=4 for cells of type $alu.
Using extmapper simplemap for cells of type $pos.
No more expansions possible.

4.32. Executing ICE40_OPT pass (performing simple optimizations).

4.32.1. Running ICE40 specific optimizations.

4.32.2. Executing OPT_EXPR pass (perform const folding).
Optimizing module SOCnexpo.

4.32.3. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\SOCnexpo'.
Removed a total of 209 cells.

4.32.4. Executing OPT_RMDFF pass (remove dff with constant values).

4.32.5. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \SOCnexpo..
Removed 331 unused cells and 491 unused wires.

4.32.6. Rerunning OPT passes. (Removed registers in this run.)

4.32.7. Running ICE40 specific optimizations.
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) SOCnexpo.$auto$alumacc.cc:485:replace_alu$1379.slice[0].carry: CO=$auto$alumacc.cc:485:replace_alu$1379.BB [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) SOCnexpo.$auto$alumacc.cc:485:replace_alu$1390.slice[0].carry: CO=$auto$alumacc.cc:485:replace_alu$1390.BB [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) SOCnexpo.$auto$alumacc.cc:485:replace_alu$1403.slice[0].carry: CO=\Espera [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) SOCnexpo.$auto$alumacc.cc:485:replace_alu$1406.slice[0].carry: CO=\LEDS8_4.timer [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) SOCnexpo.$auto$alumacc.cc:485:replace_alu$1409.slice[0].carry: CO=\RV32I.F_pc [2]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) SOCnexpo.$auto$alumacc.cc:485:replace_alu$1415.slice[0].carry: CO=\RV32I.cycle [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) SOCnexpo.$auto$alumacc.cc:485:replace_alu$1421.slice[0].carry: CO=\UART_TX.bclk.divcounter [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) SOCnexpo.$auto$alumacc.cc:485:replace_alu$1424.slice[32].carry: CO=$auto$alumacc.cc:485:replace_alu$1424.C [32]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) SOCnexpo.$auto$alumacc.cc:485:replace_alu$1430.slice[0].carry: CO=\UART_RX.div2counter [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) SOCnexpo.$auto$alumacc.cc:485:replace_alu$1433.slice[0].carry: CO=\UART_RX.cont [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) SOCnexpo.$auto$alumacc.cc:485:replace_alu$1436.slice[0].carry: CO=\UART_RX.bclk.divcounter [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) SOCnexpo.$auto$alumacc.cc:485:replace_alu$1439.slice[0].carry: CO=\UART_TX.bits [0]

4.32.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module SOCnexpo.

4.32.9. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\SOCnexpo'.
Removed a total of 0 cells.

4.32.10. Executing OPT_RMDFF pass (remove dff with constant values).

4.32.11. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \SOCnexpo..
Removed 2 unused cells and 1 unused wires.

4.32.12. Rerunning OPT passes. (Removed registers in this run.)

4.32.13. Running ICE40 specific optimizations.

4.32.14. Executing OPT_EXPR pass (perform const folding).
Optimizing module SOCnexpo.

4.32.15. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\SOCnexpo'.
Removed a total of 0 cells.

4.32.16. Executing OPT_RMDFF pass (remove dff with constant values).

4.32.17. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \SOCnexpo..

4.32.18. Finished OPT passes. (There is nothing left to do.)

4.33. Executing DFFSR2DFF pass (mapping DFFSR cells to simpler FFs).

4.34. Executing DFF2DFFE pass (transform $dff to $dffe where applicable).
Selected cell types for direct conversion:
$_DFF_PP1_ -> $__DFFE_PP1
$_DFF_PP0_ -> $__DFFE_PP0
$_DFF_PN1_ -> $__DFFE_PN1
$_DFF_PN0_ -> $__DFFE_PN0
$_DFF_NP1_ -> $__DFFE_NP1
$_DFF_NP0_ -> $__DFFE_NP0
$_DFF_NN1_ -> $__DFFE_NN1
$_DFF_NN0_ -> $__DFFE_NN0
$_DFF_N_ -> $_DFFE_NP_
$_DFF_P_ -> $_DFFE_PP_
Transforming FF to FF+Enable cells in module SOCnexpo:
converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2084 to $_DFFE_PP_ for $0\tx_ready[0:0] -> \tx_ready.
converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2085 to $_DFFE_PP_ for $0\leds_en[0:0] -> \leds_en.
converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2086 to $_DFFE_PP_ for $0\leds1[7:0] [0] -> \leds1 [0].
converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2087 to $_DFFE_PP_ for $0\leds1[7:0] [1] -> \leds1 [1].
converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2088 to $_DFFE_PP_ for $0\leds1[7:0] [2] -> \leds1 [2].
converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2089 to $_DFFE_PP_ for $0\leds1[7:0] [3] -> \leds1 [3].
converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2090 to $_DFFE_PP_ for $0\leds1[7:0] [4] -> \leds1 [4].
converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2091 to $_DFFE_PP_ for $0\leds1[7:0] [5] -> \leds1 [5].
converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2092 to $_DFFE_PP_ for $0\leds1[7:0] [6] -> \leds1 [6].
converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2093 to $_DFFE_PP_ for $0\leds1[7:0] [7] -> \leds1 [7].
converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2094 to $_DFFE_PP_ for $0\leds2[7:0] [0] -> \leds2 [0].
converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2095 to $_DFFE_PP_ for $0\leds2[7:0] [1] -> \leds2 [1].
converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2096 to $_DFFE_PP_ for $0\leds2[7:0] [2] -> \leds2 [2].
converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2097 to $_DFFE_PP_ for $0\leds2[7:0] [3] -> \leds2 [3].
converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2098 to $_DFFE_PP_ for $0\leds2[7:0] [4] -> \leds2 [4].
converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2099 to $_DFFE_PP_ for $0\leds2[7:0] [5] -> \leds2 [5].
converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2100 to $_DFFE_PP_ for $0\leds2[7:0] [6] -> \leds2 [6].
converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2101 to $_DFFE_PP_ for $0\leds2[7:0] [7] -> \leds2 [7].
converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2102 to $_DFFE_PP_ for $0\leds3[7:0] [0] -> \leds3 [0].
converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2103 to $_DFFE_PP_ for $0\leds3[7:0] [1] -> \leds3 [1].
converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2104 to $_DFFE_PP_ for $0\leds3[7:0] [2] -> \leds3 [2].
converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2105 to $_DFFE_PP_ for $0\leds3[7:0] [3] -> \leds3 [3].
converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2106 to $_DFFE_PP_ for $0\leds3[7:0] [4] -> \leds3 [4].
converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2107 to $_DFFE_PP_ for $0\leds3[7:0] [5] -> \leds3 [5].
converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2108 to $_DFFE_PP_ for $0\leds3[7:0] [6] -> \leds3 [6].
converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2109 to $_DFFE_PP_ for $0\leds3[7:0] [7] -> \leds3 [7].
converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2110 to $_DFFE_PP_ for $0\leds4[7:0] [0] -> \leds4 [0].
converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2111 to $_DFFE_PP_ for $0\leds4[7:0] [1] -> \leds4 [1].
converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2112 to $_DFFE_PP_ for $0\leds4[7:0] [2] -> \leds4 [2].
converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2113 to $_DFFE_PP_ for $0\leds4[7:0] [3] -> \leds4 [3].
converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2114 to $_DFFE_PP_ for $0\leds4[7:0] [4] -> \leds4 [4].
converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2115 to $_DFFE_PP_ for $0\leds4[7:0] [5] -> \leds4 [5].
converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2116 to $_DFFE_PP_ for $0\leds4[7:0] [6] -> \leds4 [6].
converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2117 to $_DFFE_PP_ for $0\leds4[7:0] [7] -> \leds4 [7].
converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2118 to $_DFFE_PP_ for $0\rst[0:0] -> \rst.
converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2165 to $_DFFE_PP_ for $techmap\RV32I.$0\F_pc[31:0] [0] -> \RV32I.F_pc [0].
converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2166 to $_DFFE_PP_ for $techmap\RV32I.$0\F_pc[31:0] [1] -> \RV32I.F_pc [1].
converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2456 to $_DFFE_PP_ for $techmap\RV32I.$0\PWM_[31:0] [0] -> \RV32I.PWM_ [0].
converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2457 to $_DFFE_PP_ for $techmap\RV32I.$0\PWM_[31:0] [1] -> \RV32I.PWM_ [1].
converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2458 to $_DFFE_PP_ for $techmap\RV32I.$0\PWM_[31:0] [2] -> \RV32I.PWM_ [2].
converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2459 to $_DFFE_PP_ for $techmap\RV32I.$0\PWM_[31:0] [3] -> \RV32I.PWM_ [3].
converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2460 to $_DFFE_PP_ for $techmap\RV32I.$0\PWM_[31:0] [4] -> \RV32I.PWM_ [4].
converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2461 to $_DFFE_PP_ for $techmap\RV32I.$0\PWM_[31:0] [5] -> \RV32I.PWM_ [5].
converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2462 to $_DFFE_PP_ for $techmap\RV32I.$0\PWM_[31:0] [6] -> \RV32I.PWM_ [6].
converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2463 to $_DFFE_PP_ for $techmap\RV32I.$0\PWM_[31:0] [7] -> \RV32I.PWM_ [7].
converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2464 to $_DFFE_PP_ for $techmap\RV32I.$0\PWM_[31:0] [8] -> \RV32I.PWM_ [8].
converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2465 to $_DFFE_PP_ for $techmap\RV32I.$0\PWM_[31:0] [9] -> \RV32I.PWM_ [9].
converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2466 to $_DFFE_PP_ for $techmap\RV32I.$0\PWM_[31:0] [10] -> \RV32I.PWM_ [10].
converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2467 to $_DFFE_PP_ for $techmap\RV32I.$0\PWM_[31:0] [11] -> \RV32I.PWM_ [11].
converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2468 to $_DFFE_PP_ for $techmap\RV32I.$0\PWM_[31:0] [12] -> \RV32I.PWM_ [12].
converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2469 to $_DFFE_PP_ for $techmap\RV32I.$0\PWM_[31:0] [13] -> \RV32I.PWM_ [13].
converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2470 to $_DFFE_PP_ for $techmap\RV32I.$0\PWM_[31:0] [14] -> \RV32I.PWM_ [14].
converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2471 to $_DFFE_PP_ for $techmap\RV32I.$0\PWM_[31:0] [15] -> \RV32I.PWM_ [15].
converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2472 to $_DFFE_PP_ for $techmap\RV32I.$0\PWM_[31:0] [16] -> \RV32I.PWM_ [16].
converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2473 to $_DFFE_PP_ for $techmap\RV32I.$0\PWM_[31:0] [17] -> \RV32I.PWM_ [17].
converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2474 to $_DFFE_PP_ for $techmap\RV32I.$0\PWM_[31:0] [18] -> \RV32I.PWM_ [18].
converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2475 to $_DFFE_PP_ for $techmap\RV32I.$0\PWM_[31:0] [19] -> \RV32I.PWM_ [19].
converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2476 to $_DFFE_PP_ for $techmap\RV32I.$0\PWM_[31:0] [20] -> \RV32I.PWM_ [20].
converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2477 to $_DFFE_PP_ for $techmap\RV32I.$0\PWM_[31:0] [21] -> \RV32I.PWM_ [21].
converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2478 to $_DFFE_PP_ for $techmap\RV32I.$0\PWM_[31:0] [22] -> \RV32I.PWM_ [22].
converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2479 to $_DFFE_PP_ for $techmap\RV32I.$0\PWM_[31:0] [23] -> \RV32I.PWM_ [23].
converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2480 to $_DFFE_PP_ for $techmap\RV32I.$0\PWM_[31:0] [24] -> \RV32I.PWM_ [24].
converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2481 to $_DFFE_PP_ for $techmap\RV32I.$0\PWM_[31:0] [25] -> \RV32I.PWM_ [25].
converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2482 to $_DFFE_PP_ for $techmap\RV32I.$0\PWM_[31:0] [26] -> \RV32I.PWM_ [26].
converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2483 to $_DFFE_PP_ for $techmap\RV32I.$0\PWM_[31:0] [27] -> \RV32I.PWM_ [27].
converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2484 to $_DFFE_PP_ for $techmap\RV32I.$0\PWM_[31:0] [28] -> \RV32I.PWM_ [28].
converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2485 to $_DFFE_PP_ for $techmap\RV32I.$0\PWM_[31:0] [29] -> \RV32I.PWM_ [29].
converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2486 to $_DFFE_PP_ for $techmap\RV32I.$0\PWM_[31:0] [30] -> \RV32I.PWM_ [30].
converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2487 to $_DFFE_PP_ for $techmap\RV32I.$0\PWM_[31:0] [31] -> \RV32I.PWM_ [31].
converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4249 to $_DFFE_PP_ for $techmap\UART_TX.$0\state[0:0] -> \UART_TX.state.
converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4250 to $_DFFE_PP_ for $techmap\UART_TX.$0\q[8:0] [0] -> \UART_TX.q [0].
converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4251 to $_DFFE_PP_ for $techmap\UART_TX.$0\q[8:0] [1] -> \UART_TX.q [1].
converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4252 to $_DFFE_PP_ for $techmap\UART_TX.$0\q[8:0] [2] -> \UART_TX.q [2].
converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4253 to $_DFFE_PP_ for $techmap\UART_TX.$0\q[8:0] [3] -> \UART_TX.q [3].
converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4254 to $_DFFE_PP_ for $techmap\UART_TX.$0\q[8:0] [4] -> \UART_TX.q [4].
converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4255 to $_DFFE_PP_ for $techmap\UART_TX.$0\q[8:0] [5] -> \UART_TX.q [5].
converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4256 to $_DFFE_PP_ for $techmap\UART_TX.$0\q[8:0] [6] -> \UART_TX.q [6].
converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4257 to $_DFFE_PP_ for $techmap\UART_TX.$0\q[8:0] [7] -> \UART_TX.q [7].
converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4258 to $_DFFE_PP_ for $techmap\UART_TX.$0\q[8:0] [8] -> \UART_TX.q [8].
converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4260 to $_DFFE_PP_ for $techmap\UART_TX.$0\bits[3:0] [0] -> \UART_TX.bits [0].
converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4261 to $_DFFE_PP_ for $techmap\UART_TX.$0\bits[3:0] [1] -> \UART_TX.bits [1].
converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4262 to $_DFFE_PP_ for $techmap\UART_TX.$0\bits[3:0] [2] -> \UART_TX.bits [2].
converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4263 to $_DFFE_PP_ for $techmap\UART_TX.$0\bits[3:0] [3] -> \UART_TX.bits [3].
converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4313 to $_DFFE_PP_ for $techmap\UART_RX.$0\state[0:0] -> \UART_RX.state.
converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4314 to $_DFFE_PP_ for $techmap\UART_RX.$0\div2counter[6:0] [0] -> \UART_RX.div2counter [0].
converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4315 to $_DFFE_PP_ for $techmap\UART_RX.$0\div2counter[6:0] [1] -> \UART_RX.div2counter [1].
converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4316 to $_DFFE_PP_ for $techmap\UART_RX.$0\div2counter[6:0] [2] -> \UART_RX.div2counter [2].
converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4317 to $_DFFE_PP_ for $techmap\UART_RX.$0\div2counter[6:0] [3] -> \UART_RX.div2counter [3].
converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4318 to $_DFFE_PP_ for $techmap\UART_RX.$0\div2counter[6:0] [4] -> \UART_RX.div2counter [4].
converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4319 to $_DFFE_PP_ for $techmap\UART_RX.$0\div2counter[6:0] [5] -> \UART_RX.div2counter [5].
converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4320 to $_DFFE_PP_ for $techmap\UART_RX.$0\div2counter[6:0] [6] -> \UART_RX.div2counter [6].
converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4321 to $_DFFE_PP_ for $techmap\UART_RX.$0\sr[8:0] [0] -> \UART_RX.sr [0].
converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4322 to $_DFFE_PP_ for $techmap\UART_RX.$0\sr[8:0] [1] -> \UART_RX.sr [1].
converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4323 to $_DFFE_PP_ for $techmap\UART_RX.$0\sr[8:0] [2] -> \UART_RX.sr [2].
converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4324 to $_DFFE_PP_ for $techmap\UART_RX.$0\sr[8:0] [3] -> \UART_RX.sr [3].
converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4325 to $_DFFE_PP_ for $techmap\UART_RX.$0\sr[8:0] [4] -> \UART_RX.sr [4].
converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4326 to $_DFFE_PP_ for $techmap\UART_RX.$0\sr[8:0] [5] -> \UART_RX.sr [5].
converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4327 to $_DFFE_PP_ for $techmap\UART_RX.$0\sr[8:0] [6] -> \UART_RX.sr [6].
converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4328 to $_DFFE_PP_ for $techmap\UART_RX.$0\sr[8:0] [7] -> \UART_RX.sr [7].
converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4329 to $_DFFE_PP_ for $techmap\UART_RX.$0\sr[8:0] [8] -> \UART_RX.sr [8].
converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4330 to $_DFFE_PP_ for $techmap\UART_RX.$0\cont[4:0] [0] -> \UART_RX.cont [0].
converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4331 to $_DFFE_PP_ for $techmap\UART_RX.$0\cont[4:0] [1] -> \UART_RX.cont [1].
converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4332 to $_DFFE_PP_ for $techmap\UART_RX.$0\cont[4:0] [2] -> \UART_RX.cont [2].
converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4333 to $_DFFE_PP_ for $techmap\UART_RX.$0\cont[4:0] [3] -> \UART_RX.cont [3].
converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4334 to $_DFFE_PP_ for $techmap\UART_RX.$0\cont[4:0] [4] -> \UART_RX.cont [4].
converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4335 to $_DFFE_PP_ for $techmap\UART_RX.$0\data[7:0] [0] -> \UART_RX.data [0].
converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4336 to $_DFFE_PP_ for $techmap\UART_RX.$0\data[7:0] [1] -> \UART_RX.data [1].
converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4337 to $_DFFE_PP_ for $techmap\UART_RX.$0\data[7:0] [2] -> \UART_RX.data [2].
converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4338 to $_DFFE_PP_ for $techmap\UART_RX.$0\data[7:0] [3] -> \UART_RX.data [3].
converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4339 to $_DFFE_PP_ for $techmap\UART_RX.$0\data[7:0] [4] -> \UART_RX.data [4].
converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4340 to $_DFFE_PP_ for $techmap\UART_RX.$0\data[7:0] [5] -> \UART_RX.data [5].
converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4341 to $_DFFE_PP_ for $techmap\UART_RX.$0\data[7:0] [6] -> \UART_RX.data [6].
converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4342 to $_DFFE_PP_ for $techmap\UART_RX.$0\data[7:0] [7] -> \UART_RX.data [7].

4.35. Executing TECHMAP pass (map to technology primitives).

4.35.1. Executing Verilog-2005 frontend: /home/jfdava/.apio/packages/toolchain-yosys/bin/../share/yosys/ice40/cells_map.v
Parsing Verilog input from `/home/jfdava/.apio/packages/toolchain-yosys/bin/../share/yosys/ice40/cells_map.v' to AST representation.
Generating RTLIL representation for module `\$_DFF_N_'.
Generating RTLIL representation for module `\$_DFF_P_'.
Generating RTLIL representation for module `\$_DFFE_NN_'.
Generating RTLIL representation for module `\$_DFFE_PN_'.
Generating RTLIL representation for module `\$_DFFE_NP_'.
Generating RTLIL representation for module `\$_DFFE_PP_'.
Generating RTLIL representation for module `\$_DFF_NN0_'.
Generating RTLIL representation for module `\$_DFF_NN1_'.
Generating RTLIL representation for module `\$_DFF_PN0_'.
Generating RTLIL representation for module `\$_DFF_PN1_'.
Generating RTLIL representation for module `\$_DFF_NP0_'.
Generating RTLIL representation for module `\$_DFF_NP1_'.
Generating RTLIL representation for module `\$_DFF_PP0_'.
Generating RTLIL representation for module `\$_DFF_PP1_'.
Generating RTLIL representation for module `\$__DFFE_NN0'.
Generating RTLIL representation for module `\$__DFFE_NN1'.
Generating RTLIL representation for module `\$__DFFE_PN0'.
Generating RTLIL representation for module `\$__DFFE_PN1'.
Generating RTLIL representation for module `\$__DFFE_NP0'.
Generating RTLIL representation for module `\$__DFFE_NP1'.
Generating RTLIL representation for module `\$__DFFE_PP0'.
Generating RTLIL representation for module `\$__DFFE_PP1'.
Successfully finished Verilog frontend.

4.35.2. Continuing TECHMAP pass.
Using template \$_DFF_P_ for cells of type $_DFF_P_.
Using template \$_DFFE_PP_ for cells of type $_DFFE_PP_.
No more expansions possible.

4.36. Executing OPT_EXPR pass (perform const folding).
Optimizing module SOCnexpo.

4.37. Executing SIMPLEMAP pass (map simple cells to gate primitives).
Mapping SOCnexpo.$auto$alumacc.cc:485:replace_alu$1403.slice[0].carry ($lut).
Mapping SOCnexpo.$auto$alumacc.cc:485:replace_alu$1406.slice[0].carry ($lut).
Mapping SOCnexpo.$auto$alumacc.cc:485:replace_alu$1409.slice[0].carry ($lut).
Mapping SOCnexpo.$auto$alumacc.cc:485:replace_alu$1415.slice[0].carry ($lut).
Mapping SOCnexpo.$auto$alumacc.cc:485:replace_alu$1421.slice[0].carry ($lut).
Mapping SOCnexpo.$auto$alumacc.cc:485:replace_alu$1424.slice[32].carry ($lut).
Mapping SOCnexpo.$auto$alumacc.cc:485:replace_alu$1430.slice[0].carry ($lut).
Mapping SOCnexpo.$auto$alumacc.cc:485:replace_alu$1433.slice[0].carry ($lut).
Mapping SOCnexpo.$auto$alumacc.cc:485:replace_alu$1436.slice[0].carry ($lut).
Mapping SOCnexpo.$auto$alumacc.cc:485:replace_alu$1439.slice[0].carry ($lut).

4.38. Executing ICE40_FFINIT pass (implement FF init values).
Handling FF init values in SOCnexpo.
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5874 (SB_DFF): \UART_RX.bclk.divcounter [6] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2085 (SB_DFFE): \leds_en = 1
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2120 (SB_DFF): \Espera [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4108 (SB_DFF): \LEDS8_4.timer [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4257 (SB_DFFE): \UART_TX.q [7] = 1
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2121 (SB_DFF): \Espera [2] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2126 (SB_DFF): \Espera [7] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2124 (SB_DFF): \Espera [5] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2122 (SB_DFF): \Espera [3] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2125 (SB_DFF): \Espera [6] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2134 (SB_DFF): \RV32I.FD_pc [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2135 (SB_DFF): \RV32I.FD_pc [2] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4335 (SB_DFFE): \UART_RX.data [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2146 (SB_DFF): \RV32I.FD_pc [13] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2173 (SB_DFF): \RV32I.F_pc [8] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2138 (SB_DFF): \RV32I.FD_pc [5] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2147 (SB_DFF): \RV32I.FD_pc [14] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2133 (SB_DFF): \RV32I.FD_pc [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2187 (SB_DFF): \RV32I.F_pc [22] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2174 (SB_DFF): \RV32I.F_pc [9] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2181 (SB_DFF): \RV32I.F_pc [16] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2141 (SB_DFF): \RV32I.FD_pc [8] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2168 (SB_DFF): \RV32I.F_pc [3] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2188 (SB_DFF): \RV32I.F_pc [23] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2186 (SB_DFF): \RV32I.F_pc [21] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2185 (SB_DFF): \RV32I.F_pc [20] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2183 (SB_DFF): \RV32I.F_pc [18] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2182 (SB_DFF): \RV32I.F_pc [17] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2180 (SB_DFF): \RV32I.F_pc [15] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2184 (SB_DFF): \RV32I.F_pc [19] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2179 (SB_DFF): \RV32I.F_pc [14] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2178 (SB_DFF): \RV32I.F_pc [13] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2167 (SB_DFF): \RV32I.F_pc [2] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2177 (SB_DFF): \RV32I.F_pc [12] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2176 (SB_DFF): \RV32I.F_pc [11] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2189 (SB_DFF): \RV32I.F_pc [24] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2165 (SB_DFFE): \RV32I.F_pc [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2192 (SB_DFF): \RV32I.F_pc [27] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2191 (SB_DFF): \RV32I.F_pc [26] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2145 (SB_DFF): \RV32I.FD_pc [12] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2118 (SB_DFFE): \rst = 1
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2123 (SB_DFF): \Espera [4] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2190 (SB_DFF): \RV32I.F_pc [25] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2143 (SB_DFF): \RV32I.FD_pc [10] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2144 (SB_DFF): \RV32I.FD_pc [11] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2149 (SB_DFF): \RV32I.FD_pc [16] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2150 (SB_DFF): \RV32I.FD_pc [17] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2151 (SB_DFF): \RV32I.FD_pc [18] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2152 (SB_DFF): \RV32I.FD_pc [19] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2153 (SB_DFF): \RV32I.FD_pc [20] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2154 (SB_DFF): \RV32I.FD_pc [21] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2155 (SB_DFF): \RV32I.FD_pc [22] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2156 (SB_DFF): \RV32I.FD_pc [23] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2157 (SB_DFF): \RV32I.FD_pc [24] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2158 (SB_DFF): \RV32I.FD_pc [25] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2159 (SB_DFF): \RV32I.FD_pc [26] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2160 (SB_DFF): \RV32I.FD_pc [27] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2161 (SB_DFF): \RV32I.FD_pc [28] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2162 (SB_DFF): \RV32I.FD_pc [29] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2163 (SB_DFF): \RV32I.FD_pc [30] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2164 (SB_DFF): \RV32I.FD_pc [31] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2193 (SB_DFF): \RV32I.F_pc [28] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2169 (SB_DFF): \RV32I.F_pc [4] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2119 (SB_DFF): \Espera [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2175 (SB_DFF): \RV32I.F_pc [10] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2139 (SB_DFF): \RV32I.FD_pc [6] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2137 (SB_DFF): \RV32I.FD_pc [4] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5827 (SB_DFF): \UART_TX.bclk.divcounter [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2148 (SB_DFF): \RV32I.FD_pc [15] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4118 (SB_DFF): \LEDS8_4.timer [10] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4117 (SB_DFF): \LEDS8_4.timer [9] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2140 (SB_DFF): \RV32I.FD_pc [7] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2170 (SB_DFF): \RV32I.F_pc [5] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2194 (SB_DFF): \RV32I.F_pc [29] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4264 (SB_DFF): \UART_TX.done = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2136 (SB_DFF): \RV32I.FD_pc [3] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5868 (SB_DFF): \UART_RX.bclk.divcounter [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2196 (SB_DFF): \RV32I.F_pc [31] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2195 (SB_DFF): \RV32I.F_pc [30] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2172 (SB_DFF): \RV32I.F_pc [7] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2171 (SB_DFF): \RV32I.F_pc [6] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2132 (SB_DFF): \RV32I.FD_nop = 1
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2166 (SB_DFFE): \RV32I.F_pc [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2142 (SB_DFF): \RV32I.FD_pc [9] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4109 (SB_DFF): \LEDS8_4.timer [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4110 (SB_DFF): \LEDS8_4.timer [2] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4111 (SB_DFF): \LEDS8_4.timer [3] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4112 (SB_DFF): \LEDS8_4.timer [4] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4113 (SB_DFF): \LEDS8_4.timer [5] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4114 (SB_DFF): \LEDS8_4.timer [6] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4115 (SB_DFF): \LEDS8_4.timer [7] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4116 (SB_DFF): \LEDS8_4.timer [8] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4119 (SB_DFF): \LEDS8_4.timer [11] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4249 (SB_DFFE): \UART_TX.state = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4248 (SB_DFF): \UART_TX.q_re = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4251 (SB_DFFE): \UART_TX.q [1] = 1
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4252 (SB_DFFE): \UART_TX.q [2] = 1
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4253 (SB_DFFE): \UART_TX.q [3] = 1
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4254 (SB_DFFE): \UART_TX.q [4] = 1
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4255 (SB_DFFE): \UART_TX.q [5] = 1
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4256 (SB_DFFE): \UART_TX.q [6] = 1
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4250 (SB_DFFE): \UART_TX.q [0] = 1
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4259 (SB_DFF): \UART_TX.TX = 1
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4258 (SB_DFFE): \UART_TX.q [8] = 1
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4261 (SB_DFFE): \UART_TX.bits [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4262 (SB_DFFE): \UART_TX.bits [2] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4260 (SB_DFFE): \UART_TX.bits [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4312 (SB_DFF): \UART_RX.q_t0 = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4313 (SB_DFFE): \UART_RX.state = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4263 (SB_DFFE): \UART_TX.bits [3] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4315 (SB_DFFE): \UART_RX.div2counter [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4316 (SB_DFFE): \UART_RX.div2counter [2] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4317 (SB_DFFE): \UART_RX.div2counter [3] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4318 (SB_DFFE): \UART_RX.div2counter [4] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4319 (SB_DFFE): \UART_RX.div2counter [5] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4314 (SB_DFFE): \UART_RX.div2counter [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4320 (SB_DFFE): \UART_RX.div2counter [6] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4322 (SB_DFFE): \UART_RX.sr [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4323 (SB_DFFE): \UART_RX.sr [2] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4324 (SB_DFFE): \UART_RX.sr [3] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4325 (SB_DFFE): \UART_RX.sr [4] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4326 (SB_DFFE): \UART_RX.sr [5] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4327 (SB_DFFE): \UART_RX.sr [6] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4328 (SB_DFFE): \UART_RX.sr [7] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4321 (SB_DFFE): \UART_RX.sr [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4329 (SB_DFFE): \UART_RX.sr [8] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4331 (SB_DFFE): \UART_RX.cont [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4332 (SB_DFFE): \UART_RX.cont [2] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4333 (SB_DFFE): \UART_RX.cont [3] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4330 (SB_DFFE): \UART_RX.cont [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4334 (SB_DFFE): \UART_RX.cont [4] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4336 (SB_DFFE): \UART_RX.data [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4337 (SB_DFFE): \UART_RX.data [2] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4338 (SB_DFFE): \UART_RX.data [3] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4339 (SB_DFFE): \UART_RX.data [4] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4340 (SB_DFFE): \UART_RX.data [5] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4341 (SB_DFFE): \UART_RX.data [6] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4342 (SB_DFFE): \UART_RX.data [7] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5828 (SB_DFF): \UART_TX.bclk.divcounter [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5829 (SB_DFF): \UART_TX.bclk.divcounter [2] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5830 (SB_DFF): \UART_TX.bclk.divcounter [3] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5831 (SB_DFF): \UART_TX.bclk.divcounter [4] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5832 (SB_DFF): \UART_TX.bclk.divcounter [5] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5833 (SB_DFF): \UART_TX.bclk.divcounter [6] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5869 (SB_DFF): \UART_RX.bclk.divcounter [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5870 (SB_DFF): \UART_RX.bclk.divcounter [2] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5871 (SB_DFF): \UART_RX.bclk.divcounter [3] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5872 (SB_DFF): \UART_RX.bclk.divcounter [4] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5873 (SB_DFF): \UART_RX.bclk.divcounter [5] = 0

4.39. Executing ICE40_FFSSR pass (merge synchronous set/reset into FF cells).
Merging set/reset $_MUX_ cells into SB_FFs in SOCnexpo.
Merging $auto$simplemap.cc:277:simplemap_mux$5881 (A=$auto$wreduce.cc:460:run$1371 [6], B=1'0, S=\UART_RX.bclk.reset) into $auto$simplemap.cc:420:simplemap_dff$5874 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$1986 (A=\RV32I.EM_rs2Data [1], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$2087 (SB_DFFE).
Merging $auto$simplemap.cc:277:simplemap_mux$1987 (A=\RV32I.EM_rs2Data [2], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$2088 (SB_DFFE).
Merging $auto$simplemap.cc:277:simplemap_mux$1988 (A=\RV32I.EM_rs2Data [3], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$2089 (SB_DFFE).
Merging $auto$simplemap.cc:277:simplemap_mux$1968 (A=\DatatoWrite [31], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$2117 (SB_DFFE).
Merging $auto$simplemap.cc:277:simplemap_mux$1966 (A=\DatatoWrite [29], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$2115 (SB_DFFE).
Merging $auto$simplemap.cc:277:simplemap_mux$2039 (A=\DatatoWrite [14], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$2100 (SB_DFFE).
Merging $auto$simplemap.cc:277:simplemap_mux$1985 (A=\RV32I.EM_rs2Data [0], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$2086 (SB_DFFE).
Merging $auto$simplemap.cc:277:simplemap_mux$3281 (A=$techmap\RV32I.$add$Procesador_V2.0b/RV32nexpo.v:484$322_Y [9], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$2497 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$3321 (A=$techmap\RV32I.$add$Procesador_V2.0b/RV32nexpo.v:484$322_Y [49], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$2537 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$3607 (A=\RV32I.DE_rs1Data [7], B=1'0, S=\RV32I.DE_funct3 [2]) into $auto$simplemap.cc:420:simplemap_dff$2322 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$2038 (A=\DatatoWrite [13], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$2099 (SB_DFFE).
Merging $auto$simplemap.cc:277:simplemap_mux$1992 (A=\RV32I.EM_rs2Data [7], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$2093 (SB_DFFE).
Merging $auto$simplemap.cc:277:simplemap_mux$2033 (A=\DatatoWrite [8], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$2094 (SB_DFFE).
Merging $auto$simplemap.cc:277:simplemap_mux$3134 (A=\RV32I.M_CSRtoWrite [22], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$2478 (SB_DFFE).
Merging $auto$simplemap.cc:277:simplemap_mux$1964 (A=\DatatoWrite [27], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$2113 (SB_DFFE).
Merging $auto$simplemap.cc:277:simplemap_mux$1963 (A=\DatatoWrite [26], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$2112 (SB_DFFE).
Merging $auto$simplemap.cc:277:simplemap_mux$2016 (A=\DatatoWrite [23], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$2109 (SB_DFFE).
Merging $auto$simplemap.cc:277:simplemap_mux$4132 (A=$auto$simplemap.cc:309:simplemap_lut$10113, B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$4108 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$2009 (A=\DatatoWrite [16], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$2102 (SB_DFFE).
Merging $auto$simplemap.cc:277:simplemap_mux$2014 (A=\DatatoWrite [21], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$2107 (SB_DFFE).
Merging $auto$simplemap.cc:277:simplemap_mux$1962 (A=\DatatoWrite [25], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$2111 (SB_DFFE).
Merging $auto$simplemap.cc:277:simplemap_mux$2013 (A=\DatatoWrite [20], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$2106 (SB_DFFE).
Merging $auto$simplemap.cc:277:simplemap_mux$2012 (A=\DatatoWrite [19], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$2105 (SB_DFFE).
Merging $auto$simplemap.cc:277:simplemap_mux$3318 (A=$techmap\RV32I.$add$Procesador_V2.0b/RV32nexpo.v:484$322_Y [46], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$2534 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$2011 (A=\DatatoWrite [18], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$2104 (SB_DFFE).
Merging $auto$simplemap.cc:277:simplemap_mux$1961 (A=\DatatoWrite [24], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$2110 (SB_DFFE).
Merging $auto$simplemap.cc:277:simplemap_mux$1991 (A=\RV32I.EM_rs2Data [6], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$2092 (SB_DFFE).
Merging $auto$simplemap.cc:277:simplemap_mux$3277 (A=$techmap\RV32I.$add$Procesador_V2.0b/RV32nexpo.v:484$322_Y [5], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$2493 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$2681 (A=\RV32I.F_pc [1], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$2134 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$2682 (A=\RV32I.F_pc [2], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$2135 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$2693 (A=\RV32I.F_pc [13], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$2146 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$3314 (A=$techmap\RV32I.$add$Procesador_V2.0b/RV32nexpo.v:484$322_Y [42], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$2530 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$2624 (A=$techmap\RV32I.$procmux$1105_Y [8], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$2173 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$3316 (A=$techmap\RV32I.$add$Procesador_V2.0b/RV32nexpo.v:484$322_Y [44], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$2532 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$2685 (A=\RV32I.F_pc [5], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$2138 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$2694 (A=\RV32I.F_pc [14], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$2147 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$3300 (A=$techmap\RV32I.$add$Procesador_V2.0b/RV32nexpo.v:484$322_Y [28], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$2516 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$4144 (A=1'1, B=$techmap$techmap\LEDS8_4.$procmux$1128.$ternary$/home/jfdava/.apio/packages/toolchain-yosys/bin/../share/yosys/techmap.v:445$4149_Y [0], S=$techmap\LEDS8_4.$and$ControladorMatrizLed.v:42$6_Y) into $auto$simplemap.cc:420:simplemap_dff$4128 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$3275 (A=$techmap\RV32I.$add$Procesador_V2.0b/RV32nexpo.v:484$322_Y [3], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$2491 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$3235 (A=$techmap\RV32I.$add$Procesador_V2.0b/RV32nexpo.v:483$320_Y [27], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$2579 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$3324 (A=$techmap\RV32I.$add$Procesador_V2.0b/RV32nexpo.v:484$322_Y [52], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$2540 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$3276 (A=$techmap\RV32I.$add$Procesador_V2.0b/RV32nexpo.v:484$322_Y [4], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$2492 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$3298 (A=$techmap\RV32I.$add$Procesador_V2.0b/RV32nexpo.v:484$322_Y [26], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$2514 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$2680 (A=\RV32I.F_pc [0], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$2133 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$4061 (A=\instr [19], B=1'0, S=\RV32I.FD_nop) into $auto$simplemap.cc:420:simplemap_dff$2224 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$2638 (A=$techmap\RV32I.$procmux$1105_Y [22], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$2187 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$2625 (A=$techmap\RV32I.$procmux$1105_Y [9], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$2174 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$2632 (A=$techmap\RV32I.$procmux$1105_Y [16], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$2181 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$3141 (A=\RV32I.M_CSRtoWrite [29], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$2485 (SB_DFFE).
Merging $auto$simplemap.cc:277:simplemap_mux$3313 (A=$techmap\RV32I.$add$Procesador_V2.0b/RV32nexpo.v:484$322_Y [41], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$2529 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$3312 (A=$techmap\RV32I.$add$Procesador_V2.0b/RV32nexpo.v:484$322_Y [40], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$2528 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$2688 (A=\RV32I.F_pc [8], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$2141 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$2619 (A=$techmap\RV32I.$procmux$1105_Y [3], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$2168 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$3310 (A=$techmap\RV32I.$add$Procesador_V2.0b/RV32nexpo.v:484$322_Y [38], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$2526 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$2639 (A=$techmap\RV32I.$procmux$1105_Y [23], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$2188 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$2637 (A=$techmap\RV32I.$procmux$1105_Y [21], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$2186 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$2636 (A=$techmap\RV32I.$procmux$1105_Y [20], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$2185 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$2634 (A=$techmap\RV32I.$procmux$1105_Y [18], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$2183 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$3605 (A=\RV32I.DE_rs1Data [5], B=1'0, S=\RV32I.DE_funct3 [2]) into $auto$simplemap.cc:420:simplemap_dff$2320 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$2633 (A=$techmap\RV32I.$procmux$1105_Y [17], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$2182 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$2631 (A=$techmap\RV32I.$procmux$1105_Y [15], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$2180 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$2635 (A=$techmap\RV32I.$procmux$1105_Y [19], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$2184 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$2630 (A=$techmap\RV32I.$procmux$1105_Y [14], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$2179 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$2629 (A=$techmap\RV32I.$procmux$1105_Y [13], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$2178 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$2618 (A=$techmap\RV32I.$procmux$1105_Y [2], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$2167 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$2628 (A=$techmap\RV32I.$procmux$1105_Y [12], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$2177 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$3236 (A=$techmap\RV32I.$add$Procesador_V2.0b/RV32nexpo.v:483$320_Y [28], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$2580 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$3765 (A=1'0, B=\RV32I.FD_instr [14], S=\RV32I.D_ALUFun) into $auto$simplemap.cc:420:simplemap_dff$2213 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$2627 (A=$techmap\RV32I.$procmux$1105_Y [11], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$2176 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$2640 (A=$techmap\RV32I.$procmux$1105_Y [24], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$2189 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$3142 (A=\RV32I.M_CSRtoWrite [30], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$2486 (SB_DFFE).
Merging $auto$simplemap.cc:277:simplemap_mux$3311 (A=$techmap\RV32I.$add$Procesador_V2.0b/RV32nexpo.v:484$322_Y [39], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$2527 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$2616 (A=\RV32I.E_JumpAddr [0], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$2165 (SB_DFFE).
Merging $auto$simplemap.cc:277:simplemap_mux$2832 (A=1'0, B=$techmap\RV32I.$procmux$1015_Y, S=$auto$simplemap.cc:256:simplemap_eqne$4024) into $auto$simplemap.cc:420:simplemap_dff$2197 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$2851 (A=1'1, B=$techmap\RV32I.$procmux$895_Y, S=$auto$simplemap.cc:256:simplemap_eqne$4024) into $auto$simplemap.cc:420:simplemap_dff$2202 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$2813 (A=1'0, B=$techmap\RV32I.$procmux$1082_Y, S=$auto$simplemap.cc:256:simplemap_eqne$4024) into $auto$simplemap.cc:420:simplemap_dff$2203 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$2859 (A=1'1, B=$techmap\RV32I.$procmux$870_Y, S=$auto$simplemap.cc:256:simplemap_eqne$4024) into $auto$simplemap.cc:420:simplemap_dff$2205 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$3630 (A=\RV32I.DE_rs1Data [30], B=1'0, S=\RV32I.DE_funct3 [2]) into $auto$simplemap.cc:420:simplemap_dff$2345 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$3629 (A=\RV32I.DE_rs1Data [29], B=1'0, S=\RV32I.DE_funct3 [2]) into $auto$simplemap.cc:420:simplemap_dff$2344 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$4054 (A=\instr [12], B=1'0, S=\RV32I.FD_nop) into $auto$simplemap.cc:420:simplemap_dff$2208 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$2643 (A=$techmap\RV32I.$procmux$1105_Y [27], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$2192 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$3764 (A=1'0, B=\RV32I.FD_instr [13], S=\RV32I.D_ALUFun) into $auto$simplemap.cc:420:simplemap_dff$2212 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$2642 (A=$techmap\RV32I.$procmux$1105_Y [26], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$2191 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$3763 (A=1'0, B=\RV32I.FD_instr [12], S=\RV32I.D_ALUFun) into $auto$simplemap.cc:420:simplemap_dff$2211 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$3628 (A=\RV32I.DE_rs1Data [28], B=1'0, S=\RV32I.DE_funct3 [2]) into $auto$simplemap.cc:420:simplemap_dff$2343 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$3320 (A=$techmap\RV32I.$add$Procesador_V2.0b/RV32nexpo.v:484$322_Y [48], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$2536 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$4049 (A=\instr [7], B=1'0, S=\RV32I.FD_nop) into $auto$simplemap.cc:420:simplemap_dff$2215 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$3143 (A=\RV32I.M_CSRtoWrite [31], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$2487 (SB_DFFE).
Merging $auto$simplemap.cc:277:simplemap_mux$3309 (A=$techmap\RV32I.$add$Procesador_V2.0b/RV32nexpo.v:484$322_Y [37], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$2525 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$3308 (A=$techmap\RV32I.$add$Procesador_V2.0b/RV32nexpo.v:484$322_Y [36], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$2524 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$4057 (A=\instr [15], B=1'0, S=\RV32I.FD_nop) into $auto$simplemap.cc:420:simplemap_dff$2220 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$3254 (A=$techmap\RV32I.$add$Procesador_V2.0b/RV32nexpo.v:483$320_Y [46], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$2598 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$2692 (A=\RV32I.F_pc [12], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$2145 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$2040 (A=\DatatoWrite [15], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$2101 (SB_DFFE).
Merging $auto$simplemap.cc:277:simplemap_mux$3239 (A=$techmap\RV32I.$add$Procesador_V2.0b/RV32nexpo.v:483$320_Y [31], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$2583 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$2015 (A=\DatatoWrite [22], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$2108 (SB_DFFE).
Merging $auto$simplemap.cc:277:simplemap_mux$2641 (A=$techmap\RV32I.$procmux$1105_Y [25], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$2190 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$2724 (A=1'0, B=$techmap\RV32I.$procmux$1093_Y [11], S=$auto$simplemap.cc:256:simplemap_eqne$3958) into $auto$simplemap.cc:420:simplemap_dff$2236 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$3273 (A=$techmap\RV32I.$add$Procesador_V2.0b/RV32nexpo.v:484$322_Y [1], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$2489 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$3307 (A=$techmap\RV32I.$add$Procesador_V2.0b/RV32nexpo.v:484$322_Y [35], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$2523 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$3306 (A=$techmap\RV32I.$add$Procesador_V2.0b/RV32nexpo.v:484$322_Y [34], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$2522 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$2713 (A=1'0, B=$techmap\RV32I.$procmux$1093_Y [0], S=$auto$simplemap.cc:256:simplemap_eqne$3958) into $auto$simplemap.cc:420:simplemap_dff$2225 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$3305 (A=$techmap\RV32I.$add$Procesador_V2.0b/RV32nexpo.v:484$322_Y [33], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$2521 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$3303 (A=$techmap\RV32I.$add$Procesador_V2.0b/RV32nexpo.v:484$322_Y [31], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$2519 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$3304 (A=$techmap\RV32I.$add$Procesador_V2.0b/RV32nexpo.v:484$322_Y [32], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$2520 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$3302 (A=$techmap\RV32I.$add$Procesador_V2.0b/RV32nexpo.v:484$322_Y [30], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$2518 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$2690 (A=\RV32I.F_pc [10], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$2143 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$2691 (A=\RV32I.F_pc [11], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$2144 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$3279 (A=$techmap\RV32I.$add$Procesador_V2.0b/RV32nexpo.v:484$322_Y [7], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$2495 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$3296 (A=$techmap\RV32I.$add$Procesador_V2.0b/RV32nexpo.v:484$322_Y [24], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$2512 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$2696 (A=\RV32I.F_pc [16], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$2149 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$2697 (A=\RV32I.F_pc [17], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$2150 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$2698 (A=\RV32I.F_pc [18], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$2151 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$2699 (A=\RV32I.F_pc [19], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$2152 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$2700 (A=\RV32I.F_pc [20], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$2153 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$2701 (A=\RV32I.F_pc [21], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$2154 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$2702 (A=\RV32I.F_pc [22], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$2155 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$2703 (A=\RV32I.F_pc [23], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$2156 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$2704 (A=\RV32I.F_pc [24], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$2157 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$2705 (A=\RV32I.F_pc [25], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$2158 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$2706 (A=\RV32I.F_pc [26], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$2159 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$2707 (A=\RV32I.F_pc [27], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$2160 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$2708 (A=\RV32I.F_pc [28], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$2161 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$2709 (A=\RV32I.F_pc [29], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$2162 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$2710 (A=\RV32I.F_pc [30], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$2163 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$2711 (A=\RV32I.F_pc [31], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$2164 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$4055 (A=\instr [13], B=1'0, S=\RV32I.FD_nop) into $auto$simplemap.cc:420:simplemap_dff$2209 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$4056 (A=\instr [14], B=1'0, S=\RV32I.FD_nop) into $auto$simplemap.cc:420:simplemap_dff$2210 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$4050 (A=\instr [8], B=1'0, S=\RV32I.FD_nop) into $auto$simplemap.cc:420:simplemap_dff$2216 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$4051 (A=\instr [9], B=1'0, S=\RV32I.FD_nop) into $auto$simplemap.cc:420:simplemap_dff$2217 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$4052 (A=\instr [10], B=1'0, S=\RV32I.FD_nop) into $auto$simplemap.cc:420:simplemap_dff$2218 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$3280 (A=$techmap\RV32I.$add$Procesador_V2.0b/RV32nexpo.v:484$322_Y [8], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$2496 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$2714 (A=1'0, B=$techmap\RV32I.$procmux$1093_Y [1], S=$auto$simplemap.cc:256:simplemap_eqne$3958) into $auto$simplemap.cc:420:simplemap_dff$2226 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$2715 (A=1'0, B=$techmap\RV32I.$procmux$1093_Y [2], S=$auto$simplemap.cc:256:simplemap_eqne$3958) into $auto$simplemap.cc:420:simplemap_dff$2227 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$2716 (A=1'0, B=$techmap\RV32I.$procmux$1093_Y [3], S=$auto$simplemap.cc:256:simplemap_eqne$3958) into $auto$simplemap.cc:420:simplemap_dff$2228 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$2717 (A=1'0, B=$techmap\RV32I.$procmux$1093_Y [4], S=$auto$simplemap.cc:256:simplemap_eqne$3958) into $auto$simplemap.cc:420:simplemap_dff$2229 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$2718 (A=1'0, B=$techmap\RV32I.$procmux$1093_Y [5], S=$auto$simplemap.cc:256:simplemap_eqne$3958) into $auto$simplemap.cc:420:simplemap_dff$2230 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$2719 (A=1'0, B=$techmap\RV32I.$procmux$1093_Y [6], S=$auto$simplemap.cc:256:simplemap_eqne$3958) into $auto$simplemap.cc:420:simplemap_dff$2231 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$2720 (A=1'0, B=$techmap\RV32I.$procmux$1093_Y [7], S=$auto$simplemap.cc:256:simplemap_eqne$3958) into $auto$simplemap.cc:420:simplemap_dff$2232 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$2722 (A=1'0, B=$techmap\RV32I.$procmux$1093_Y [9], S=$auto$simplemap.cc:256:simplemap_eqne$3958) into $auto$simplemap.cc:420:simplemap_dff$2234 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$2723 (A=1'0, B=$techmap\RV32I.$procmux$1093_Y [10], S=$auto$simplemap.cc:256:simplemap_eqne$3958) into $auto$simplemap.cc:420:simplemap_dff$2235 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$3328 (A=$techmap\RV32I.$add$Procesador_V2.0b/RV32nexpo.v:484$322_Y [56], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$2544 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$4053 (A=\instr [11], B=1'0, S=\RV32I.FD_nop) into $auto$simplemap.cc:420:simplemap_dff$2219 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$2644 (A=$techmap\RV32I.$procmux$1105_Y [28], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$2193 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$2620 (A=$techmap\RV32I.$procmux$1105_Y [4], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$2169 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$2010 (A=\DatatoWrite [17], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$2103 (SB_DFFE).
Merging $auto$simplemap.cc:277:simplemap_mux$3611 (A=\RV32I.DE_rs1Data [11], B=1'0, S=\RV32I.DE_funct3 [2]) into $auto$simplemap.cc:420:simplemap_dff$2326 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$3612 (A=\RV32I.DE_rs1Data [12], B=1'0, S=\RV32I.DE_funct3 [2]) into $auto$simplemap.cc:420:simplemap_dff$2327 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$3613 (A=\RV32I.DE_rs1Data [13], B=1'0, S=\RV32I.DE_funct3 [2]) into $auto$simplemap.cc:420:simplemap_dff$2328 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$3614 (A=\RV32I.DE_rs1Data [14], B=1'0, S=\RV32I.DE_funct3 [2]) into $auto$simplemap.cc:420:simplemap_dff$2329 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$3615 (A=\RV32I.DE_rs1Data [15], B=1'0, S=\RV32I.DE_funct3 [2]) into $auto$simplemap.cc:420:simplemap_dff$2330 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$3616 (A=\RV32I.DE_rs1Data [16], B=1'0, S=\RV32I.DE_funct3 [2]) into $auto$simplemap.cc:420:simplemap_dff$2331 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$3617 (A=\RV32I.DE_rs1Data [17], B=1'0, S=\RV32I.DE_funct3 [2]) into $auto$simplemap.cc:420:simplemap_dff$2332 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$3618 (A=\RV32I.DE_rs1Data [18], B=1'0, S=\RV32I.DE_funct3 [2]) into $auto$simplemap.cc:420:simplemap_dff$2333 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$3619 (A=\RV32I.DE_rs1Data [19], B=1'0, S=\RV32I.DE_funct3 [2]) into $auto$simplemap.cc:420:simplemap_dff$2334 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$3620 (A=\RV32I.DE_rs1Data [20], B=1'0, S=\RV32I.DE_funct3 [2]) into $auto$simplemap.cc:420:simplemap_dff$2335 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$3621 (A=\RV32I.DE_rs1Data [21], B=1'0, S=\RV32I.DE_funct3 [2]) into $auto$simplemap.cc:420:simplemap_dff$2336 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$3622 (A=\RV32I.DE_rs1Data [22], B=1'0, S=\RV32I.DE_funct3 [2]) into $auto$simplemap.cc:420:simplemap_dff$2337 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$3283 (A=$techmap\RV32I.$add$Procesador_V2.0b/RV32nexpo.v:484$322_Y [11], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$2499 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$3285 (A=$techmap\RV32I.$add$Procesador_V2.0b/RV32nexpo.v:484$322_Y [13], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$2501 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$3625 (A=\RV32I.DE_rs1Data [25], B=1'0, S=\RV32I.DE_funct3 [2]) into $auto$simplemap.cc:420:simplemap_dff$2340 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$3626 (A=\RV32I.DE_rs1Data [26], B=1'0, S=\RV32I.DE_funct3 [2]) into $auto$simplemap.cc:420:simplemap_dff$2341 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$3301 (A=$techmap\RV32I.$add$Procesador_V2.0b/RV32nexpo.v:484$322_Y [29], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$2517 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$3137 (A=\RV32I.M_CSRtoWrite [25], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$2481 (SB_DFFE).
Merging $auto$simplemap.cc:277:simplemap_mux$3323 (A=$techmap\RV32I.$add$Procesador_V2.0b/RV32nexpo.v:484$322_Y [51], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$2539 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$3113 (A=\RV32I.M_CSRtoWrite [1], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$2457 (SB_DFFE).
Merging $auto$simplemap.cc:277:simplemap_mux$3219 (A=$techmap\RV32I.$add$Procesador_V2.0b/RV32nexpo.v:483$320_Y [11], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$2563 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$3221 (A=$techmap\RV32I.$add$Procesador_V2.0b/RV32nexpo.v:483$320_Y [13], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$2565 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$3223 (A=$techmap\RV32I.$add$Procesador_V2.0b/RV32nexpo.v:483$320_Y [15], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$2567 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$2826 (A=1'0, B=$techmap\RV32I.$procmux$1034_Y, S=$auto$simplemap.cc:256:simplemap_eqne$4024) into $auto$simplemap.cc:420:simplemap_dff$2214 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$2626 (A=$techmap\RV32I.$procmux$1105_Y [10], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$2175 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$3237 (A=$techmap\RV32I.$add$Procesador_V2.0b/RV32nexpo.v:483$320_Y [29], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$2581 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$3295 (A=$techmap\RV32I.$add$Procesador_V2.0b/RV32nexpo.v:484$322_Y [23], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$2511 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$2686 (A=\RV32I.F_pc [6], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$2139 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$3278 (A=$techmap\RV32I.$add$Procesador_V2.0b/RV32nexpo.v:484$322_Y [6], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$2494 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$2684 (A=\RV32I.F_pc [4], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$2137 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$1967 (A=\DatatoWrite [30], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$2116 (SB_DFFE).
Merging $auto$simplemap.cc:277:simplemap_mux$3631 (A=\RV32I.DE_rs1Data [31], B=1'0, S=\RV32I.DE_funct3 [2]) into $auto$simplemap.cc:420:simplemap_dff$2346 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$1989 (A=\RV32I.EM_rs2Data [4], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$2090 (SB_DFFE).
Merging $auto$simplemap.cc:277:simplemap_mux$3322 (A=$techmap\RV32I.$add$Procesador_V2.0b/RV32nexpo.v:484$322_Y [50], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$2538 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$3234 (A=$techmap\RV32I.$add$Procesador_V2.0b/RV32nexpo.v:483$320_Y [26], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$2578 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$3246 (A=$techmap\RV32I.$add$Procesador_V2.0b/RV32nexpo.v:483$320_Y [38], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$2590 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$3270 (A=$techmap\RV32I.$add$Procesador_V2.0b/RV32nexpo.v:483$320_Y [62], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$2614 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$3257 (A=$techmap\RV32I.$add$Procesador_V2.0b/RV32nexpo.v:483$320_Y [49], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$2601 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$3624 (A=\RV32I.DE_rs1Data [24], B=1'0, S=\RV32I.DE_funct3 [2]) into $auto$simplemap.cc:420:simplemap_dff$2339 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$3330 (A=$techmap\RV32I.$add$Procesador_V2.0b/RV32nexpo.v:484$322_Y [58], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$2546 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$3332 (A=$techmap\RV32I.$add$Procesador_V2.0b/RV32nexpo.v:484$322_Y [60], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$2548 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$3334 (A=$techmap\RV32I.$add$Procesador_V2.0b/RV32nexpo.v:484$322_Y [62], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$2550 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$3209 (A=$techmap\RV32I.$add$Procesador_V2.0b/RV32nexpo.v:483$320_Y [1], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$2553 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$3211 (A=$techmap\RV32I.$add$Procesador_V2.0b/RV32nexpo.v:483$320_Y [3], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$2555 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$3213 (A=$techmap\RV32I.$add$Procesador_V2.0b/RV32nexpo.v:483$320_Y [5], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$2557 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$3215 (A=$techmap\RV32I.$add$Procesador_V2.0b/RV32nexpo.v:483$320_Y [7], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$2559 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$3217 (A=$techmap\RV32I.$add$Procesador_V2.0b/RV32nexpo.v:483$320_Y [9], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$2561 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$3274 (A=$techmap\RV32I.$add$Procesador_V2.0b/RV32nexpo.v:484$322_Y [2], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$2490 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$3299 (A=$techmap\RV32I.$add$Procesador_V2.0b/RV32nexpo.v:484$322_Y [27], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$2515 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$3225 (A=$techmap\RV32I.$add$Procesador_V2.0b/RV32nexpo.v:483$320_Y [17], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$2569 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$3120 (A=\RV32I.M_CSRtoWrite [8], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$2464 (SB_DFFE).
Merging $auto$simplemap.cc:277:simplemap_mux$3119 (A=\RV32I.M_CSRtoWrite [7], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$2463 (SB_DFFE).
Merging $auto$simplemap.cc:277:simplemap_mux$3627 (A=\RV32I.DE_rs1Data [27], B=1'0, S=\RV32I.DE_funct3 [2]) into $auto$simplemap.cc:420:simplemap_dff$2342 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$5834 (A=$auto$simplemap.cc:309:simplemap_lut$10170, B=1'0, S=\UART_TX.bclk.reset) into $auto$simplemap.cc:420:simplemap_dff$5827 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$3609 (A=\RV32I.DE_rs1Data [9], B=1'0, S=\RV32I.DE_funct3 [2]) into $auto$simplemap.cc:420:simplemap_dff$2324 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$2695 (A=\RV32I.F_pc [15], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$2148 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$2034 (A=\DatatoWrite [9], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$2095 (SB_DFFE).
Merging $auto$simplemap.cc:277:simplemap_mux$3231 (A=$techmap\RV32I.$add$Procesador_V2.0b/RV32nexpo.v:483$320_Y [23], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$2575 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$3232 (A=$techmap\RV32I.$add$Procesador_V2.0b/RV32nexpo.v:483$320_Y [24], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$2576 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$1942 (A=$procmux$702_Y, B=1'1, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$2084 (SB_DFFE).
Merging $auto$simplemap.cc:277:simplemap_mux$4142 (A=$auto$wreduce.cc:460:run$1347 [10], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$4118 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$3261 (A=$techmap\RV32I.$add$Procesador_V2.0b/RV32nexpo.v:483$320_Y [53], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$2605 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$3608 (A=\RV32I.DE_rs1Data [8], B=1'0, S=\RV32I.DE_funct3 [2]) into $auto$simplemap.cc:420:simplemap_dff$2323 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$3136 (A=\RV32I.M_CSRtoWrite [24], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$2480 (SB_DFFE).
Merging $auto$simplemap.cc:277:simplemap_mux$3287 (A=$techmap\RV32I.$add$Procesador_V2.0b/RV32nexpo.v:484$322_Y [15], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$2503 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$3139 (A=\RV32I.M_CSRtoWrite [27], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$2483 (SB_DFFE).
Merging $auto$simplemap.cc:277:simplemap_mux$4141 (A=$auto$wreduce.cc:460:run$1347 [9], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$4117 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$4163 (A=1'1, B=$techmap$techmap\LEDS8_4.$procmux$1120.$ternary$/home/jfdava/.apio/packages/toolchain-yosys/bin/../share/yosys/techmap.v:445$4186_Y [6], S=$techmap\LEDS8_4.$and$ControladorMatrizLed.v:42$6_Y) into $auto$simplemap.cc:420:simplemap_dff$4126 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$2687 (A=\RV32I.F_pc [7], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$2140 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$3114 (A=\RV32I.M_CSRtoWrite [2], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$2458 (SB_DFFE).
Merging $auto$simplemap.cc:277:simplemap_mux$3115 (A=\RV32I.M_CSRtoWrite [3], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$2459 (SB_DFFE).
Merging $auto$simplemap.cc:277:simplemap_mux$3116 (A=\RV32I.M_CSRtoWrite [4], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$2460 (SB_DFFE).
Merging $auto$simplemap.cc:277:simplemap_mux$3117 (A=\RV32I.M_CSRtoWrite [5], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$2461 (SB_DFFE).
Merging $auto$simplemap.cc:277:simplemap_mux$3118 (A=\RV32I.M_CSRtoWrite [6], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$2462 (SB_DFFE).
Merging $auto$simplemap.cc:277:simplemap_mux$3326 (A=$techmap\RV32I.$add$Procesador_V2.0b/RV32nexpo.v:484$322_Y [54], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$2542 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$2035 (A=\DatatoWrite [10], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$2096 (SB_DFFE).
Merging $auto$simplemap.cc:277:simplemap_mux$2621 (A=$techmap\RV32I.$procmux$1105_Y [5], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$2170 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$2645 (A=$techmap\RV32I.$procmux$1105_Y [29], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$2194 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$4058 (A=\instr [16], B=1'0, S=\RV32I.FD_nop) into $auto$simplemap.cc:420:simplemap_dff$2221 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$3112 (A=\RV32I.M_CSRtoWrite [0], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$2456 (SB_DFFE).
Merging $auto$simplemap.cc:277:simplemap_mux$3297 (A=$techmap\RV32I.$add$Procesador_V2.0b/RV32nexpo.v:484$322_Y [25], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$2513 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$3606 (A=\RV32I.DE_rs1Data [6], B=1'0, S=\RV32I.DE_funct3 [2]) into $auto$simplemap.cc:420:simplemap_dff$2321 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$3288 (A=$techmap\RV32I.$add$Procesador_V2.0b/RV32nexpo.v:484$322_Y [16], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$2504 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$3284 (A=$techmap\RV32I.$add$Procesador_V2.0b/RV32nexpo.v:484$322_Y [12], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$2500 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$3282 (A=$techmap\RV32I.$add$Procesador_V2.0b/RV32nexpo.v:484$322_Y [10], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$2498 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$3289 (A=$techmap\RV32I.$add$Procesador_V2.0b/RV32nexpo.v:484$322_Y [17], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$2505 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$3286 (A=$techmap\RV32I.$add$Procesador_V2.0b/RV32nexpo.v:484$322_Y [14], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$2502 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$3623 (A=\RV32I.DE_rs1Data [23], B=1'0, S=\RV32I.DE_funct3 [2]) into $auto$simplemap.cc:420:simplemap_dff$2338 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$3243 (A=$techmap\RV32I.$add$Procesador_V2.0b/RV32nexpo.v:483$320_Y [35], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$2587 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$2683 (A=\RV32I.F_pc [3], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$2136 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$3293 (A=$techmap\RV32I.$add$Procesador_V2.0b/RV32nexpo.v:484$322_Y [21], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$2509 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$3292 (A=$techmap\RV32I.$add$Procesador_V2.0b/RV32nexpo.v:484$322_Y [20], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$2508 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$5875 (A=$auto$simplemap.cc:309:simplemap_lut$10246, B=1'0, S=\UART_RX.bclk.reset) into $auto$simplemap.cc:420:simplemap_dff$5868 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$4073 (A=\instr [31], B=1'0, S=\RV32I.FD_nop) into $auto$simplemap.cc:420:simplemap_dff$2256 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$4060 (A=\instr [18], B=1'0, S=\RV32I.FD_nop) into $auto$simplemap.cc:420:simplemap_dff$2223 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$4059 (A=\instr [17], B=1'0, S=\RV32I.FD_nop) into $auto$simplemap.cc:420:simplemap_dff$2222 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$2647 (A=$techmap\RV32I.$procmux$1105_Y [31], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$2196 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$2646 (A=$techmap\RV32I.$procmux$1105_Y [30], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$2195 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$2623 (A=$techmap\RV32I.$procmux$1105_Y [7], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$2172 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$2622 (A=$techmap\RV32I.$procmux$1105_Y [6], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$2171 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$3315 (A=$techmap\RV32I.$add$Procesador_V2.0b/RV32nexpo.v:484$322_Y [43], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$2531 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$3140 (A=\RV32I.M_CSRtoWrite [28], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$2484 (SB_DFFE).
Merging $auto$simplemap.cc:277:simplemap_mux$3319 (A=$techmap\RV32I.$add$Procesador_V2.0b/RV32nexpo.v:484$322_Y [47], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$2535 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$3138 (A=\RV32I.M_CSRtoWrite [26], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$2482 (SB_DFFE).
Merging $auto$simplemap.cc:277:simplemap_mux$2037 (A=\DatatoWrite [12], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$2098 (SB_DFFE).
Merging $auto$simplemap.cc:277:simplemap_mux$2036 (A=\DatatoWrite [11], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$2097 (SB_DFFE).
Merging $auto$simplemap.cc:277:simplemap_mux$3317 (A=$techmap\RV32I.$add$Procesador_V2.0b/RV32nexpo.v:484$322_Y [45], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$2533 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$3325 (A=$techmap\RV32I.$add$Procesador_V2.0b/RV32nexpo.v:484$322_Y [53], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$2541 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$3135 (A=\RV32I.M_CSRtoWrite [23], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$2479 (SB_DFFE).
Merging $auto$simplemap.cc:277:simplemap_mux$3327 (A=$techmap\RV32I.$add$Procesador_V2.0b/RV32nexpo.v:484$322_Y [55], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$2543 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$3329 (A=$techmap\RV32I.$add$Procesador_V2.0b/RV32nexpo.v:484$322_Y [57], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$2545 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$3133 (A=\RV32I.M_CSRtoWrite [21], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$2477 (SB_DFFE).
Merging $auto$simplemap.cc:277:simplemap_mux$3331 (A=$techmap\RV32I.$add$Procesador_V2.0b/RV32nexpo.v:484$322_Y [59], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$2547 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$3132 (A=\RV32I.M_CSRtoWrite [20], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$2476 (SB_DFFE).
Merging $auto$simplemap.cc:277:simplemap_mux$3333 (A=$techmap\RV32I.$add$Procesador_V2.0b/RV32nexpo.v:484$322_Y [61], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$2549 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$3131 (A=\RV32I.M_CSRtoWrite [19], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$2475 (SB_DFFE).
Merging $auto$simplemap.cc:277:simplemap_mux$3335 (A=$techmap\RV32I.$add$Procesador_V2.0b/RV32nexpo.v:484$322_Y [63], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$2551 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$3130 (A=\RV32I.M_CSRtoWrite [18], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$2474 (SB_DFFE).
Merging $auto$simplemap.cc:277:simplemap_mux$3272 (A=$techmap\RV32I.$add$Procesador_V2.0b/RV32nexpo.v:484$322_Y [0], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$2488 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$3210 (A=$techmap\RV32I.$add$Procesador_V2.0b/RV32nexpo.v:483$320_Y [2], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$2554 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$3129 (A=\RV32I.M_CSRtoWrite [17], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$2473 (SB_DFFE).
Merging $auto$simplemap.cc:277:simplemap_mux$3212 (A=$techmap\RV32I.$add$Procesador_V2.0b/RV32nexpo.v:483$320_Y [4], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$2556 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$3128 (A=\RV32I.M_CSRtoWrite [16], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$2472 (SB_DFFE).
Merging $auto$simplemap.cc:277:simplemap_mux$3214 (A=$techmap\RV32I.$add$Procesador_V2.0b/RV32nexpo.v:483$320_Y [6], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$2558 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$3127 (A=\RV32I.M_CSRtoWrite [15], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$2471 (SB_DFFE).
Merging $auto$simplemap.cc:277:simplemap_mux$3216 (A=$techmap\RV32I.$add$Procesador_V2.0b/RV32nexpo.v:483$320_Y [8], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$2560 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$3126 (A=\RV32I.M_CSRtoWrite [14], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$2470 (SB_DFFE).
Merging $auto$simplemap.cc:277:simplemap_mux$3218 (A=$techmap\RV32I.$add$Procesador_V2.0b/RV32nexpo.v:483$320_Y [10], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$2562 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$3125 (A=\RV32I.M_CSRtoWrite [13], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$2469 (SB_DFFE).
Merging $auto$simplemap.cc:277:simplemap_mux$3220 (A=$techmap\RV32I.$add$Procesador_V2.0b/RV32nexpo.v:483$320_Y [12], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$2564 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$3124 (A=\RV32I.M_CSRtoWrite [12], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$2468 (SB_DFFE).
Merging $auto$simplemap.cc:277:simplemap_mux$3222 (A=$techmap\RV32I.$add$Procesador_V2.0b/RV32nexpo.v:483$320_Y [14], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$2566 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$3123 (A=\RV32I.M_CSRtoWrite [11], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$2467 (SB_DFFE).
Merging $auto$simplemap.cc:277:simplemap_mux$3224 (A=$techmap\RV32I.$add$Procesador_V2.0b/RV32nexpo.v:483$320_Y [16], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$2568 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$3122 (A=\RV32I.M_CSRtoWrite [10], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$2466 (SB_DFFE).
Merging $auto$simplemap.cc:277:simplemap_mux$3226 (A=$techmap\RV32I.$add$Procesador_V2.0b/RV32nexpo.v:483$320_Y [18], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$2570 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$3121 (A=\RV32I.M_CSRtoWrite [9], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$2465 (SB_DFFE).
Merging $auto$simplemap.cc:277:simplemap_mux$2721 (A=1'0, B=$techmap\RV32I.$procmux$1093_Y [8], S=$auto$simplemap.cc:256:simplemap_eqne$3958) into $auto$simplemap.cc:420:simplemap_dff$2233 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$3227 (A=$techmap\RV32I.$add$Procesador_V2.0b/RV32nexpo.v:483$320_Y [19], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$2571 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$3228 (A=$techmap\RV32I.$add$Procesador_V2.0b/RV32nexpo.v:483$320_Y [20], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$2572 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$3229 (A=$techmap\RV32I.$add$Procesador_V2.0b/RV32nexpo.v:483$320_Y [21], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$2573 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$3271 (A=$techmap\RV32I.$add$Procesador_V2.0b/RV32nexpo.v:483$320_Y [63], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$2615 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$3238 (A=$techmap\RV32I.$add$Procesador_V2.0b/RV32nexpo.v:483$320_Y [30], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$2582 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$3233 (A=$techmap\RV32I.$add$Procesador_V2.0b/RV32nexpo.v:483$320_Y [25], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$2577 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$2617 (A=\RV32I.E_JumpAddr [1], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$2166 (SB_DFFE).
Merging $auto$simplemap.cc:277:simplemap_mux$3240 (A=$techmap\RV32I.$add$Procesador_V2.0b/RV32nexpo.v:483$320_Y [32], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$2584 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$3241 (A=$techmap\RV32I.$add$Procesador_V2.0b/RV32nexpo.v:483$320_Y [33], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$2585 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$3242 (A=$techmap\RV32I.$add$Procesador_V2.0b/RV32nexpo.v:483$320_Y [34], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$2586 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$3291 (A=$techmap\RV32I.$add$Procesador_V2.0b/RV32nexpo.v:484$322_Y [19], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$2507 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$3244 (A=$techmap\RV32I.$add$Procesador_V2.0b/RV32nexpo.v:483$320_Y [36], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$2588 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$3245 (A=$techmap\RV32I.$add$Procesador_V2.0b/RV32nexpo.v:483$320_Y [37], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$2589 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$3247 (A=$techmap\RV32I.$add$Procesador_V2.0b/RV32nexpo.v:483$320_Y [39], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$2591 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$3248 (A=$techmap\RV32I.$add$Procesador_V2.0b/RV32nexpo.v:483$320_Y [40], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$2592 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$3249 (A=$techmap\RV32I.$add$Procesador_V2.0b/RV32nexpo.v:483$320_Y [41], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$2593 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$3250 (A=$techmap\RV32I.$add$Procesador_V2.0b/RV32nexpo.v:483$320_Y [42], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$2594 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$3251 (A=$techmap\RV32I.$add$Procesador_V2.0b/RV32nexpo.v:483$320_Y [43], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$2595 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$3252 (A=$techmap\RV32I.$add$Procesador_V2.0b/RV32nexpo.v:483$320_Y [44], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$2596 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$3253 (A=$techmap\RV32I.$add$Procesador_V2.0b/RV32nexpo.v:483$320_Y [45], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$2597 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$3255 (A=$techmap\RV32I.$add$Procesador_V2.0b/RV32nexpo.v:483$320_Y [47], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$2599 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$3256 (A=$techmap\RV32I.$add$Procesador_V2.0b/RV32nexpo.v:483$320_Y [48], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$2600 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$3258 (A=$techmap\RV32I.$add$Procesador_V2.0b/RV32nexpo.v:483$320_Y [50], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$2602 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$3259 (A=$techmap\RV32I.$add$Procesador_V2.0b/RV32nexpo.v:483$320_Y [51], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$2603 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$2689 (A=\RV32I.F_pc [9], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$2142 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$3208 (A=$auto$simplemap.cc:309:simplemap_lut$10151, B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$2552 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$3260 (A=$techmap\RV32I.$add$Procesador_V2.0b/RV32nexpo.v:483$320_Y [52], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$2604 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$3262 (A=$techmap\RV32I.$add$Procesador_V2.0b/RV32nexpo.v:483$320_Y [54], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$2606 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$3263 (A=$techmap\RV32I.$add$Procesador_V2.0b/RV32nexpo.v:483$320_Y [55], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$2607 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$3264 (A=$techmap\RV32I.$add$Procesador_V2.0b/RV32nexpo.v:483$320_Y [56], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$2608 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$3265 (A=$techmap\RV32I.$add$Procesador_V2.0b/RV32nexpo.v:483$320_Y [57], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$2609 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$3266 (A=$techmap\RV32I.$add$Procesador_V2.0b/RV32nexpo.v:483$320_Y [58], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$2610 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$3230 (A=$techmap\RV32I.$add$Procesador_V2.0b/RV32nexpo.v:483$320_Y [22], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$2574 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$3267 (A=$techmap\RV32I.$add$Procesador_V2.0b/RV32nexpo.v:483$320_Y [59], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$2611 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$3269 (A=$techmap\RV32I.$add$Procesador_V2.0b/RV32nexpo.v:483$320_Y [61], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$2613 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$3268 (A=$techmap\RV32I.$add$Procesador_V2.0b/RV32nexpo.v:483$320_Y [60], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$2612 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$4133 (A=$auto$wreduce.cc:460:run$1347 [1], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$4109 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$4134 (A=$auto$wreduce.cc:460:run$1347 [2], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$4110 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$4135 (A=$auto$wreduce.cc:460:run$1347 [3], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$4111 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$4136 (A=$auto$wreduce.cc:460:run$1347 [4], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$4112 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$4137 (A=$auto$wreduce.cc:460:run$1347 [5], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$4113 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$4138 (A=$auto$wreduce.cc:460:run$1347 [6], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$4114 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$4139 (A=$auto$wreduce.cc:460:run$1347 [7], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$4115 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$4140 (A=$auto$wreduce.cc:460:run$1347 [8], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$4116 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$4143 (A=$auto$wreduce.cc:460:run$1347 [11], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$4119 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$4158 (A=1'1, B=$techmap$techmap\LEDS8_4.$procmux$1120.$ternary$/home/jfdava/.apio/packages/toolchain-yosys/bin/../share/yosys/techmap.v:445$4186_Y [1], S=$techmap\LEDS8_4.$and$ControladorMatrizLed.v:42$6_Y) into $auto$simplemap.cc:420:simplemap_dff$4121 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$1965 (A=\DatatoWrite [28], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$2114 (SB_DFFE).
Merging $auto$simplemap.cc:277:simplemap_mux$4159 (A=1'1, B=$techmap$techmap\LEDS8_4.$procmux$1120.$ternary$/home/jfdava/.apio/packages/toolchain-yosys/bin/../share/yosys/techmap.v:445$4186_Y [2], S=$techmap\LEDS8_4.$and$ControladorMatrizLed.v:42$6_Y) into $auto$simplemap.cc:420:simplemap_dff$4122 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$4160 (A=1'1, B=$techmap$techmap\LEDS8_4.$procmux$1120.$ternary$/home/jfdava/.apio/packages/toolchain-yosys/bin/../share/yosys/techmap.v:445$4186_Y [3], S=$techmap\LEDS8_4.$and$ControladorMatrizLed.v:42$6_Y) into $auto$simplemap.cc:420:simplemap_dff$4123 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$4161 (A=1'1, B=$techmap$techmap\LEDS8_4.$procmux$1120.$ternary$/home/jfdava/.apio/packages/toolchain-yosys/bin/../share/yosys/techmap.v:445$4186_Y [4], S=$techmap\LEDS8_4.$and$ControladorMatrizLed.v:42$6_Y) into $auto$simplemap.cc:420:simplemap_dff$4124 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$4162 (A=1'1, B=$techmap$techmap\LEDS8_4.$procmux$1120.$ternary$/home/jfdava/.apio/packages/toolchain-yosys/bin/../share/yosys/techmap.v:445$4186_Y [5], S=$techmap\LEDS8_4.$and$ControladorMatrizLed.v:42$6_Y) into $auto$simplemap.cc:420:simplemap_dff$4125 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$4164 (A=1'1, B=$techmap$techmap\LEDS8_4.$procmux$1120.$ternary$/home/jfdava/.apio/packages/toolchain-yosys/bin/../share/yosys/techmap.v:445$4186_Y [7], S=$techmap\LEDS8_4.$and$ControladorMatrizLed.v:42$6_Y) into $auto$simplemap.cc:420:simplemap_dff$4127 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$4145 (A=1'1, B=$techmap$techmap\LEDS8_4.$procmux$1128.$ternary$/home/jfdava/.apio/packages/toolchain-yosys/bin/../share/yosys/techmap.v:445$4149_Y [1], S=$techmap\LEDS8_4.$and$ControladorMatrizLed.v:42$6_Y) into $auto$simplemap.cc:420:simplemap_dff$4129 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$4157 (A=1'1, B=$techmap$techmap\LEDS8_4.$procmux$1120.$ternary$/home/jfdava/.apio/packages/toolchain-yosys/bin/../share/yosys/techmap.v:445$4186_Y [0], S=$techmap\LEDS8_4.$and$ControladorMatrizLed.v:42$6_Y) into $auto$simplemap.cc:420:simplemap_dff$4120 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$4146 (A=1'1, B=$techmap$techmap\LEDS8_4.$procmux$1128.$ternary$/home/jfdava/.apio/packages/toolchain-yosys/bin/../share/yosys/techmap.v:445$4149_Y [2], S=$techmap\LEDS8_4.$and$ControladorMatrizLed.v:42$6_Y) into $auto$simplemap.cc:420:simplemap_dff$4130 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$4147 (A=1'1, B=$techmap$techmap\LEDS8_4.$procmux$1128.$ternary$/home/jfdava/.apio/packages/toolchain-yosys/bin/../share/yosys/techmap.v:445$4149_Y [3], S=$techmap\LEDS8_4.$and$ControladorMatrizLed.v:42$6_Y) into $auto$simplemap.cc:420:simplemap_dff$4131 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$1990 (A=\RV32I.EM_rs2Data [5], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$2091 (SB_DFFE).
Merging $auto$simplemap.cc:277:simplemap_mux$4286 (A=1'0, B=$techmap\UART_TX.$add$uart.v:98$406_Y [1], S=$auto$simplemap.cc:256:simplemap_eqne$4299) into $auto$simplemap.cc:420:simplemap_dff$4261 (SB_DFFE).
Merging $auto$simplemap.cc:277:simplemap_mux$4287 (A=1'0, B=$techmap\UART_TX.$add$uart.v:98$406_Y [2], S=$auto$simplemap.cc:256:simplemap_eqne$4299) into $auto$simplemap.cc:420:simplemap_dff$4262 (SB_DFFE).
Merging $auto$simplemap.cc:277:simplemap_mux$4285 (A=1'0, B=$auto$simplemap.cc:309:simplemap_lut$10265, S=$auto$simplemap.cc:256:simplemap_eqne$4299) into $auto$simplemap.cc:420:simplemap_dff$4260 (SB_DFFE).
Merging $auto$simplemap.cc:277:simplemap_mux$3290 (A=$techmap\RV32I.$add$Procesador_V2.0b/RV32nexpo.v:484$322_Y [18], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$2506 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$3294 (A=$techmap\RV32I.$add$Procesador_V2.0b/RV32nexpo.v:484$322_Y [22], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$2510 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$4288 (A=1'0, B=$techmap\UART_TX.$add$uart.v:98$406_Y [3], S=$auto$simplemap.cc:256:simplemap_eqne$4299) into $auto$simplemap.cc:420:simplemap_dff$4263 (SB_DFFE).
Merging $auto$simplemap.cc:277:simplemap_mux$4346 (A=1'0, B=$auto$wreduce.cc:460:run$1369 [1], S=\UART_RX.state) into $auto$simplemap.cc:420:simplemap_dff$4315 (SB_DFFE).
Merging $auto$simplemap.cc:277:simplemap_mux$4347 (A=1'0, B=$auto$wreduce.cc:460:run$1369 [2], S=\UART_RX.state) into $auto$simplemap.cc:420:simplemap_dff$4316 (SB_DFFE).
Merging $auto$simplemap.cc:277:simplemap_mux$4348 (A=1'0, B=$auto$wreduce.cc:460:run$1369 [3], S=\UART_RX.state) into $auto$simplemap.cc:420:simplemap_dff$4317 (SB_DFFE).
Merging $auto$simplemap.cc:277:simplemap_mux$4349 (A=1'0, B=$auto$wreduce.cc:460:run$1369 [4], S=\UART_RX.state) into $auto$simplemap.cc:420:simplemap_dff$4318 (SB_DFFE).
Merging $auto$simplemap.cc:277:simplemap_mux$4350 (A=1'0, B=$auto$wreduce.cc:460:run$1369 [5], S=\UART_RX.state) into $auto$simplemap.cc:420:simplemap_dff$4319 (SB_DFFE).
Merging $auto$simplemap.cc:277:simplemap_mux$4345 (A=1'0, B=$auto$simplemap.cc:309:simplemap_lut$10208, S=\UART_RX.state) into $auto$simplemap.cc:420:simplemap_dff$4314 (SB_DFFE).
Merging $auto$simplemap.cc:277:simplemap_mux$4351 (A=1'0, B=$auto$wreduce.cc:460:run$1369 [6], S=\UART_RX.state) into $auto$simplemap.cc:420:simplemap_dff$4320 (SB_DFFE).
Merging $auto$simplemap.cc:277:simplemap_mux$4369 (A=$auto$wreduce.cc:460:run$1370 [1], B=1'0, S=$techmap\UART_RX.$or$uart.v:203$429_Y) into $auto$simplemap.cc:420:simplemap_dff$4331 (SB_DFFE).
Merging $auto$simplemap.cc:277:simplemap_mux$4370 (A=$auto$wreduce.cc:460:run$1370 [2], B=1'0, S=$techmap\UART_RX.$or$uart.v:203$429_Y) into $auto$simplemap.cc:420:simplemap_dff$4332 (SB_DFFE).
Merging $auto$simplemap.cc:277:simplemap_mux$4371 (A=$auto$wreduce.cc:460:run$1370 [3], B=1'0, S=$techmap\UART_RX.$or$uart.v:203$429_Y) into $auto$simplemap.cc:420:simplemap_dff$4333 (SB_DFFE).
Merging $auto$simplemap.cc:277:simplemap_mux$4368 (A=$auto$simplemap.cc:309:simplemap_lut$10227, B=1'0, S=$techmap\UART_RX.$or$uart.v:203$429_Y) into $auto$simplemap.cc:420:simplemap_dff$4330 (SB_DFFE).
Merging $auto$simplemap.cc:277:simplemap_mux$4372 (A=$auto$wreduce.cc:460:run$1370 [4], B=1'0, S=$techmap\UART_RX.$or$uart.v:203$429_Y) into $auto$simplemap.cc:420:simplemap_dff$4334 (SB_DFFE).
Merging $auto$simplemap.cc:277:simplemap_mux$3610 (A=\RV32I.DE_rs1Data [10], B=1'0, S=\RV32I.DE_funct3 [2]) into $auto$simplemap.cc:420:simplemap_dff$2325 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$5835 (A=$auto$wreduce.cc:460:run$1372 [1], B=1'0, S=\UART_TX.bclk.reset) into $auto$simplemap.cc:420:simplemap_dff$5828 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$5836 (A=$auto$wreduce.cc:460:run$1372 [2], B=1'0, S=\UART_TX.bclk.reset) into $auto$simplemap.cc:420:simplemap_dff$5829 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$5837 (A=$auto$wreduce.cc:460:run$1372 [3], B=1'0, S=\UART_TX.bclk.reset) into $auto$simplemap.cc:420:simplemap_dff$5830 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$5838 (A=$auto$wreduce.cc:460:run$1372 [4], B=1'0, S=\UART_TX.bclk.reset) into $auto$simplemap.cc:420:simplemap_dff$5831 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$5839 (A=$auto$wreduce.cc:460:run$1372 [5], B=1'0, S=\UART_TX.bclk.reset) into $auto$simplemap.cc:420:simplemap_dff$5832 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$5840 (A=$auto$wreduce.cc:460:run$1372 [6], B=1'0, S=\UART_TX.bclk.reset) into $auto$simplemap.cc:420:simplemap_dff$5833 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$5876 (A=$auto$wreduce.cc:460:run$1371 [1], B=1'0, S=\UART_RX.bclk.reset) into $auto$simplemap.cc:420:simplemap_dff$5869 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$5877 (A=$auto$wreduce.cc:460:run$1371 [2], B=1'0, S=\UART_RX.bclk.reset) into $auto$simplemap.cc:420:simplemap_dff$5870 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$5878 (A=$auto$wreduce.cc:460:run$1371 [3], B=1'0, S=\UART_RX.bclk.reset) into $auto$simplemap.cc:420:simplemap_dff$5871 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$5879 (A=$auto$wreduce.cc:460:run$1371 [4], B=1'0, S=\UART_RX.bclk.reset) into $auto$simplemap.cc:420:simplemap_dff$5872 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$5880 (A=$auto$wreduce.cc:460:run$1371 [5], B=1'0, S=\UART_RX.bclk.reset) into $auto$simplemap.cc:420:simplemap_dff$5873 (SB_DFF).

4.40. Executing ICE40_OPT pass (performing simple optimizations).

4.40.1. Running ICE40 specific optimizations.

4.40.2. Executing OPT_EXPR pass (perform const folding).
Optimizing module SOCnexpo.

4.40.3. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\SOCnexpo'.
Removed a total of 453 cells.

4.40.4. Executing OPT_RMDFF pass (remove dff with constant values).

4.40.5. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \SOCnexpo..
Removed 359 unused cells and 2761 unused wires.

4.40.6. Rerunning OPT passes. (Removed registers in this run.)

4.40.7. Running ICE40 specific optimizations.

4.40.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module SOCnexpo.

4.40.9. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\SOCnexpo'.
Removed a total of 0 cells.

4.40.10. Executing OPT_RMDFF pass (remove dff with constant values).

4.40.11. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \SOCnexpo..

4.40.12. Rerunning OPT passes. (Removed registers in this run.)

4.40.13. Running ICE40 specific optimizations.

4.40.14. Executing OPT_EXPR pass (perform const folding).
Optimizing module SOCnexpo.

4.40.15. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\SOCnexpo'.
Removed a total of 0 cells.

4.40.16. Executing OPT_RMDFF pass (remove dff with constant values).

4.40.17. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \SOCnexpo..

4.40.18. Finished OPT passes. (There is nothing left to do.)

4.41. Executing TECHMAP pass (map to technology primitives).

4.41.1. Executing Verilog-2005 frontend: /home/jfdava/.apio/packages/toolchain-yosys/bin/../share/yosys/ice40/latches_map.v
Parsing Verilog input from `/home/jfdava/.apio/packages/toolchain-yosys/bin/../share/yosys/ice40/latches_map.v' to AST representation.
Generating RTLIL representation for module `\$_DLATCH_N_'.
Generating RTLIL representation for module `\$_DLATCH_P_'.
Successfully finished Verilog frontend.

4.41.2. Continuing TECHMAP pass.
No more expansions possible.

4.42. Executing ABC pass (technology mapping using ABC).

4.42.1. Extracting gate netlist of module `\SOCnexpo' to `<abc-temp-dir>/input.blif'..
Extracted 2385 gates and 3186 wires to a netlist network with 799 inputs and 424 outputs.

4.42.1.1. Executing ABC.
Running ABC command: <yosys-exe-dir>/yosys-abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC:
ABC: + read_blif <abc-temp-dir>/input.blif
ABC: + read_lut <abc-temp-dir>/lutdefs.txt
ABC: + strash
ABC: + ifraig
ABC: + scorr
ABC: Warning: The network is combinational (run "fraig" or "fraig_sweep").
ABC: + dc2
ABC: + dretime
ABC: + retime
ABC: + strash
ABC: + dch -f
ABC: + if
ABC: + mfs2
ABC: + lutpack -S 1
ABC: + dress
ABC: Total number of equiv classes                =     686.
ABC: Participating nodes from both networks       =    1497.
ABC: Participating nodes from the first network   =     719. (  60.07 % of nodes)
ABC: Participating nodes from the second network  =     778. (  65.00 % of nodes)
ABC: Node pairs (any polarity)                    =     719. (  60.07 % of names can be moved)
ABC: Node pairs (same polarity)                   =     525. (  43.86 % of names can be moved)
ABC: Total runtime =     0.49 sec
ABC: + write_blif <abc-temp-dir>/output.blif

4.42.1.2. Re-integrating ABC results.
ABC RESULTS:              $lut cells:     1196
ABC RESULTS:        internal signals:     1963
ABC RESULTS:           input signals:      799
ABC RESULTS:          output signals:      424
Removing temp directory.

4.43. Executing ICE40_WRAPCARRY pass (wrap carries).

4.44. Executing TECHMAP pass (map to technology primitives).

4.44.1. Executing Verilog-2005 frontend: /home/jfdava/.apio/packages/toolchain-yosys/bin/../share/yosys/ice40/cells_map.v
Parsing Verilog input from `/home/jfdava/.apio/packages/toolchain-yosys/bin/../share/yosys/ice40/cells_map.v' to AST representation.
Generating RTLIL representation for module `\$_DFF_N_'.
Generating RTLIL representation for module `\$_DFF_P_'.
Generating RTLIL representation for module `\$_DFFE_NN_'.
Generating RTLIL representation for module `\$_DFFE_PN_'.
Generating RTLIL representation for module `\$_DFFE_NP_'.
Generating RTLIL representation for module `\$_DFFE_PP_'.
Generating RTLIL representation for module `\$_DFF_NN0_'.
Generating RTLIL representation for module `\$_DFF_NN1_'.
Generating RTLIL representation for module `\$_DFF_PN0_'.
Generating RTLIL representation for module `\$_DFF_PN1_'.
Generating RTLIL representation for module `\$_DFF_NP0_'.
Generating RTLIL representation for module `\$_DFF_NP1_'.
Generating RTLIL representation for module `\$_DFF_PP0_'.
Generating RTLIL representation for module `\$_DFF_PP1_'.
Generating RTLIL representation for module `\$__DFFE_NN0'.
Generating RTLIL representation for module `\$__DFFE_NN1'.
Generating RTLIL representation for module `\$__DFFE_PN0'.
Generating RTLIL representation for module `\$__DFFE_PN1'.
Generating RTLIL representation for module `\$__DFFE_NP0'.
Generating RTLIL representation for module `\$__DFFE_NP1'.
Generating RTLIL representation for module `\$__DFFE_PP0'.
Generating RTLIL representation for module `\$__DFFE_PP1'.
Successfully finished Verilog frontend.

4.44.2. Continuing TECHMAP pass.
No more expansions possible.
Removed 27 unused cells and 1499 unused wires.

4.45. Executing OPT_LUT pass (optimize LUTs).
Discovering LUTs.
Number of LUTs:     1490
1-LUT               63
2-LUT              144
3-LUT              719
4-LUT              564
with \SB_CARRY     283

Eliminating LUTs.
Number of LUTs:     1490
1-LUT               63
2-LUT              144
3-LUT              719
4-LUT              564
with \SB_CARRY     283

Combining LUTs.
Number of LUTs:     1467
1-LUT               62
2-LUT              122
3-LUT              697
4-LUT              586
with \SB_CARRY     283

Eliminated 0 LUTs.
Combined 23 LUTs.

4.46. Executing TECHMAP pass (map to technology primitives).

4.46.1. Executing Verilog-2005 frontend: /home/jfdava/.apio/packages/toolchain-yosys/bin/../share/yosys/ice40/cells_map.v
Parsing Verilog input from `/home/jfdava/.apio/packages/toolchain-yosys/bin/../share/yosys/ice40/cells_map.v' to AST representation.
Generating RTLIL representation for module `\$_DFF_N_'.
Generating RTLIL representation for module `\$_DFF_P_'.
Generating RTLIL representation for module `\$_DFFE_NN_'.
Generating RTLIL representation for module `\$_DFFE_PN_'.
Generating RTLIL representation for module `\$_DFFE_NP_'.
Generating RTLIL representation for module `\$_DFFE_PP_'.
Generating RTLIL representation for module `\$_DFF_NN0_'.
Generating RTLIL representation for module `\$_DFF_NN1_'.
Generating RTLIL representation for module `\$_DFF_PN0_'.
Generating RTLIL representation for module `\$_DFF_PN1_'.
Generating RTLIL representation for module `\$_DFF_NP0_'.
Generating RTLIL representation for module `\$_DFF_NP1_'.
Generating RTLIL representation for module `\$_DFF_PP0_'.
Generating RTLIL representation for module `\$_DFF_PP1_'.
Generating RTLIL representation for module `\$__DFFE_NN0'.
Generating RTLIL representation for module `\$__DFFE_NN1'.
Generating RTLIL representation for module `\$__DFFE_PN0'.
Generating RTLIL representation for module `\$__DFFE_PN1'.
Generating RTLIL representation for module `\$__DFFE_NP0'.
Generating RTLIL representation for module `\$__DFFE_NP1'.
Generating RTLIL representation for module `\$__DFFE_PP0'.
Generating RTLIL representation for module `\$__DFFE_PP1'.
Generating RTLIL representation for module `\$lut'.
Successfully finished Verilog frontend.

4.46.2. Continuing TECHMAP pass.
Using template $paramod\$lut\WIDTH=3\LUT=8'00110101 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'11001010 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'01000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'01010011 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'10101100 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0011010100000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000001100000101 for cells of type $lut.
Using template $paramod\$lut\WIDTH=2\LUT=4'0001 for cells of type $lut.
Using template $paramod\$lut\WIDTH=2\LUT=4'1000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1010001100110011 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'11000101 for cells of type $lut.
Using template $paramod\$lut\WIDTH=2\LUT=4'0100 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'00010000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111010000000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1100101000000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000110000001010 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111000000010001 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0011111101010000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111001100000101 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000101100000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0011101000000011 for cells of type $lut.
Using template $paramod\$lut\WIDTH=1\LUT=2'01 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0110100110010110 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'00000001 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'00000111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'00111010 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0001000111110000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0011010101010011 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1010110000000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1100111110100000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111110000000101 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0001000100001111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000010100000011 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0101001100000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1110111000001111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'00001101 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000110100000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'11100000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1100010100000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1011101111110000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000000100000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1000000000000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0100000000000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000000000000001 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000011101110111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0001000000000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0111000000000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111110000001010 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000000000000111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0100111100000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1011000000000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000101110111011 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'10000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000000000001011 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1001011001101001 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'00001011 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'01110000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000000111111111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000101000001100 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1110111011110000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=2\LUT=4'1011 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000000001001111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'10111111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000000010111111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1110110000001110 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'11010000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111000100000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000000000011111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1101000000000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1010110011111111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'10110000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0101110000000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'00001110 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1110111100000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'01110001 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'10100011 for cells of type $lut.
Using template $paramod\$lut\WIDTH=2\LUT=4'0111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'01011100 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1100010111001100 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000000010010110 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111000011101110 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0011010111111111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000011100000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1000111100000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000000011111000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111111110110000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000000011110100 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0100111111110000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0111000001110111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1000100011110000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1010001111001100 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111111000000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000000011101111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1100111101010000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1110111111000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0111011111110000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1011111100000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1110000011101110 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1110111111111111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000000010001111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=2\LUT=4'1110 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'01001111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'10001111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0100000011111111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'11101111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'00011111 for cells of type $lut.
No more expansions possible.
Removed 0 unused cells and 2934 unused wires.

4.47. Executing AUTONAME pass.
Renamed 41384 objects in module SOCnexpo (80 iterations).

4.48. Executing HIERARCHY pass (managing design hierarchy).

4.48.1. Analyzing design hierarchy..
Top module:  \SOCnexpo

4.48.2. Analyzing design hierarchy..
Top module:  \SOCnexpo
Removed 0 unused modules.

4.49. Printing statistics.

=== SOCnexpo ===

Number of wires:               1287
Number of wire bits:           4338
Number of public wires:        1287
Number of public wire bits:    4338
Number of memories:               0
Number of memory bits:            0
Number of processes:              0
Number of cells:               2416
SB_CARRY                      298
SB_DFF                        213
SB_DFFE                        30
SB_DFFESR                      82
SB_DFFESS                       1
SB_DFFSR                      275
SB_DFFSS                       14
SB_LUT4                      1467
SB_RAM40_4K                    36

4.50. Executing CHECK pass (checking for obvious problems).
checking module SOCnexpo..
found and reported 0 problems.

4.51. Executing JSON backend.

Warnings: 2 unique messages, 2 total
End of script. Logfile hash: 16f242a5a1
CPU: user 18.82s system 0.53s, MEM: 414.05 MB total, 410.71 MB resident
Yosys 0.9+932 (git sha1 UNKNOWN, i686-linux-gnu-g++ 7.3.0-16ubuntu3 -O3 -DNDEBUG)
Time spent: 34% 7x techmap (6 sec), 14% 22x opt_expr (2 sec), ...
nextpnr-ice40 --hx8k --package cb132 --json hardware.json --asc hardware.asc --pcf icefun.pcf
Info: Importing module SOCnexpo
Info: Rule checker, verifying imported design
Info: Checksum: 0x122cd6b6

Info: constrained 'led[0]' to bel 'X22/Y33/io1'
Info: constrained 'led[1]' to bel 'X25/Y33/io0'
Info: constrained 'led[2]' to bel 'X13/Y33/io1'
Info: constrained 'led[3]' to bel 'X11/Y33/io0'
Info: constrained 'led[4]' to bel 'X17/Y33/io0'
Info: constrained 'led[5]' to bel 'X14/Y33/io1'
Info: constrained 'led[6]' to bel 'X5/Y33/io0'
Info: constrained 'led[7]' to bel 'X4/Y33/io0'
Info: constrained 'lcol[3]' to bel 'X30/Y33/io1'
Info: constrained 'lcol[2]' to bel 'X27/Y33/io0'
Info: constrained 'lcol[1]' to bel 'X16/Y33/io1'
Info: constrained 'lcol[0]' to bel 'X8/Y33/io1'
Warning: unmatched constraint 'spkp' (on line 13)
Warning: unmatched constraint 'spkm' (on line 14)
Info: constrained 'key[0]' to bel 'X28/Y33/io1'
Info: constrained 'key[1]' to bel 'X11/Y33/io1'
Info: constrained 'key[2]' to bel 'X26/Y33/io0'
Info: constrained 'key[3]' to bel 'X10/Y33/io1'
Info: constrained 'clk12MHz' to bel 'X16/Y0/io1'
Info: constrained 'RXD' to bel 'X0/Y4/io1'
Info: constrained 'TXD' to bel 'X0/Y4/io0'

Info: Packing constants..
Info: Packing IOs..
Info: Packing LUT-FFs..
Info:     1100 LCs used as LUT4 only
Info:      367 LCs used as LUT4 and DFF
Info: Packing non-LUT FFs..
Info:      248 LCs used as DFF only
Info: Packing carries..
Info:       26 LCs used as CARRY only
Info: Packing RAMs..
Info: Placing PLLs..
Info: Packing special functions..
Info: Promoting globals..
Info: promoting clk12MHz$SB_IO_IN (fanout 671)
Info: promoting rst [reset] (fanout 269)
Info: promoting RV32I.DE_funct3[2] [reset] (fanout 27)
Info: promoting RV32I.EM_CSRWrite_SB_LUT4_I2_O [cen] (fanout 32)
Info: promoting $PACKER_GND_NET (fanout 16)
Info: Constraining chains...
Info:       14 LCs used to legalise carry chains.
Info: Checksum: 0xced59e2d

Info: Annotating ports with timing budgets for target frequency 12.00 MHz
Info: Checksum: 0x5dcfb268

Info: Device utilisation:
Info: 	         ICESTORM_LC:  1757/ 7680    22%
Info: 	        ICESTORM_RAM:    36/   32   112%
Info: 	               SB_IO:    19/  256     7%
Info: 	               SB_GB:     5/    8    62%
Info: 	        ICESTORM_PLL:     0/    2     0%
Info: 	         SB_WARMBOOT:     0/    1     0%

Info: Placed 19 cells based on constraints.
ERROR: Unable to place cell 'RV32I.reg32.WORKREG.0.0.0_RAM', no Bels remaining of type 'ICESTORM_RAM'
2 warnings, 1 error
scons: *** [hardware.asc] Error 255
/home/jfdava/.apio
[Sat Aug 19 22:58:55 2023] Processing icefun
--------------------------------------------------------------------------------
nextpnr-ice40 --hx8k --package cb132 --json hardware.json --asc hardware.asc --pcf icefun.pcf
Info: Importing module SOCnexpo
Info: Rule checker, verifying imported design
Info: Checksum: 0x122cd6b6

Info: constrained 'led[0]' to bel 'X22/Y33/io1'
Info: constrained 'led[1]' to bel 'X25/Y33/io0'
Info: constrained 'led[2]' to bel 'X13/Y33/io1'
Info: constrained 'led[3]' to bel 'X11/Y33/io0'
Info: constrained 'led[4]' to bel 'X17/Y33/io0'
Info: constrained 'led[5]' to bel 'X14/Y33/io1'
Info: constrained 'led[6]' to bel 'X5/Y33/io0'
Info: constrained 'led[7]' to bel 'X4/Y33/io0'
Info: constrained 'lcol[3]' to bel 'X30/Y33/io1'
Info: constrained 'lcol[2]' to bel 'X27/Y33/io0'
Info: constrained 'lcol[1]' to bel 'X16/Y33/io1'
Info: constrained 'lcol[0]' to bel 'X8/Y33/io1'
Warning: unmatched constraint 'spkp' (on line 13)
Warning: unmatched constraint 'spkm' (on line 14)
Info: constrained 'key[0]' to bel 'X28/Y33/io1'
Info: constrained 'key[1]' to bel 'X11/Y33/io1'
Info: constrained 'key[2]' to bel 'X26/Y33/io0'
Info: constrained 'key[3]' to bel 'X10/Y33/io1'
Info: constrained 'clk12MHz' to bel 'X16/Y0/io1'
Info: constrained 'RXD' to bel 'X0/Y4/io1'
Info: constrained 'TXD' to bel 'X0/Y4/io0'

Info: Packing constants..
Info: Packing IOs..
Info: Packing LUT-FFs..
Info:     1100 LCs used as LUT4 only
Info:      367 LCs used as LUT4 and DFF
Info: Packing non-LUT FFs..
Info:      248 LCs used as DFF only
Info: Packing carries..
Info:       26 LCs used as CARRY only
Info: Packing RAMs..
Info: Placing PLLs..
Info: Packing special functions..
Info: Promoting globals..
Info: promoting clk12MHz$SB_IO_IN (fanout 671)
Info: promoting rst [reset] (fanout 269)
Info: promoting RV32I.DE_funct3[2] [reset] (fanout 27)
Info: promoting RV32I.EM_CSRWrite_SB_LUT4_I2_O [cen] (fanout 32)
Info: promoting $PACKER_GND_NET (fanout 16)
Info: Constraining chains...
Info:       14 LCs used to legalise carry chains.
Info: Checksum: 0xced59e2d

Info: Annotating ports with timing budgets for target frequency 12.00 MHz
Info: Checksum: 0x5dcfb268

Info: Device utilisation:
Info: 	         ICESTORM_LC:  1757/ 7680    22%
Info: 	        ICESTORM_RAM:    36/   32   112%
Info: 	               SB_IO:    19/  256     7%
Info: 	               SB_GB:     5/    8    62%
Info: 	        ICESTORM_PLL:     0/    2     0%
Info: 	         SB_WARMBOOT:     0/    1     0%

Info: Placed 19 cells based on constraints.
ERROR: Unable to place cell 'RV32I.reg32.WORKREG.0.0.0_RAM', no Bels remaining of type 'ICESTORM_RAM'
2 warnings, 1 error
scons: *** [hardware.asc] Error 255
/home/jfdava/.apio
[Sat Aug 19 22:59:22 2023] Processing icefun
--------------------------------------------------------------------------------
yosys -p "synth_ice40 -json hardware.json" ControladorMatrizLed.v SOCnexpoV8_.v uart.v

/----------------------------------------------------------------------------\
|                                                                            |
|  yosys -- Yosys Open SYnthesis Suite                                       |
|                                                                            |
|  Copyright (C) 2012 - 2019  Clifford Wolf <clifford@clifford.at>           |
|                                                                            |
|  Permission to use, copy, modify, and/or distribute this software for any  |
|  purpose with or without fee is hereby granted, provided that the above    |
|  copyright notice and this permission notice appear in all copies.         |
|                                                                            |
|  THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES  |
|  WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF          |
|  MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR   |
|  ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES    |
|  WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN     |
|  ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF   |
|  OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.            |
|                                                                            |
\----------------------------------------------------------------------------/

Yosys 0.9+932 (git sha1 UNKNOWN, i686-linux-gnu-g++ 7.3.0-16ubuntu3 -O3 -DNDEBUG)


-- Parsing `ControladorMatrizLed.v' using frontend `verilog' --

1. Executing Verilog-2005 frontend: ControladorMatrizLed.v
Parsing Verilog input from `ControladorMatrizLed.v' to AST representation.
Generating RTLIL representation for module `\ControladorMatrizLed'.
Successfully finished Verilog frontend.

-- Parsing `SOCnexpoV8_.v' using frontend `verilog' --

2. Executing Verilog-2005 frontend: SOCnexpoV8_.v
Parsing Verilog input from `SOCnexpoV8_.v' to AST representation.
Generating RTLIL representation for module `\registros'.
Generating RTLIL representation for module `\ALU'.
Generating RTLIL representation for module `\StoretoMEM'.
Generating RTLIL representation for module `\LoadfromMEM'.
Generating RTLIL representation for module `\RV32nexpo'.
Generating RTLIL representation for module `\SOCnexpo'.
Generating RTLIL representation for module `\memory'.
Successfully finished Verilog frontend.

-- Parsing `uart.v' using frontend `verilog' --

3. Executing Verilog-2005 frontend: uart.v
Parsing Verilog input from `uart.v' to AST representation.
Generating RTLIL representation for module `\BaudClock'.
Generating RTLIL representation for module `\serialTX'.
Generating RTLIL representation for module `\serialRX'.
Successfully finished Verilog frontend.

-- Running command `synth_ice40 -json hardware.json' --

4. Executing SYNTH_ICE40 pass.

4.1. Executing Verilog-2005 frontend: /home/jfdava/.apio/packages/toolchain-yosys/bin/../share/yosys/ice40/cells_sim.v
Parsing Verilog input from `/home/jfdava/.apio/packages/toolchain-yosys/bin/../share/yosys/ice40/cells_sim.v' to AST representation.
Generating RTLIL representation for module `\SB_IO'.
Generating RTLIL representation for module `\SB_GB_IO'.
Generating RTLIL representation for module `\SB_GB'.
Generating RTLIL representation for module `\SB_LUT4'.
Generating RTLIL representation for module `\SB_CARRY'.
Generating RTLIL representation for module `\SB_DFF'.
Generating RTLIL representation for module `\SB_DFFE'.
Generating RTLIL representation for module `\SB_DFFSR'.
Generating RTLIL representation for module `\SB_DFFR'.
Generating RTLIL representation for module `\SB_DFFSS'.
Generating RTLIL representation for module `\SB_DFFS'.
Generating RTLIL representation for module `\SB_DFFESR'.
Generating RTLIL representation for module `\SB_DFFER'.
Generating RTLIL representation for module `\SB_DFFESS'.
Generating RTLIL representation for module `\SB_DFFES'.
Generating RTLIL representation for module `\SB_DFFN'.
Generating RTLIL representation for module `\SB_DFFNE'.
Generating RTLIL representation for module `\SB_DFFNSR'.
Generating RTLIL representation for module `\SB_DFFNR'.
Generating RTLIL representation for module `\SB_DFFNSS'.
Generating RTLIL representation for module `\SB_DFFNS'.
Generating RTLIL representation for module `\SB_DFFNESR'.
Generating RTLIL representation for module `\SB_DFFNER'.
Generating RTLIL representation for module `\SB_DFFNESS'.
Generating RTLIL representation for module `\SB_DFFNES'.
Generating RTLIL representation for module `\SB_RAM40_4K'.
Generating RTLIL representation for module `\SB_RAM40_4KNR'.
Generating RTLIL representation for module `\SB_RAM40_4KNW'.
Generating RTLIL representation for module `\SB_RAM40_4KNRNW'.
Generating RTLIL representation for module `\ICESTORM_LC'.
Generating RTLIL representation for module `\SB_PLL40_CORE'.
Generating RTLIL representation for module `\SB_PLL40_PAD'.
Generating RTLIL representation for module `\SB_PLL40_2_PAD'.
Generating RTLIL representation for module `\SB_PLL40_2F_CORE'.
Generating RTLIL representation for module `\SB_PLL40_2F_PAD'.
Generating RTLIL representation for module `\SB_WARMBOOT'.
Generating RTLIL representation for module `\SB_SPRAM256KA'.
Generating RTLIL representation for module `\SB_HFOSC'.
Generating RTLIL representation for module `\SB_LFOSC'.
Generating RTLIL representation for module `\SB_RGBA_DRV'.
Generating RTLIL representation for module `\SB_LED_DRV_CUR'.
Generating RTLIL representation for module `\SB_RGB_DRV'.
Generating RTLIL representation for module `\SB_I2C'.
Generating RTLIL representation for module `\SB_SPI'.
Generating RTLIL representation for module `\SB_LEDDA_IP'.
Generating RTLIL representation for module `\SB_FILTER_50NS'.
Generating RTLIL representation for module `\SB_IO_I3C'.
Generating RTLIL representation for module `\SB_IO_OD'.
Generating RTLIL representation for module `\SB_MAC16'.
Generating RTLIL representation for module `\ICESTORM_RAM'.
Successfully finished Verilog frontend.

4.2. Executing HIERARCHY pass (managing design hierarchy).

4.2.1. Analyzing design hierarchy..
Top module:  \SOCnexpo
Used module:     \serialRX
Used module:         \BaudClock
Used module:     \serialTX
Used module:     \ControladorMatrizLed
Used module:     \memory
Used module:     \RV32nexpo
Used module:         \LoadfromMEM
Used module:         \StoretoMEM
Used module:         \ALU
Used module:         \registros
Parameter \TAM = 2048

4.2.2. Executing AST frontend in derive mode using pre-parsed AST for module `\memory'.
Parameter \TAM = 2048
Generating RTLIL representation for module `$paramod\memory\TAM=2048'.
Parameter 1 (\BAUD) = 115200

4.2.3. Executing AST frontend in derive mode using pre-parsed AST for module `\BaudClock'.
Parameter 1 (\BAUD) = 115200
Generating RTLIL representation for module `$paramod\BaudClock\BAUD=115200'.
Parameter 1 (\BAUD) = 115200
Found cached RTLIL representation for module `$paramod\BaudClock\BAUD=115200'.

4.2.4. Analyzing design hierarchy..
Top module:  \SOCnexpo
Used module:     \serialRX
Used module:         $paramod\BaudClock\BAUD=115200
Used module:     \serialTX
Used module:     \ControladorMatrizLed
Used module:     $paramod\memory\TAM=2048
Used module:     \RV32nexpo
Used module:         \LoadfromMEM
Used module:         \StoretoMEM
Used module:         \ALU
Used module:         \registros

4.2.5. Analyzing design hierarchy..
Top module:  \SOCnexpo
Used module:     \serialRX
Used module:         $paramod\BaudClock\BAUD=115200
Used module:     \serialTX
Used module:     \ControladorMatrizLed
Used module:     $paramod\memory\TAM=2048
Used module:     \RV32nexpo
Used module:         \LoadfromMEM
Used module:         \StoretoMEM
Used module:         \ALU
Used module:         \registros
Removing unused module `\BaudClock'.
Removing unused module `\memory'.
Removed 2 unused modules.

4.3. Executing PROC pass (convert processes to netlists).

4.3.1. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Removing empty process `$paramod\memory\TAM=2048.$proc$SOCnexpoV8_.v:257$599'.
Removing empty process `SOCnexpo.$proc$SOCnexpoV8_.v:41$360'.
Cleaned up 0 empty switches.

4.3.2. Executing PROC_RMDEAD pass (remove dead branches from decision trees).
Marked 1 switch rules as full_case in process $proc$uart.v:202$427 in module serialRX.
Marked 1 switch rules as full_case in process $proc$uart.v:169$421 in module serialRX.
Marked 1 switch rules as full_case in process $proc$uart.v:156$420 in module serialRX.
Marked 1 switch rules as full_case in process $proc$uart.v:94$405 in module serialTX.
Marked 1 switch rules as full_case in process $proc$uart.v:81$403 in module serialTX.
Marked 1 switch rules as full_case in process $proc$uart.v:72$402 in module serialTX.
Marked 1 switch rules as full_case in process $proc$uart.v:35$602 in module $paramod\BaudClock\BAUD=115200.
Marked 2 switch rules as full_case in process $proc$SOCnexpoV8_.v:209$355 in module SOCnexpo.
Marked 2 switch rules as full_case in process $proc$SOCnexpoV8_.v:187$354 in module SOCnexpo.
Marked 1 switch rules as full_case in process $proc$SOCnexpoV8_.v:150$352 in module SOCnexpo.
Marked 3 switch rules as full_case in process $proc$SOCnexpoV8_.v:129$351 in module SOCnexpo.
Removed 1 dead cases from process $proc$SOCnexpoV8_.v:83$343 in module SOCnexpo.
Marked 1 switch rules as full_case in process $proc$SOCnexpoV8_.v:83$343 in module SOCnexpo.
Marked 1 switch rules as full_case in process $proc$Procesador_V2.0b/RV32nexpo.v:478$319 in module RV32nexpo.
Marked 1 switch rules as full_case in process $proc$Procesador_V2.0b/RV32nexpo.v:469$317 in module RV32nexpo.
Marked 1 switch rules as full_case in process $proc$Procesador_V2.0b/RV32nexpo.v:387$308 in module RV32nexpo.
Marked 2 switch rules as full_case in process $proc$Procesador_V2.0b/RV32nexpo.v:197$288 in module RV32nexpo.
Marked 1 switch rules as full_case in process $proc$Procesador_V2.0b/RV32nexpo.v:167$285 in module RV32nexpo.
Marked 1 switch rules as full_case in process $proc$Procesador_V2.0b/RV32nexpo.v:104$267 in module RV32nexpo.
Marked 1 switch rules as full_case in process $proc$Procesador_V2.0b/RV32nexpo.v:58$264 in module RV32nexpo.
Marked 2 switch rules as full_case in process $proc$ControladorMatrizLed.v:41$4 in module ControladorMatrizLed.
Marked 1 switch rules as full_case in process $proc$ControladorMatrizLed.v:24$1 in module ControladorMatrizLed.
Removed a total of 1 dead cases.

4.3.3. Executing PROC_PRUNE pass (remove redundant assignments in processes).
Removed 9 redundant assignments.
Promoted 162 assignments to connections.

4.3.4. Executing PROC_INIT pass (extract init attributes).
Found init rule in `\serialRX.$proc$uart.v:226$440'.
Set init value: \rcv = 1'0
Found init rule in `\serialRX.$proc$uart.v:219$439'.
Set init value: \data = 8'00000000
Found init rule in `\serialRX.$proc$uart.v:201$438'.
Set init value: \cont = 5'00000
Found init rule in `\serialRX.$proc$uart.v:190$437'.
Set init value: \sr = 9'000000000
Found init rule in `\serialRX.$proc$uart.v:167$436'.
Set init value: \div2counter = 7'0000000
Found init rule in `\serialRX.$proc$uart.v:154$435'.
Set init value: \state = 1'0
Found init rule in `\serialRX.$proc$uart.v:146$434'.
Set init value: \q_t0 = 1'0
Found init rule in `\serialTX.$proc$uart.v:107$414'.
Set init value: \done = 1'0
Found init rule in `\serialTX.$proc$uart.v:93$413'.
Set init value: \bits = 4'0000
Found init rule in `\serialTX.$proc$uart.v:88$412'.
Set init value: \TX = 1'1
Found init rule in `\serialTX.$proc$uart.v:80$411'.
Set init value: \q = 9'111111111
Found init rule in `\serialTX.$proc$uart.v:64$410'.
Set init value: \q_re = 1'0
Found init rule in `\serialTX.$proc$uart.v:55$409'.
Set init value: \state = 1'0
Found init rule in `$paramod\BaudClock\BAUD=115200.$proc$uart.v:29$605'.
Set init value: \divcounter = 7'0000000
Found init rule in `\SOCnexpo.$proc$SOCnexpoV8_.v:149$361'.
Set init value: \leds_en = 1'1
Found init rule in `\SOCnexpo.$proc$SOCnexpoV8_.v:27$359'.
Set init value: \Espera = 8'00000000
Found init rule in `\SOCnexpo.$proc$SOCnexpoV8_.v:26$358'.
Set init value: \rst = 1'1
Found init rule in `\RV32nexpo.$proc$Procesador_V2.0b/RV32nexpo.v:122$324'.
Set init value: \FD_nop = 1'1
Found init rule in `\RV32nexpo.$proc$Procesador_V2.0b/RV32nexpo.v:96$323'.
Set init value: \F_pc = 0
Set init value: \FD_pc = 0
Found init rule in `\ControladorMatrizLed.$proc$ControladorMatrizLed.v:23$12'.
Set init value: \timer = 12'000000000000

4.3.5. Executing PROC_ARST pass (detect async resets in processes).

4.3.6. Executing PROC_MUX pass (convert decision trees to multiplexers).
Creating decoders for process `\serialRX.$proc$uart.v:226$440'.
Creating decoders for process `\serialRX.$proc$uart.v:219$439'.
Creating decoders for process `\serialRX.$proc$uart.v:201$438'.
Creating decoders for process `\serialRX.$proc$uart.v:190$437'.
Creating decoders for process `\serialRX.$proc$uart.v:167$436'.
Creating decoders for process `\serialRX.$proc$uart.v:154$435'.
Creating decoders for process `\serialRX.$proc$uart.v:146$434'.
Creating decoders for process `\serialRX.$proc$uart.v:227$433'.
Creating decoders for process `\serialRX.$proc$uart.v:221$432'.
1/1: $0\data[7:0]
Creating decoders for process `\serialRX.$proc$uart.v:202$427'.
1/1: $0\cont[4:0]
Creating decoders for process `\serialRX.$proc$uart.v:191$425'.
1/1: $0\sr[8:0]
Creating decoders for process `\serialRX.$proc$uart.v:169$421'.
1/1: $0\div2counter[6:0]
Creating decoders for process `\serialRX.$proc$uart.v:156$420'.
1/1: $0\state[0:0]
Creating decoders for process `\serialRX.$proc$uart.v:147$417'.
Creating decoders for process `\serialRX.$proc$uart.v:142$416'.
Creating decoders for process `\serialRX.$proc$uart.v:139$415'.
Creating decoders for process `\serialTX.$proc$uart.v:107$414'.
Creating decoders for process `\serialTX.$proc$uart.v:93$413'.
Creating decoders for process `\serialTX.$proc$uart.v:88$412'.
Creating decoders for process `\serialTX.$proc$uart.v:80$411'.
Creating decoders for process `\serialTX.$proc$uart.v:64$410'.
Creating decoders for process `\serialTX.$proc$uart.v:55$409'.
Creating decoders for process `\serialTX.$proc$uart.v:108$408'.
Creating decoders for process `\serialTX.$proc$uart.v:94$405'.
1/1: $0\bits[3:0]
Creating decoders for process `\serialTX.$proc$uart.v:89$404'.
Creating decoders for process `\serialTX.$proc$uart.v:81$403'.
1/1: $0\q[8:0]
Creating decoders for process `\serialTX.$proc$uart.v:72$402'.
1/1: $0\state[0:0]
Creating decoders for process `\serialTX.$proc$uart.v:66$399'.
Creating decoders for process `$paramod\BaudClock\BAUD=115200.$proc$uart.v:29$605'.
Creating decoders for process `$paramod\BaudClock\BAUD=115200.$proc$uart.v:35$602'.
1/1: $0\divcounter[6:0]
Creating decoders for process `$paramod\memory\TAM=2048.$proc$SOCnexpoV8_.v:261$580'.
1/12: $0$memwr$\memArray$SOCnexpoV8_.v:263$569_EN[31:0]$583
2/12: $0$memwr$\memArray$SOCnexpoV8_.v:263$569_DATA[31:0]$582
3/12: $0$memwr$\memArray$SOCnexpoV8_.v:263$569_ADDR[10:0]$581
4/12: $0$memwr$\memArray$SOCnexpoV8_.v:264$570_EN[31:0]$586
5/12: $0$memwr$\memArray$SOCnexpoV8_.v:264$570_DATA[31:0]$585
6/12: $0$memwr$\memArray$SOCnexpoV8_.v:264$570_ADDR[10:0]$584
7/12: $0$memwr$\memArray$SOCnexpoV8_.v:265$571_EN[31:0]$589
8/12: $0$memwr$\memArray$SOCnexpoV8_.v:265$571_DATA[31:0]$588
9/12: $0$memwr$\memArray$SOCnexpoV8_.v:265$571_ADDR[10:0]$587
10/12: $0$memwr$\memArray$SOCnexpoV8_.v:266$572_EN[31:0]$592
11/12: $0$memwr$\memArray$SOCnexpoV8_.v:266$572_DATA[31:0]$591
12/12: $0$memwr$\memArray$SOCnexpoV8_.v:266$572_ADDR[10:0]$590
Creating decoders for process `\SOCnexpo.$proc$SOCnexpoV8_.v:149$361'.
Creating decoders for process `\SOCnexpo.$proc$SOCnexpoV8_.v:27$359'.
Creating decoders for process `\SOCnexpo.$proc$SOCnexpoV8_.v:26$358'.
Creating decoders for process `\SOCnexpo.$proc$SOCnexpoV8_.v:209$355'.
1/1: $0\rx_readed[0:0]
Creating decoders for process `\SOCnexpo.$proc$SOCnexpoV8_.v:187$354'.
1/1: $0\tx_ready[0:0]
Creating decoders for process `\SOCnexpo.$proc$SOCnexpoV8_.v:150$352'.
1/1: $0\leds_en[0:0]
Creating decoders for process `\SOCnexpo.$proc$SOCnexpoV8_.v:129$351'.
1/4: $0\leds4[7:0]
2/4: $0\leds1[7:0]
3/4: $0\leds3[7:0]
4/4: $0\leds2[7:0]
Creating decoders for process `\SOCnexpo.$proc$SOCnexpoV8_.v:83$343'.
1/1: $1\palabra[31:0]
Creating decoders for process `\SOCnexpo.$proc$SOCnexpoV8_.v:46$329'.
Creating decoders for process `\SOCnexpo.$proc$SOCnexpoV8_.v:30$327'.
1/1: $0\rst[0:0]
Creating decoders for process `\SOCnexpo.$proc$SOCnexpoV8_.v:28$325'.
Creating decoders for process `\RV32nexpo.$proc$Procesador_V2.0b/RV32nexpo.v:122$324'.
Creating decoders for process `\RV32nexpo.$proc$Procesador_V2.0b/RV32nexpo.v:96$323'.
Creating decoders for process `\RV32nexpo.$proc$Procesador_V2.0b/RV32nexpo.v:478$319'.
1/2: $0\instret[63:0]
2/2: $0\cycle[63:0]
Creating decoders for process `\RV32nexpo.$proc$Procesador_V2.0b/RV32nexpo.v:469$317'.
1/1: $0\PWM_[31:0]
Creating decoders for process `\RV32nexpo.$proc$Procesador_V2.0b/RV32nexpo.v:429$314'.
Creating decoders for process `\RV32nexpo.$proc$Procesador_V2.0b/RV32nexpo.v:387$308'.
1/1: $1\M_CSRData[31:0]
Creating decoders for process `\RV32nexpo.$proc$Procesador_V2.0b/RV32nexpo.v:350$305'.
Creating decoders for process `\RV32nexpo.$proc$Procesador_V2.0b/RV32nexpo.v:279$295'.
Creating decoders for process `\RV32nexpo.$proc$Procesador_V2.0b/RV32nexpo.v:197$288'.
1/12: $2\D_CSRRead[0:0]
2/12: $2\D_CSRWrite[0:0]
3/12: $1\D_RegWrite[0:0]
4/12: $1\D_ALUSrc2[0:0]
5/12: $1\D_ALUFun[0:0]
6/12: $1\D_halt[0:0]
7/12: $1\D_error[0:0]
8/12: $1\D_CSRRead[0:0]
9/12: $1\D_CSRWrite[0:0]
10/12: $1\D_funQual[0:0]
11/12: $1\D_MemtoReg[0:0]
12/12: $1\D_ALUSrc1[0:0]
Creating decoders for process `\RV32nexpo.$proc$Procesador_V2.0b/RV32nexpo.v:167$285'.
1/1: $1\D_imm[31:0]
Creating decoders for process `\RV32nexpo.$proc$Procesador_V2.0b/RV32nexpo.v:104$267'.
1/3: $0\FD_nop[0:0]
2/3: $0\FD_pc[31:0]
3/3: $0\F_pc[31:0]
Creating decoders for process `\RV32nexpo.$proc$Procesador_V2.0b/RV32nexpo.v:63$265'.
Creating decoders for process `\RV32nexpo.$proc$Procesador_V2.0b/RV32nexpo.v:58$264'.
1/1: $0\state[2:0]
Creating decoders for process `\ALU.$proc$Procesador_V2.0b/ALU.v:22$241'.
Creating decoders for process `\ALU.$proc$Procesador_V2.0b/ALU.v:67$226'.
Creating decoders for process `\ALU.$proc$Procesador_V2.0b/ALU.v:54$197'.
Creating decoders for process `\registros.$proc$Procesador_V2.0b/registros_32.v:28$119'.
Creating decoders for process `\registros.$proc$Procesador_V2.0b/registros_32.v:41$80'.
1/3: $0$memwr$\WORKREG$Procesador_V2.0b/registros_32.v:43$77_EN[31:0]$83
2/3: $0$memwr$\WORKREG$Procesador_V2.0b/registros_32.v:43$77_DATA[31:0]$82
3/3: $0$memwr$\WORKREG$Procesador_V2.0b/registros_32.v:43$77_ADDR[4:0]$81
Creating decoders for process `\ControladorMatrizLed.$proc$ControladorMatrizLed.v:23$12'.
Creating decoders for process `\ControladorMatrizLed.$proc$ControladorMatrizLed.v:21$11'.
Creating decoders for process `\ControladorMatrizLed.$proc$ControladorMatrizLed.v:41$4'.
1/2: $0\row[7:0]
2/2: $0\act_row[3:0]
Creating decoders for process `\ControladorMatrizLed.$proc$ControladorMatrizLed.v:24$1'.
1/1: $1\timer[11:0]

4.3.7. Executing PROC_DLATCH pass (convert process syncs to latches).
No latch inferred for signal `\SOCnexpo.\palabra' from process `\SOCnexpo.$proc$SOCnexpoV8_.v:83$343'.
No latch inferred for signal `\RV32nexpo.\M_CSRData' from process `\RV32nexpo.$proc$Procesador_V2.0b/RV32nexpo.v:387$308'.
No latch inferred for signal `\RV32nexpo.\D_RegWrite' from process `\RV32nexpo.$proc$Procesador_V2.0b/RV32nexpo.v:197$288'.
No latch inferred for signal `\RV32nexpo.\D_ALUSrc1' from process `\RV32nexpo.$proc$Procesador_V2.0b/RV32nexpo.v:197$288'.
No latch inferred for signal `\RV32nexpo.\D_ALUSrc2' from process `\RV32nexpo.$proc$Procesador_V2.0b/RV32nexpo.v:197$288'.
No latch inferred for signal `\RV32nexpo.\D_funQual' from process `\RV32nexpo.$proc$Procesador_V2.0b/RV32nexpo.v:197$288'.
No latch inferred for signal `\RV32nexpo.\D_CSRWrite' from process `\RV32nexpo.$proc$Procesador_V2.0b/RV32nexpo.v:197$288'.
No latch inferred for signal `\RV32nexpo.\D_CSRRead' from process `\RV32nexpo.$proc$Procesador_V2.0b/RV32nexpo.v:197$288'.
No latch inferred for signal `\RV32nexpo.\D_error' from process `\RV32nexpo.$proc$Procesador_V2.0b/RV32nexpo.v:197$288'.
No latch inferred for signal `\RV32nexpo.\D_halt' from process `\RV32nexpo.$proc$Procesador_V2.0b/RV32nexpo.v:197$288'.
No latch inferred for signal `\RV32nexpo.\D_ALUFun' from process `\RV32nexpo.$proc$Procesador_V2.0b/RV32nexpo.v:197$288'.
Latch inferred for signal `\RV32nexpo.\D_MemtoReg' from process `\RV32nexpo.$proc$Procesador_V2.0b/RV32nexpo.v:197$288': $auto$proc_dlatch.cc:417:proc_dlatch$1248
No latch inferred for signal `\RV32nexpo.\D_imm' from process `\RV32nexpo.$proc$Procesador_V2.0b/RV32nexpo.v:167$285'.
No latch inferred for signal `\RV32nexpo.\nextState' from process `\RV32nexpo.$proc$Procesador_V2.0b/RV32nexpo.v:63$265'.
No latch inferred for signal `\RV32nexpo.\loadpcNext' from process `\RV32nexpo.$proc$Procesador_V2.0b/RV32nexpo.v:63$265'.
No latch inferred for signal `\ALU.$func$\flip32$Procesador_V2.0b/ALU.v:37$184$\flip32' from process `\ALU.$proc$Procesador_V2.0b/ALU.v:22$241'.
No latch inferred for signal `\ALU.$func$\flip32$Procesador_V2.0b/ALU.v:37$186$\flip32' from process `\ALU.$proc$Procesador_V2.0b/ALU.v:22$241'.
No latch inferred for signal `\ALU.$func$\flip32$Procesador_V2.0b/ALU.v:37$186$\x' from process `\ALU.$proc$Procesador_V2.0b/ALU.v:22$241'.
No latch inferred for signal `\ALU.\branch' from process `\ALU.$proc$Procesador_V2.0b/ALU.v:67$226'.
No latch inferred for signal `\ALU.\ALUout' from process `\ALU.$proc$Procesador_V2.0b/ALU.v:54$197'.
No latch inferred for signal `\ALU.$func$\flip32$Procesador_V2.0b/ALU.v:57$185$\flip32' from process `\ALU.$proc$Procesador_V2.0b/ALU.v:54$197'.
No latch inferred for signal `\ALU.$func$\flip32$Procesador_V2.0b/ALU.v:57$185$\x' from process `\ALU.$proc$Procesador_V2.0b/ALU.v:54$197'.
No latch inferred for signal `\registros.\i' from process `\registros.$proc$Procesador_V2.0b/registros_32.v:28$119'.
No latch inferred for signal `\registros.$memwr$\WORKREG$Procesador_V2.0b/registros_32.v:30$45_ADDR' from process `\registros.$proc$Procesador_V2.0b/registros_32.v:28$119'.
No latch inferred for signal `\registros.$memwr$\WORKREG$Procesador_V2.0b/registros_32.v:30$45_DATA' from process `\registros.$proc$Procesador_V2.0b/registros_32.v:28$119'.
No latch inferred for signal `\registros.$memwr$\WORKREG$Procesador_V2.0b/registros_32.v:30$46_ADDR' from process `\registros.$proc$Procesador_V2.0b/registros_32.v:28$119'.
No latch inferred for signal `\registros.$memwr$\WORKREG$Procesador_V2.0b/registros_32.v:30$46_DATA' from process `\registros.$proc$Procesador_V2.0b/registros_32.v:28$119'.
No latch inferred for signal `\registros.$memwr$\WORKREG$Procesador_V2.0b/registros_32.v:30$47_ADDR' from process `\registros.$proc$Procesador_V2.0b/registros_32.v:28$119'.
No latch inferred for signal `\registros.$memwr$\WORKREG$Procesador_V2.0b/registros_32.v:30$47_DATA' from process `\registros.$proc$Procesador_V2.0b/registros_32.v:28$119'.
No latch inferred for signal `\registros.$memwr$\WORKREG$Procesador_V2.0b/registros_32.v:30$48_ADDR' from process `\registros.$proc$Procesador_V2.0b/registros_32.v:28$119'.
No latch inferred for signal `\registros.$memwr$\WORKREG$Procesador_V2.0b/registros_32.v:30$48_DATA' from process `\registros.$proc$Procesador_V2.0b/registros_32.v:28$119'.
No latch inferred for signal `\registros.$memwr$\WORKREG$Procesador_V2.0b/registros_32.v:30$49_ADDR' from process `\registros.$proc$Procesador_V2.0b/registros_32.v:28$119'.
No latch inferred for signal `\registros.$memwr$\WORKREG$Procesador_V2.0b/registros_32.v:30$49_DATA' from process `\registros.$proc$Procesador_V2.0b/registros_32.v:28$119'.
No latch inferred for signal `\registros.$memwr$\WORKREG$Procesador_V2.0b/registros_32.v:30$50_ADDR' from process `\registros.$proc$Procesador_V2.0b/registros_32.v:28$119'.
No latch inferred for signal `\registros.$memwr$\WORKREG$Procesador_V2.0b/registros_32.v:30$50_DATA' from process `\registros.$proc$Procesador_V2.0b/registros_32.v:28$119'.
No latch inferred for signal `\registros.$memwr$\WORKREG$Procesador_V2.0b/registros_32.v:30$51_ADDR' from process `\registros.$proc$Procesador_V2.0b/registros_32.v:28$119'.
No latch inferred for signal `\registros.$memwr$\WORKREG$Procesador_V2.0b/registros_32.v:30$51_DATA' from process `\registros.$proc$Procesador_V2.0b/registros_32.v:28$119'.
No latch inferred for signal `\registros.$memwr$\WORKREG$Procesador_V2.0b/registros_32.v:30$52_ADDR' from process `\registros.$proc$Procesador_V2.0b/registros_32.v:28$119'.
No latch inferred for signal `\registros.$memwr$\WORKREG$Procesador_V2.0b/registros_32.v:30$52_DATA' from process `\registros.$proc$Procesador_V2.0b/registros_32.v:28$119'.
No latch inferred for signal `\registros.$memwr$\WORKREG$Procesador_V2.0b/registros_32.v:30$53_ADDR' from process `\registros.$proc$Procesador_V2.0b/registros_32.v:28$119'.
No latch inferred for signal `\registros.$memwr$\WORKREG$Procesador_V2.0b/registros_32.v:30$53_DATA' from process `\registros.$proc$Procesador_V2.0b/registros_32.v:28$119'.
No latch inferred for signal `\registros.$memwr$\WORKREG$Procesador_V2.0b/registros_32.v:30$54_ADDR' from process `\registros.$proc$Procesador_V2.0b/registros_32.v:28$119'.
No latch inferred for signal `\registros.$memwr$\WORKREG$Procesador_V2.0b/registros_32.v:30$54_DATA' from process `\registros.$proc$Procesador_V2.0b/registros_32.v:28$119'.
No latch inferred for signal `\registros.$memwr$\WORKREG$Procesador_V2.0b/registros_32.v:30$55_ADDR' from process `\registros.$proc$Procesador_V2.0b/registros_32.v:28$119'.
No latch inferred for signal `\registros.$memwr$\WORKREG$Procesador_V2.0b/registros_32.v:30$55_DATA' from process `\registros.$proc$Procesador_V2.0b/registros_32.v:28$119'.
No latch inferred for signal `\registros.$memwr$\WORKREG$Procesador_V2.0b/registros_32.v:30$56_ADDR' from process `\registros.$proc$Procesador_V2.0b/registros_32.v:28$119'.
No latch inferred for signal `\registros.$memwr$\WORKREG$Procesador_V2.0b/registros_32.v:30$56_DATA' from process `\registros.$proc$Procesador_V2.0b/registros_32.v:28$119'.
No latch inferred for signal `\registros.$memwr$\WORKREG$Procesador_V2.0b/registros_32.v:30$57_ADDR' from process `\registros.$proc$Procesador_V2.0b/registros_32.v:28$119'.
No latch inferred for signal `\registros.$memwr$\WORKREG$Procesador_V2.0b/registros_32.v:30$57_DATA' from process `\registros.$proc$Procesador_V2.0b/registros_32.v:28$119'.
No latch inferred for signal `\registros.$memwr$\WORKREG$Procesador_V2.0b/registros_32.v:30$58_ADDR' from process `\registros.$proc$Procesador_V2.0b/registros_32.v:28$119'.
No latch inferred for signal `\registros.$memwr$\WORKREG$Procesador_V2.0b/registros_32.v:30$58_DATA' from process `\registros.$proc$Procesador_V2.0b/registros_32.v:28$119'.
No latch inferred for signal `\registros.$memwr$\WORKREG$Procesador_V2.0b/registros_32.v:30$59_ADDR' from process `\registros.$proc$Procesador_V2.0b/registros_32.v:28$119'.
No latch inferred for signal `\registros.$memwr$\WORKREG$Procesador_V2.0b/registros_32.v:30$59_DATA' from process `\registros.$proc$Procesador_V2.0b/registros_32.v:28$119'.
No latch inferred for signal `\registros.$memwr$\WORKREG$Procesador_V2.0b/registros_32.v:30$60_ADDR' from process `\registros.$proc$Procesador_V2.0b/registros_32.v:28$119'.
No latch inferred for signal `\registros.$memwr$\WORKREG$Procesador_V2.0b/registros_32.v:30$60_DATA' from process `\registros.$proc$Procesador_V2.0b/registros_32.v:28$119'.
No latch inferred for signal `\registros.$memwr$\WORKREG$Procesador_V2.0b/registros_32.v:30$61_ADDR' from process `\registros.$proc$Procesador_V2.0b/registros_32.v:28$119'.
No latch inferred for signal `\registros.$memwr$\WORKREG$Procesador_V2.0b/registros_32.v:30$61_DATA' from process `\registros.$proc$Procesador_V2.0b/registros_32.v:28$119'.
No latch inferred for signal `\registros.$memwr$\WORKREG$Procesador_V2.0b/registros_32.v:30$62_ADDR' from process `\registros.$proc$Procesador_V2.0b/registros_32.v:28$119'.
No latch inferred for signal `\registros.$memwr$\WORKREG$Procesador_V2.0b/registros_32.v:30$62_DATA' from process `\registros.$proc$Procesador_V2.0b/registros_32.v:28$119'.
No latch inferred for signal `\registros.$memwr$\WORKREG$Procesador_V2.0b/registros_32.v:30$63_ADDR' from process `\registros.$proc$Procesador_V2.0b/registros_32.v:28$119'.
No latch inferred for signal `\registros.$memwr$\WORKREG$Procesador_V2.0b/registros_32.v:30$63_DATA' from process `\registros.$proc$Procesador_V2.0b/registros_32.v:28$119'.
No latch inferred for signal `\registros.$memwr$\WORKREG$Procesador_V2.0b/registros_32.v:30$64_ADDR' from process `\registros.$proc$Procesador_V2.0b/registros_32.v:28$119'.
No latch inferred for signal `\registros.$memwr$\WORKREG$Procesador_V2.0b/registros_32.v:30$64_DATA' from process `\registros.$proc$Procesador_V2.0b/registros_32.v:28$119'.
No latch inferred for signal `\registros.$memwr$\WORKREG$Procesador_V2.0b/registros_32.v:30$65_ADDR' from process `\registros.$proc$Procesador_V2.0b/registros_32.v:28$119'.
No latch inferred for signal `\registros.$memwr$\WORKREG$Procesador_V2.0b/registros_32.v:30$65_DATA' from process `\registros.$proc$Procesador_V2.0b/registros_32.v:28$119'.
No latch inferred for signal `\registros.$memwr$\WORKREG$Procesador_V2.0b/registros_32.v:30$66_ADDR' from process `\registros.$proc$Procesador_V2.0b/registros_32.v:28$119'.
No latch inferred for signal `\registros.$memwr$\WORKREG$Procesador_V2.0b/registros_32.v:30$66_DATA' from process `\registros.$proc$Procesador_V2.0b/registros_32.v:28$119'.
No latch inferred for signal `\registros.$memwr$\WORKREG$Procesador_V2.0b/registros_32.v:30$67_ADDR' from process `\registros.$proc$Procesador_V2.0b/registros_32.v:28$119'.
No latch inferred for signal `\registros.$memwr$\WORKREG$Procesador_V2.0b/registros_32.v:30$67_DATA' from process `\registros.$proc$Procesador_V2.0b/registros_32.v:28$119'.
No latch inferred for signal `\registros.$memwr$\WORKREG$Procesador_V2.0b/registros_32.v:30$68_ADDR' from process `\registros.$proc$Procesador_V2.0b/registros_32.v:28$119'.
No latch inferred for signal `\registros.$memwr$\WORKREG$Procesador_V2.0b/registros_32.v:30$68_DATA' from process `\registros.$proc$Procesador_V2.0b/registros_32.v:28$119'.
No latch inferred for signal `\registros.$memwr$\WORKREG$Procesador_V2.0b/registros_32.v:30$69_ADDR' from process `\registros.$proc$Procesador_V2.0b/registros_32.v:28$119'.
No latch inferred for signal `\registros.$memwr$\WORKREG$Procesador_V2.0b/registros_32.v:30$69_DATA' from process `\registros.$proc$Procesador_V2.0b/registros_32.v:28$119'.
No latch inferred for signal `\registros.$memwr$\WORKREG$Procesador_V2.0b/registros_32.v:30$70_ADDR' from process `\registros.$proc$Procesador_V2.0b/registros_32.v:28$119'.
No latch inferred for signal `\registros.$memwr$\WORKREG$Procesador_V2.0b/registros_32.v:30$70_DATA' from process `\registros.$proc$Procesador_V2.0b/registros_32.v:28$119'.
No latch inferred for signal `\registros.$memwr$\WORKREG$Procesador_V2.0b/registros_32.v:30$71_ADDR' from process `\registros.$proc$Procesador_V2.0b/registros_32.v:28$119'.
No latch inferred for signal `\registros.$memwr$\WORKREG$Procesador_V2.0b/registros_32.v:30$71_DATA' from process `\registros.$proc$Procesador_V2.0b/registros_32.v:28$119'.
No latch inferred for signal `\registros.$memwr$\WORKREG$Procesador_V2.0b/registros_32.v:30$72_ADDR' from process `\registros.$proc$Procesador_V2.0b/registros_32.v:28$119'.
No latch inferred for signal `\registros.$memwr$\WORKREG$Procesador_V2.0b/registros_32.v:30$72_DATA' from process `\registros.$proc$Procesador_V2.0b/registros_32.v:28$119'.
No latch inferred for signal `\registros.$memwr$\WORKREG$Procesador_V2.0b/registros_32.v:30$73_ADDR' from process `\registros.$proc$Procesador_V2.0b/registros_32.v:28$119'.
No latch inferred for signal `\registros.$memwr$\WORKREG$Procesador_V2.0b/registros_32.v:30$73_DATA' from process `\registros.$proc$Procesador_V2.0b/registros_32.v:28$119'.
No latch inferred for signal `\registros.$memwr$\WORKREG$Procesador_V2.0b/registros_32.v:30$74_ADDR' from process `\registros.$proc$Procesador_V2.0b/registros_32.v:28$119'.
No latch inferred for signal `\registros.$memwr$\WORKREG$Procesador_V2.0b/registros_32.v:30$74_DATA' from process `\registros.$proc$Procesador_V2.0b/registros_32.v:28$119'.
No latch inferred for signal `\registros.$memwr$\WORKREG$Procesador_V2.0b/registros_32.v:30$75_ADDR' from process `\registros.$proc$Procesador_V2.0b/registros_32.v:28$119'.
No latch inferred for signal `\registros.$memwr$\WORKREG$Procesador_V2.0b/registros_32.v:30$75_DATA' from process `\registros.$proc$Procesador_V2.0b/registros_32.v:28$119'.
No latch inferred for signal `\registros.$memwr$\WORKREG$Procesador_V2.0b/registros_32.v:30$76_ADDR' from process `\registros.$proc$Procesador_V2.0b/registros_32.v:28$119'.
No latch inferred for signal `\registros.$memwr$\WORKREG$Procesador_V2.0b/registros_32.v:30$76_DATA' from process `\registros.$proc$Procesador_V2.0b/registros_32.v:28$119'.
No latch inferred for signal `\ControladorMatrizLed.\pwm' from process `\ControladorMatrizLed.$proc$ControladorMatrizLed.v:21$11'.

4.3.8. Executing PROC_DFF pass (convert process syncs to FFs).
Creating register for signal `\serialRX.\rcv' using process `\serialRX.$proc$uart.v:227$433'.
created $dff cell `$procdff$1249' with positive edge clock.
Creating register for signal `\serialRX.\data' using process `\serialRX.$proc$uart.v:221$432'.
created $dff cell `$procdff$1250' with positive edge clock.
Creating register for signal `\serialRX.\cont' using process `\serialRX.$proc$uart.v:202$427'.
created $dff cell `$procdff$1251' with positive edge clock.
Creating register for signal `\serialRX.\sr' using process `\serialRX.$proc$uart.v:191$425'.
created $dff cell `$procdff$1252' with positive edge clock.
Creating register for signal `\serialRX.\div2counter' using process `\serialRX.$proc$uart.v:169$421'.
created $dff cell `$procdff$1253' with positive edge clock.
Creating register for signal `\serialRX.\state' using process `\serialRX.$proc$uart.v:156$420'.
created $dff cell `$procdff$1254' with positive edge clock.
Creating register for signal `\serialRX.\q_t0' using process `\serialRX.$proc$uart.v:147$417'.
created $dff cell `$procdff$1255' with positive edge clock.
Creating register for signal `\serialRX.\din' using process `\serialRX.$proc$uart.v:142$416'.
created $dff cell `$procdff$1256' with positive edge clock.
Creating register for signal `\serialRX.\d1' using process `\serialRX.$proc$uart.v:139$415'.
created $dff cell `$procdff$1257' with positive edge clock.
Creating register for signal `\serialTX.\done' using process `\serialTX.$proc$uart.v:108$408'.
created $dff cell `$procdff$1258' with positive edge clock.
Creating register for signal `\serialTX.\bits' using process `\serialTX.$proc$uart.v:94$405'.
created $dff cell `$procdff$1259' with positive edge clock.
Creating register for signal `\serialTX.\TX' using process `\serialTX.$proc$uart.v:89$404'.
created $dff cell `$procdff$1260' with positive edge clock.
Creating register for signal `\serialTX.\q' using process `\serialTX.$proc$uart.v:81$403'.
created $dff cell `$procdff$1261' with positive edge clock.
Creating register for signal `\serialTX.\state' using process `\serialTX.$proc$uart.v:72$402'.
created $dff cell `$procdff$1262' with positive edge clock.
Creating register for signal `\serialTX.\q_re' using process `\serialTX.$proc$uart.v:66$399'.
created $dff cell `$procdff$1263' with positive edge clock.
Creating register for signal `$paramod\BaudClock\BAUD=115200.\divcounter' using process `$paramod\BaudClock\BAUD=115200.$proc$uart.v:35$602'.
created $dff cell `$procdff$1264' with positive edge clock.
Creating register for signal `$paramod\memory\TAM=2048.\DataOut' using process `$paramod\memory\TAM=2048.$proc$SOCnexpoV8_.v:261$580'.
created $dff cell `$procdff$1265' with positive edge clock.
Creating register for signal `$paramod\memory\TAM=2048.$memwr$\memArray$SOCnexpoV8_.v:263$569_ADDR' using process `$paramod\memory\TAM=2048.$proc$SOCnexpoV8_.v:261$580'.
created $dff cell `$procdff$1266' with positive edge clock.
Creating register for signal `$paramod\memory\TAM=2048.$memwr$\memArray$SOCnexpoV8_.v:263$569_DATA' using process `$paramod\memory\TAM=2048.$proc$SOCnexpoV8_.v:261$580'.
created $dff cell `$procdff$1267' with positive edge clock.
Creating register for signal `$paramod\memory\TAM=2048.$memwr$\memArray$SOCnexpoV8_.v:263$569_EN' using process `$paramod\memory\TAM=2048.$proc$SOCnexpoV8_.v:261$580'.
created $dff cell `$procdff$1268' with positive edge clock.
Creating register for signal `$paramod\memory\TAM=2048.$memwr$\memArray$SOCnexpoV8_.v:264$570_ADDR' using process `$paramod\memory\TAM=2048.$proc$SOCnexpoV8_.v:261$580'.
created $dff cell `$procdff$1269' with positive edge clock.
Creating register for signal `$paramod\memory\TAM=2048.$memwr$\memArray$SOCnexpoV8_.v:264$570_DATA' using process `$paramod\memory\TAM=2048.$proc$SOCnexpoV8_.v:261$580'.
created $dff cell `$procdff$1270' with positive edge clock.
Creating register for signal `$paramod\memory\TAM=2048.$memwr$\memArray$SOCnexpoV8_.v:264$570_EN' using process `$paramod\memory\TAM=2048.$proc$SOCnexpoV8_.v:261$580'.
created $dff cell `$procdff$1271' with positive edge clock.
Creating register for signal `$paramod\memory\TAM=2048.$memwr$\memArray$SOCnexpoV8_.v:265$571_ADDR' using process `$paramod\memory\TAM=2048.$proc$SOCnexpoV8_.v:261$580'.
created $dff cell `$procdff$1272' with positive edge clock.
Creating register for signal `$paramod\memory\TAM=2048.$memwr$\memArray$SOCnexpoV8_.v:265$571_DATA' using process `$paramod\memory\TAM=2048.$proc$SOCnexpoV8_.v:261$580'.
created $dff cell `$procdff$1273' with positive edge clock.
Creating register for signal `$paramod\memory\TAM=2048.$memwr$\memArray$SOCnexpoV8_.v:265$571_EN' using process `$paramod\memory\TAM=2048.$proc$SOCnexpoV8_.v:261$580'.
created $dff cell `$procdff$1274' with positive edge clock.
Creating register for signal `$paramod\memory\TAM=2048.$memwr$\memArray$SOCnexpoV8_.v:266$572_ADDR' using process `$paramod\memory\TAM=2048.$proc$SOCnexpoV8_.v:261$580'.
created $dff cell `$procdff$1275' with positive edge clock.
Creating register for signal `$paramod\memory\TAM=2048.$memwr$\memArray$SOCnexpoV8_.v:266$572_DATA' using process `$paramod\memory\TAM=2048.$proc$SOCnexpoV8_.v:261$580'.
created $dff cell `$procdff$1276' with positive edge clock.
Creating register for signal `$paramod\memory\TAM=2048.$memwr$\memArray$SOCnexpoV8_.v:266$572_EN' using process `$paramod\memory\TAM=2048.$proc$SOCnexpoV8_.v:261$580'.
created $dff cell `$procdff$1277' with positive edge clock.
Creating register for signal `\SOCnexpo.\rx_readed' using process `\SOCnexpo.$proc$SOCnexpoV8_.v:209$355'.
created $dff cell `$procdff$1278' with positive edge clock.
Creating register for signal `\SOCnexpo.\tx_ready' using process `\SOCnexpo.$proc$SOCnexpoV8_.v:187$354'.
created $dff cell `$procdff$1279' with positive edge clock.
Creating register for signal `\SOCnexpo.\leds_en' using process `\SOCnexpo.$proc$SOCnexpoV8_.v:150$352'.
created $dff cell `$procdff$1280' with positive edge clock.
Creating register for signal `\SOCnexpo.\leds1' using process `\SOCnexpo.$proc$SOCnexpoV8_.v:129$351'.
created $dff cell `$procdff$1281' with positive edge clock.
Creating register for signal `\SOCnexpo.\leds2' using process `\SOCnexpo.$proc$SOCnexpoV8_.v:129$351'.
created $dff cell `$procdff$1282' with positive edge clock.
Creating register for signal `\SOCnexpo.\leds3' using process `\SOCnexpo.$proc$SOCnexpoV8_.v:129$351'.
created $dff cell `$procdff$1283' with positive edge clock.
Creating register for signal `\SOCnexpo.\leds4' using process `\SOCnexpo.$proc$SOCnexpoV8_.v:129$351'.
created $dff cell `$procdff$1284' with positive edge clock.
Creating register for signal `\SOCnexpo.\instr' using process `\SOCnexpo.$proc$SOCnexpoV8_.v:46$329'.
created $dff cell `$procdff$1285' with positive edge clock.
Creating register for signal `\SOCnexpo.\rst' using process `\SOCnexpo.$proc$SOCnexpoV8_.v:30$327'.
created $dff cell `$procdff$1286' with positive edge clock.
Creating register for signal `\SOCnexpo.\Espera' using process `\SOCnexpo.$proc$SOCnexpoV8_.v:28$325'.
created $dff cell `$procdff$1287' with positive edge clock.
Creating register for signal `\RV32nexpo.\cycle' using process `\RV32nexpo.$proc$Procesador_V2.0b/RV32nexpo.v:478$319'.
created $dff cell `$procdff$1288' with positive edge clock.
Creating register for signal `\RV32nexpo.\instret' using process `\RV32nexpo.$proc$Procesador_V2.0b/RV32nexpo.v:478$319'.
created $dff cell `$procdff$1289' with positive edge clock.
Creating register for signal `\RV32nexpo.\PWM_' using process `\RV32nexpo.$proc$Procesador_V2.0b/RV32nexpo.v:469$317'.
created $dff cell `$procdff$1290' with positive edge clock.
Creating register for signal `\RV32nexpo.\MW_resultado' using process `\RV32nexpo.$proc$Procesador_V2.0b/RV32nexpo.v:429$314'.
created $dff cell `$procdff$1291' with positive edge clock.
Creating register for signal `\RV32nexpo.\MW_rd' using process `\RV32nexpo.$proc$Procesador_V2.0b/RV32nexpo.v:429$314'.
created $dff cell `$procdff$1292' with positive edge clock.
Creating register for signal `\RV32nexpo.\MW_funct3' using process `\RV32nexpo.$proc$Procesador_V2.0b/RV32nexpo.v:429$314'.
created $dff cell `$procdff$1293' with positive edge clock.
Creating register for signal `\RV32nexpo.\MW_address_LSB' using process `\RV32nexpo.$proc$Procesador_V2.0b/RV32nexpo.v:429$314'.
created $dff cell `$procdff$1294' with positive edge clock.
Creating register for signal `\RV32nexpo.\MW_nop' using process `\RV32nexpo.$proc$Procesador_V2.0b/RV32nexpo.v:429$314'.
created $dff cell `$procdff$1295' with positive edge clock.
Creating register for signal `\RV32nexpo.\MW_MemRead' using process `\RV32nexpo.$proc$Procesador_V2.0b/RV32nexpo.v:429$314'.
created $dff cell `$procdff$1296' with positive edge clock.
Creating register for signal `\RV32nexpo.\MW_RegWrite' using process `\RV32nexpo.$proc$Procesador_V2.0b/RV32nexpo.v:429$314'.
created $dff cell `$procdff$1297' with positive edge clock.
Creating register for signal `\RV32nexpo.\EM_resultado' using process `\RV32nexpo.$proc$Procesador_V2.0b/RV32nexpo.v:350$305'.
created $dff cell `$procdff$1298' with positive edge clock.
Creating register for signal `\RV32nexpo.\EM_rs2Data' using process `\RV32nexpo.$proc$Procesador_V2.0b/RV32nexpo.v:350$305'.
created $dff cell `$procdff$1299' with positive edge clock.
Creating register for signal `\RV32nexpo.\EM_csrDataIn' using process `\RV32nexpo.$proc$Procesador_V2.0b/RV32nexpo.v:350$305'.
created $dff cell `$procdff$1300' with positive edge clock.
Creating register for signal `\RV32nexpo.\EM_csr' using process `\RV32nexpo.$proc$Procesador_V2.0b/RV32nexpo.v:350$305'.
created $dff cell `$procdff$1301' with positive edge clock.
Creating register for signal `\RV32nexpo.\EM_rd' using process `\RV32nexpo.$proc$Procesador_V2.0b/RV32nexpo.v:350$305'.
created $dff cell `$procdff$1302' with positive edge clock.
Creating register for signal `\RV32nexpo.\EM_funct3' using process `\RV32nexpo.$proc$Procesador_V2.0b/RV32nexpo.v:350$305'.
created $dff cell `$procdff$1303' with positive edge clock.
Creating register for signal `\RV32nexpo.\EM_nop' using process `\RV32nexpo.$proc$Procesador_V2.0b/RV32nexpo.v:350$305'.
created $dff cell `$procdff$1304' with positive edge clock.
Creating register for signal `\RV32nexpo.\EM_MemRead' using process `\RV32nexpo.$proc$Procesador_V2.0b/RV32nexpo.v:350$305'.
created $dff cell `$procdff$1305' with positive edge clock.
Creating register for signal `\RV32nexpo.\EM_MemWrite' using process `\RV32nexpo.$proc$Procesador_V2.0b/RV32nexpo.v:350$305'.
created $dff cell `$procdff$1306' with positive edge clock.
Creating register for signal `\RV32nexpo.\EM_RegWrite' using process `\RV32nexpo.$proc$Procesador_V2.0b/RV32nexpo.v:350$305'.
created $dff cell `$procdff$1307' with positive edge clock.
Creating register for signal `\RV32nexpo.\EM_isCSR' using process `\RV32nexpo.$proc$Procesador_V2.0b/RV32nexpo.v:350$305'.
created $dff cell `$procdff$1308' with positive edge clock.
Creating register for signal `\RV32nexpo.\EM_CSRRead' using process `\RV32nexpo.$proc$Procesador_V2.0b/RV32nexpo.v:350$305'.
created $dff cell `$procdff$1309' with positive edge clock.
Creating register for signal `\RV32nexpo.\EM_CSRWrite' using process `\RV32nexpo.$proc$Procesador_V2.0b/RV32nexpo.v:350$305'.
created $dff cell `$procdff$1310' with positive edge clock.
Creating register for signal `\RV32nexpo.\DE_pc' using process `\RV32nexpo.$proc$Procesador_V2.0b/RV32nexpo.v:279$295'.
created $dff cell `$procdff$1311' with positive edge clock.
Creating register for signal `\RV32nexpo.\DE_rs1Data' using process `\RV32nexpo.$proc$Procesador_V2.0b/RV32nexpo.v:279$295'.
created $dff cell `$procdff$1312' with positive edge clock.
Creating register for signal `\RV32nexpo.\DE_rs2Data' using process `\RV32nexpo.$proc$Procesador_V2.0b/RV32nexpo.v:279$295'.
created $dff cell `$procdff$1313' with positive edge clock.
Creating register for signal `\RV32nexpo.\DE_imm' using process `\RV32nexpo.$proc$Procesador_V2.0b/RV32nexpo.v:279$295'.
created $dff cell `$procdff$1314' with positive edge clock.
Creating register for signal `\RV32nexpo.\DE_rs1' using process `\RV32nexpo.$proc$Procesador_V2.0b/RV32nexpo.v:279$295'.
created $dff cell `$procdff$1315' with positive edge clock.
Creating register for signal `\RV32nexpo.\DE_rs2' using process `\RV32nexpo.$proc$Procesador_V2.0b/RV32nexpo.v:279$295'.
created $dff cell `$procdff$1316' with positive edge clock.
Creating register for signal `\RV32nexpo.\DE_rd' using process `\RV32nexpo.$proc$Procesador_V2.0b/RV32nexpo.v:279$295'.
created $dff cell `$procdff$1317' with positive edge clock.
Creating register for signal `\RV32nexpo.\DE_ALUCtrl' using process `\RV32nexpo.$proc$Procesador_V2.0b/RV32nexpo.v:279$295'.
created $dff cell `$procdff$1318' with positive edge clock.
Creating register for signal `\RV32nexpo.\DE_funct3' using process `\RV32nexpo.$proc$Procesador_V2.0b/RV32nexpo.v:279$295'.
created $dff cell `$procdff$1319' with positive edge clock.
Creating register for signal `\RV32nexpo.\DE_nop' using process `\RV32nexpo.$proc$Procesador_V2.0b/RV32nexpo.v:279$295'.
created $dff cell `$procdff$1320' with positive edge clock.
Creating register for signal `\RV32nexpo.\DE_MemWrite' using process `\RV32nexpo.$proc$Procesador_V2.0b/RV32nexpo.v:279$295'.
created $dff cell `$procdff$1321' with positive edge clock.
Creating register for signal `\RV32nexpo.\DE_RegWrite' using process `\RV32nexpo.$proc$Procesador_V2.0b/RV32nexpo.v:279$295'.
created $dff cell `$procdff$1322' with positive edge clock.
Creating register for signal `\RV32nexpo.\DE_MemRead' using process `\RV32nexpo.$proc$Procesador_V2.0b/RV32nexpo.v:279$295'.
created $dff cell `$procdff$1323' with positive edge clock.
Creating register for signal `\RV32nexpo.\DE_ALUSrc1' using process `\RV32nexpo.$proc$Procesador_V2.0b/RV32nexpo.v:279$295'.
created $dff cell `$procdff$1324' with positive edge clock.
Creating register for signal `\RV32nexpo.\DE_ALUSrc2' using process `\RV32nexpo.$proc$Procesador_V2.0b/RV32nexpo.v:279$295'.
created $dff cell `$procdff$1325' with positive edge clock.
Creating register for signal `\RV32nexpo.\DE_isJALR' using process `\RV32nexpo.$proc$Procesador_V2.0b/RV32nexpo.v:279$295'.
created $dff cell `$procdff$1326' with positive edge clock.
Creating register for signal `\RV32nexpo.\DE_isJAL' using process `\RV32nexpo.$proc$Procesador_V2.0b/RV32nexpo.v:279$295'.
created $dff cell `$procdff$1327' with positive edge clock.
Creating register for signal `\RV32nexpo.\DE_isBRANCH' using process `\RV32nexpo.$proc$Procesador_V2.0b/RV32nexpo.v:279$295'.
created $dff cell `$procdff$1328' with positive edge clock.
Creating register for signal `\RV32nexpo.\DE_isCSR' using process `\RV32nexpo.$proc$Procesador_V2.0b/RV32nexpo.v:279$295'.
created $dff cell `$procdff$1329' with positive edge clock.
Creating register for signal `\RV32nexpo.\DE_isEBREAK' using process `\RV32nexpo.$proc$Procesador_V2.0b/RV32nexpo.v:279$295'.
created $dff cell `$procdff$1330' with positive edge clock.
Creating register for signal `\RV32nexpo.\DE_CSRWrite' using process `\RV32nexpo.$proc$Procesador_V2.0b/RV32nexpo.v:279$295'.
created $dff cell `$procdff$1331' with positive edge clock.
Creating register for signal `\RV32nexpo.\DE_CSRRead' using process `\RV32nexpo.$proc$Procesador_V2.0b/RV32nexpo.v:279$295'.
created $dff cell `$procdff$1332' with positive edge clock.
Creating register for signal `\RV32nexpo.\F_pc' using process `\RV32nexpo.$proc$Procesador_V2.0b/RV32nexpo.v:104$267'.
created $dff cell `$procdff$1333' with positive edge clock.
Creating register for signal `\RV32nexpo.\FD_pc' using process `\RV32nexpo.$proc$Procesador_V2.0b/RV32nexpo.v:104$267'.
created $dff cell `$procdff$1334' with positive edge clock.
Creating register for signal `\RV32nexpo.\FD_nop' using process `\RV32nexpo.$proc$Procesador_V2.0b/RV32nexpo.v:104$267'.
created $dff cell `$procdff$1335' with positive edge clock.
Creating register for signal `\RV32nexpo.\state' using process `\RV32nexpo.$proc$Procesador_V2.0b/RV32nexpo.v:58$264'.
created $dff cell `$procdff$1336' with positive edge clock.
Creating register for signal `\registros.$memwr$\WORKREG$Procesador_V2.0b/registros_32.v:43$77_ADDR' using process `\registros.$proc$Procesador_V2.0b/registros_32.v:41$80'.
created $dff cell `$procdff$1337' with negative edge clock.
Creating register for signal `\registros.$memwr$\WORKREG$Procesador_V2.0b/registros_32.v:43$77_DATA' using process `\registros.$proc$Procesador_V2.0b/registros_32.v:41$80'.
created $dff cell `$procdff$1338' with negative edge clock.
Creating register for signal `\registros.$memwr$\WORKREG$Procesador_V2.0b/registros_32.v:43$77_EN' using process `\registros.$proc$Procesador_V2.0b/registros_32.v:41$80'.
created $dff cell `$procdff$1339' with negative edge clock.
Creating register for signal `\ControladorMatrizLed.\act_row' using process `\ControladorMatrizLed.$proc$ControladorMatrizLed.v:41$4'.
created $dff cell `$procdff$1340' with positive edge clock.
Creating register for signal `\ControladorMatrizLed.\row' using process `\ControladorMatrizLed.$proc$ControladorMatrizLed.v:41$4'.
created $dff cell `$procdff$1341' with positive edge clock.
Creating register for signal `\ControladorMatrizLed.\timer' using process `\ControladorMatrizLed.$proc$ControladorMatrizLed.v:24$1'.
created $dff cell `$procdff$1342' with positive edge clock.

4.3.9. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Removing empty process `serialRX.$proc$uart.v:226$440'.
Removing empty process `serialRX.$proc$uart.v:219$439'.
Removing empty process `serialRX.$proc$uart.v:201$438'.
Removing empty process `serialRX.$proc$uart.v:190$437'.
Removing empty process `serialRX.$proc$uart.v:167$436'.
Removing empty process `serialRX.$proc$uart.v:154$435'.
Removing empty process `serialRX.$proc$uart.v:146$434'.
Removing empty process `serialRX.$proc$uart.v:227$433'.
Found and cleaned up 1 empty switch in `\serialRX.$proc$uart.v:221$432'.
Removing empty process `serialRX.$proc$uart.v:221$432'.
Found and cleaned up 2 empty switches in `\serialRX.$proc$uart.v:202$427'.
Removing empty process `serialRX.$proc$uart.v:202$427'.
Found and cleaned up 1 empty switch in `\serialRX.$proc$uart.v:191$425'.
Removing empty process `serialRX.$proc$uart.v:191$425'.
Found and cleaned up 2 empty switches in `\serialRX.$proc$uart.v:169$421'.
Removing empty process `serialRX.$proc$uart.v:169$421'.
Found and cleaned up 2 empty switches in `\serialRX.$proc$uart.v:156$420'.
Removing empty process `serialRX.$proc$uart.v:156$420'.
Removing empty process `serialRX.$proc$uart.v:147$417'.
Removing empty process `serialRX.$proc$uart.v:142$416'.
Removing empty process `serialRX.$proc$uart.v:139$415'.
Removing empty process `serialTX.$proc$uart.v:107$414'.
Removing empty process `serialTX.$proc$uart.v:93$413'.
Removing empty process `serialTX.$proc$uart.v:88$412'.
Removing empty process `serialTX.$proc$uart.v:80$411'.
Removing empty process `serialTX.$proc$uart.v:64$410'.
Removing empty process `serialTX.$proc$uart.v:55$409'.
Removing empty process `serialTX.$proc$uart.v:108$408'.
Found and cleaned up 2 empty switches in `\serialTX.$proc$uart.v:94$405'.
Removing empty process `serialTX.$proc$uart.v:94$405'.
Removing empty process `serialTX.$proc$uart.v:89$404'.
Found and cleaned up 2 empty switches in `\serialTX.$proc$uart.v:81$403'.
Removing empty process `serialTX.$proc$uart.v:81$403'.
Found and cleaned up 2 empty switches in `\serialTX.$proc$uart.v:72$402'.
Removing empty process `serialTX.$proc$uart.v:72$402'.
Removing empty process `serialTX.$proc$uart.v:66$399'.
Removing empty process `$paramod\BaudClock\BAUD=115200.$proc$uart.v:29$605'.
Found and cleaned up 1 empty switch in `$paramod\BaudClock\BAUD=115200.$proc$uart.v:35$602'.
Removing empty process `$paramod\BaudClock\BAUD=115200.$proc$uart.v:35$602'.
Found and cleaned up 5 empty switches in `$paramod\memory\TAM=2048.$proc$SOCnexpoV8_.v:261$580'.
Removing empty process `$paramod\memory\TAM=2048.$proc$SOCnexpoV8_.v:261$580'.
Removing empty process `SOCnexpo.$proc$SOCnexpoV8_.v:149$361'.
Removing empty process `SOCnexpo.$proc$SOCnexpoV8_.v:27$359'.
Removing empty process `SOCnexpo.$proc$SOCnexpoV8_.v:26$358'.
Found and cleaned up 3 empty switches in `\SOCnexpo.$proc$SOCnexpoV8_.v:209$355'.
Removing empty process `SOCnexpo.$proc$SOCnexpoV8_.v:209$355'.
Found and cleaned up 3 empty switches in `\SOCnexpo.$proc$SOCnexpoV8_.v:187$354'.
Removing empty process `SOCnexpo.$proc$SOCnexpoV8_.v:187$354'.
Found and cleaned up 2 empty switches in `\SOCnexpo.$proc$SOCnexpoV8_.v:150$352'.
Removing empty process `SOCnexpo.$proc$SOCnexpoV8_.v:150$352'.
Found and cleaned up 8 empty switches in `\SOCnexpo.$proc$SOCnexpoV8_.v:129$351'.
Removing empty process `SOCnexpo.$proc$SOCnexpoV8_.v:129$351'.
Found and cleaned up 1 empty switch in `\SOCnexpo.$proc$SOCnexpoV8_.v:83$343'.
Removing empty process `SOCnexpo.$proc$SOCnexpoV8_.v:83$343'.
Removing empty process `SOCnexpo.$proc$SOCnexpoV8_.v:46$329'.
Found and cleaned up 1 empty switch in `\SOCnexpo.$proc$SOCnexpoV8_.v:30$327'.
Removing empty process `SOCnexpo.$proc$SOCnexpoV8_.v:30$327'.
Removing empty process `SOCnexpo.$proc$SOCnexpoV8_.v:28$325'.
Removing empty process `RV32nexpo.$proc$Procesador_V2.0b/RV32nexpo.v:122$324'.
Removing empty process `RV32nexpo.$proc$Procesador_V2.0b/RV32nexpo.v:96$323'.
Found and cleaned up 1 empty switch in `\RV32nexpo.$proc$Procesador_V2.0b/RV32nexpo.v:478$319'.
Removing empty process `RV32nexpo.$proc$Procesador_V2.0b/RV32nexpo.v:478$319'.
Found and cleaned up 3 empty switches in `\RV32nexpo.$proc$Procesador_V2.0b/RV32nexpo.v:469$317'.
Removing empty process `RV32nexpo.$proc$Procesador_V2.0b/RV32nexpo.v:469$317'.
Removing empty process `RV32nexpo.$proc$Procesador_V2.0b/RV32nexpo.v:429$314'.
Found and cleaned up 1 empty switch in `\RV32nexpo.$proc$Procesador_V2.0b/RV32nexpo.v:387$308'.
Removing empty process `RV32nexpo.$proc$Procesador_V2.0b/RV32nexpo.v:387$308'.
Removing empty process `RV32nexpo.$proc$Procesador_V2.0b/RV32nexpo.v:350$305'.
Removing empty process `RV32nexpo.$proc$Procesador_V2.0b/RV32nexpo.v:279$295'.
Found and cleaned up 2 empty switches in `\RV32nexpo.$proc$Procesador_V2.0b/RV32nexpo.v:197$288'.
Removing empty process `RV32nexpo.$proc$Procesador_V2.0b/RV32nexpo.v:197$288'.
Found and cleaned up 1 empty switch in `\RV32nexpo.$proc$Procesador_V2.0b/RV32nexpo.v:167$285'.
Removing empty process `RV32nexpo.$proc$Procesador_V2.0b/RV32nexpo.v:167$285'.
Found and cleaned up 2 empty switches in `\RV32nexpo.$proc$Procesador_V2.0b/RV32nexpo.v:104$267'.
Removing empty process `RV32nexpo.$proc$Procesador_V2.0b/RV32nexpo.v:104$267'.
Removing empty process `RV32nexpo.$proc$Procesador_V2.0b/RV32nexpo.v:63$265'.
Found and cleaned up 1 empty switch in `\RV32nexpo.$proc$Procesador_V2.0b/RV32nexpo.v:58$264'.
Removing empty process `RV32nexpo.$proc$Procesador_V2.0b/RV32nexpo.v:58$264'.
Removing empty process `ALU.$proc$Procesador_V2.0b/ALU.v:22$241'.
Removing empty process `ALU.$proc$Procesador_V2.0b/ALU.v:67$226'.
Removing empty process `ALU.$proc$Procesador_V2.0b/ALU.v:54$197'.
Removing empty process `registros.$proc$Procesador_V2.0b/registros_32.v:28$119'.
Found and cleaned up 1 empty switch in `\registros.$proc$Procesador_V2.0b/registros_32.v:41$80'.
Removing empty process `registros.$proc$Procesador_V2.0b/registros_32.v:41$80'.
Removing empty process `ControladorMatrizLed.$proc$ControladorMatrizLed.v:23$12'.
Removing empty process `ControladorMatrizLed.$proc$ControladorMatrizLed.v:21$11'.
Found and cleaned up 2 empty switches in `\ControladorMatrizLed.$proc$ControladorMatrizLed.v:41$4'.
Removing empty process `ControladorMatrizLed.$proc$ControladorMatrizLed.v:41$4'.
Found and cleaned up 1 empty switch in `\ControladorMatrizLed.$proc$ControladorMatrizLed.v:24$1'.
Removing empty process `ControladorMatrizLed.$proc$ControladorMatrizLed.v:24$1'.
Cleaned up 53 empty switches.

4.4. Executing FLATTEN pass (flatten design).
Using template RV32nexpo for cells of type RV32nexpo.
Using template $paramod\memory\TAM=2048 for cells of type $paramod\memory\TAM=2048.
Using template ControladorMatrizLed for cells of type ControladorMatrizLed.
Using template serialTX for cells of type serialTX.
Using template serialRX for cells of type serialRX.
Using template LoadfromMEM for cells of type LoadfromMEM.
Using template StoretoMEM for cells of type StoretoMEM.
Using template ALU for cells of type ALU.
Using template registros for cells of type registros.
Using template $paramod\BaudClock\BAUD=115200 for cells of type $paramod\BaudClock\BAUD=115200.
No more expansions possible.
Deleting now unused module serialRX.
Deleting now unused module serialTX.
Deleting now unused module $paramod\BaudClock\BAUD=115200.
Deleting now unused module $paramod\memory\TAM=2048.
Deleting now unused module RV32nexpo.
Deleting now unused module LoadfromMEM.
Deleting now unused module StoretoMEM.
Deleting now unused module ALU.
Deleting now unused module registros.
Deleting now unused module ControladorMatrizLed.

4.5. Executing TRIBUF pass.

4.6. Executing DEMINOUT pass (demote inout ports to input or output).

4.7. Executing OPT_EXPR pass (perform const folding).
Optimizing module SOCnexpo.

4.8. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \SOCnexpo..
Removed 93 unused cells and 776 unused wires.

4.9. Executing CHECK pass (checking for obvious problems).
checking module SOCnexpo..
Warning: Wire SOCnexpo.\RV32I.error is used but has no driver.
Warning: Wire SOCnexpo.\RV32I.end_prog is used but has no driver.
found and reported 2 problems.

4.10. Executing OPT pass (performing simple optimizations).

4.10.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module SOCnexpo.

4.10.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\SOCnexpo'.
Removed a total of 7 cells.

4.10.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \SOCnexpo..
Creating internal representation of mux trees.
Evaluating internal representation of mux trees.
Analyzing evaluation results.
dead port 2/2 on $mux $techmap\RV32I.$procmux$825.
dead port 1/2 on $mux $techmap\RV32I.$procmux$827.
dead port 1/2 on $mux $techmap\RV32I.$procmux$829.
dead port 1/2 on $mux $techmap\RV32I.$procmux$831.
dead port 1/2 on $mux $techmap\RV32I.$procmux$833.
dead port 1/2 on $mux $techmap\RV32I.$procmux$835.
dead port 1/2 on $mux $techmap\RV32I.$procmux$837.
dead port 1/2 on $mux $techmap\RV32I.$procmux$839.
dead port 1/2 on $mux $techmap\RV32I.$procmux$841.
dead port 1/2 on $mux $techmap\RV32I.$procmux$843.
dead port 1/2 on $mux $techmap\RV32I.$procmux$845.
dead port 1/2 on $mux $techmap\RV32I.$procmux$847.
Removed 12 multiplexer ports.

4.10.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
Optimizing cells in module \SOCnexpo.
New input vector for $reduce_or cell $techmap\RV32I.reg32.$reduce_or$Procesador_V2.0b/registros_32.v:42$84: { \RV32I.MW_rd [0] \RV32I.MW_rd [1] \RV32I.MW_rd [2] \RV32I.MW_rd [3] \RV32I.MW_rd [4] }
New input vector for $reduce_or cell $techmap\RV32I.$reduce_or$Procesador_V2.0b/RV32nexpo.v:264$293: { \RV32I.FD_instr [15] \RV32I.FD_instr [16] \RV32I.FD_instr [17] \RV32I.FD_instr [18] \RV32I.FD_instr [19] }
New input vector for $reduce_or cell $techmap\RAM.$reduce_or$SOCnexpoV8_.v:254$574: { \RAM.WRmask [0] \RAM.WRmask [1] \RAM.WRmask [2] \RAM.WRmask [3] }
Consolidated identical input bits for $mux cell $techmap\RAM.$procmux$643:
Old ports: A=0, B=255, Y=$techmap\RAM.$procmux$643_Y
New ports: A=1'0, B=1'1, Y=$techmap\RAM.$procmux$643_Y [0]
New connections: $techmap\RAM.$procmux$643_Y [31:1] = { 24'000000000000000000000000 $techmap\RAM.$procmux$643_Y [0] $techmap\RAM.$procmux$643_Y [0] $techmap\RAM.$procmux$643_Y [0] $techmap\RAM.$procmux$643_Y [0] $techmap\RAM.$procmux$643_Y [0] $techmap\RAM.$procmux$643_Y [0] $techmap\RAM.$procmux$643_Y [0] }
Consolidated identical input bits for $mux cell $techmap\RAM.$procmux$655:
Old ports: A=0, B=65280, Y=$techmap\RAM.$procmux$655_Y
New ports: A=1'0, B=1'1, Y=$techmap\RAM.$procmux$655_Y [8]
New connections: { $techmap\RAM.$procmux$655_Y [31:9] $techmap\RAM.$procmux$655_Y [7:0] } = { 16'0000000000000000 $techmap\RAM.$procmux$655_Y [8] $techmap\RAM.$procmux$655_Y [8] $techmap\RAM.$procmux$655_Y [8] $techmap\RAM.$procmux$655_Y [8] $techmap\RAM.$procmux$655_Y [8] $techmap\RAM.$procmux$655_Y [8] $techmap\RAM.$procmux$655_Y [8] 8'00000000 }
Consolidated identical input bits for $mux cell $techmap\RAM.$procmux$667:
Old ports: A=0, B=16711680, Y=$techmap\RAM.$procmux$667_Y
New ports: A=1'0, B=1'1, Y=$techmap\RAM.$procmux$667_Y [16]
New connections: { $techmap\RAM.$procmux$667_Y [31:17] $techmap\RAM.$procmux$667_Y [15:0] } = { 8'00000000 $techmap\RAM.$procmux$667_Y [16] $techmap\RAM.$procmux$667_Y [16] $techmap\RAM.$procmux$667_Y [16] $techmap\RAM.$procmux$667_Y [16] $techmap\RAM.$procmux$667_Y [16] $techmap\RAM.$procmux$667_Y [16] $techmap\RAM.$procmux$667_Y [16] 16'0000000000000000 }
Consolidated identical input bits for $mux cell $techmap\RAM.$procmux$679:
Old ports: A=0, B=32'11111111000000000000000000000000, Y=$techmap\RAM.$procmux$679_Y
New ports: A=1'0, B=1'1, Y=$techmap\RAM.$procmux$679_Y [24]
New connections: { $techmap\RAM.$procmux$679_Y [31:25] $techmap\RAM.$procmux$679_Y [23:0] } = { $techmap\RAM.$procmux$679_Y [24] $techmap\RAM.$procmux$679_Y [24] $techmap\RAM.$procmux$679_Y [24] $techmap\RAM.$procmux$679_Y [24] $techmap\RAM.$procmux$679_Y [24] $techmap\RAM.$procmux$679_Y [24] $techmap\RAM.$procmux$679_Y [24] 24'000000000000000000000000 }
New ctrl vector for $pmux cell $techmap\RV32I.$procmux$785: { $techmap\RV32I.$eq$Procesador_V2.0b/RV32nexpo.v:473$318_Y $auto$opt_reduce.cc:132:opt_mux$1346 $techmap\RV32I.$procmux$789_CMP $auto$opt_reduce.cc:132:opt_mux$1344 $techmap\RV32I.$procmux$786_CMP }
Consolidated identical input bits for $mux cell $techmap\RV32I.reg32.$procmux$1113:
Old ports: A=0, B=32'11111111111111111111111111111111, Y=$techmap\RV32I.reg32.$0$memwr$\WORKREG$Procesador_V2.0b/registros_32.v:43$77_EN[31:0]$83
New ports: A=1'0, B=1'1, Y=$techmap\RV32I.reg32.$0$memwr$\WORKREG$Procesador_V2.0b/registros_32.v:43$77_EN[31:0]$83 [0]
New connections: $techmap\RV32I.reg32.$0$memwr$\WORKREG$Procesador_V2.0b/registros_32.v:43$77_EN[31:0]$83 [31:1] = { $techmap\RV32I.reg32.$0$memwr$\WORKREG$Procesador_V2.0b/registros_32.v:43$77_EN[31:0]$83 [0] $techmap\RV32I.reg32.$0$memwr$\WORKREG$Procesador_V2.0b/registros_32.v:43$77_EN[31:0]$83 [0] $techmap\RV32I.reg32.$0$memwr$\WORKREG$Procesador_V2.0b/registros_32.v:43$77_EN[31:0]$83 [0] $techmap\RV32I.reg32.$0$memwr$\WORKREG$Procesador_V2.0b/registros_32.v:43$77_EN[31:0]$83 [0] $techmap\RV32I.reg32.$0$memwr$\WORKREG$Procesador_V2.0b/registros_32.v:43$77_EN[31:0]$83 [0] $techmap\RV32I.reg32.$0$memwr$\WORKREG$Procesador_V2.0b/registros_32.v:43$77_EN[31:0]$83 [0] $techmap\RV32I.reg32.$0$memwr$\WORKREG$Procesador_V2.0b/registros_32.v:43$77_EN[31:0]$83 [0] $techmap\RV32I.reg32.$0$memwr$\WORKREG$Procesador_V2.0b/registros_32.v:43$77_EN[31:0]$83 [0] $techmap\RV32I.reg32.$0$memwr$\WORKREG$Procesador_V2.0b/registros_32.v:43$77_EN[31:0]$83 [0] $techmap\RV32I.reg32.$0$memwr$\WORKREG$Procesador_V2.0b/registros_32.v:43$77_EN[31:0]$83 [0] $techmap\RV32I.reg32.$0$memwr$\WORKREG$Procesador_V2.0b/registros_32.v:43$77_EN[31:0]$83 [0] $techmap\RV32I.reg32.$0$memwr$\WORKREG$Procesador_V2.0b/registros_32.v:43$77_EN[31:0]$83 [0] $techmap\RV32I.reg32.$0$memwr$\WORKREG$Procesador_V2.0b/registros_32.v:43$77_EN[31:0]$83 [0] $techmap\RV32I.reg32.$0$memwr$\WORKREG$Procesador_V2.0b/registros_32.v:43$77_EN[31:0]$83 [0] $techmap\RV32I.reg32.$0$memwr$\WORKREG$Procesador_V2.0b/registros_32.v:43$77_EN[31:0]$83 [0] $techmap\RV32I.reg32.$0$memwr$\WORKREG$Procesador_V2.0b/registros_32.v:43$77_EN[31:0]$83 [0] $techmap\RV32I.reg32.$0$memwr$\WORKREG$Procesador_V2.0b/registros_32.v:43$77_EN[31:0]$83 [0] $techmap\RV32I.reg32.$0$memwr$\WORKREG$Procesador_V2.0b/registros_32.v:43$77_EN[31:0]$83 [0] $techmap\RV32I.reg32.$0$memwr$\WORKREG$Procesador_V2.0b/registros_32.v:43$77_EN[31:0]$83 [0] $techmap\RV32I.reg32.$0$memwr$\WORKREG$Procesador_V2.0b/registros_32.v:43$77_EN[31:0]$83 [0] $techmap\RV32I.reg32.$0$memwr$\WORKREG$Procesador_V2.0b/registros_32.v:43$77_EN[31:0]$83 [0] $techmap\RV32I.reg32.$0$memwr$\WORKREG$Procesador_V2.0b/registros_32.v:43$77_EN[31:0]$83 [0] $techmap\RV32I.reg32.$0$memwr$\WORKREG$Procesador_V2.0b/registros_32.v:43$77_EN[31:0]$83 [0] $techmap\RV32I.reg32.$0$memwr$\WORKREG$Procesador_V2.0b/registros_32.v:43$77_EN[31:0]$83 [0] $techmap\RV32I.reg32.$0$memwr$\WORKREG$Procesador_V2.0b/registros_32.v:43$77_EN[31:0]$83 [0] $techmap\RV32I.reg32.$0$memwr$\WORKREG$Procesador_V2.0b/registros_32.v:43$77_EN[31:0]$83 [0] $techmap\RV32I.reg32.$0$memwr$\WORKREG$Procesador_V2.0b/registros_32.v:43$77_EN[31:0]$83 [0] $techmap\RV32I.reg32.$0$memwr$\WORKREG$Procesador_V2.0b/registros_32.v:43$77_EN[31:0]$83 [0] $techmap\RV32I.reg32.$0$memwr$\WORKREG$Procesador_V2.0b/registros_32.v:43$77_EN[31:0]$83 [0] $techmap\RV32I.reg32.$0$memwr$\WORKREG$Procesador_V2.0b/registros_32.v:43$77_EN[31:0]$83 [0] $techmap\RV32I.reg32.$0$memwr$\WORKREG$Procesador_V2.0b/registros_32.v:43$77_EN[31:0]$83 [0] }
Optimizing cells in module \SOCnexpo.
Consolidated identical input bits for $mux cell $techmap\RAM.$procmux$645:
Old ports: A=0, B=$techmap\RAM.$procmux$643_Y, Y=$techmap\RAM.$0$memwr$\memArray$SOCnexpoV8_.v:263$569_EN[31:0]$583
New ports: A=1'0, B=$techmap\RAM.$procmux$643_Y [0], Y=$techmap\RAM.$0$memwr$\memArray$SOCnexpoV8_.v:263$569_EN[31:0]$583 [0]
New connections: $techmap\RAM.$0$memwr$\memArray$SOCnexpoV8_.v:263$569_EN[31:0]$583 [31:1] = { 24'000000000000000000000000 $techmap\RAM.$0$memwr$\memArray$SOCnexpoV8_.v:263$569_EN[31:0]$583 [0] $techmap\RAM.$0$memwr$\memArray$SOCnexpoV8_.v:263$569_EN[31:0]$583 [0] $techmap\RAM.$0$memwr$\memArray$SOCnexpoV8_.v:263$569_EN[31:0]$583 [0] $techmap\RAM.$0$memwr$\memArray$SOCnexpoV8_.v:263$569_EN[31:0]$583 [0] $techmap\RAM.$0$memwr$\memArray$SOCnexpoV8_.v:263$569_EN[31:0]$583 [0] $techmap\RAM.$0$memwr$\memArray$SOCnexpoV8_.v:263$569_EN[31:0]$583 [0] $techmap\RAM.$0$memwr$\memArray$SOCnexpoV8_.v:263$569_EN[31:0]$583 [0] }
Consolidated identical input bits for $mux cell $techmap\RAM.$procmux$657:
Old ports: A=0, B=$techmap\RAM.$procmux$655_Y, Y=$techmap\RAM.$0$memwr$\memArray$SOCnexpoV8_.v:264$570_EN[31:0]$586
New ports: A=1'0, B=$techmap\RAM.$procmux$655_Y [8], Y=$techmap\RAM.$0$memwr$\memArray$SOCnexpoV8_.v:264$570_EN[31:0]$586 [8]
New connections: { $techmap\RAM.$0$memwr$\memArray$SOCnexpoV8_.v:264$570_EN[31:0]$586 [31:9] $techmap\RAM.$0$memwr$\memArray$SOCnexpoV8_.v:264$570_EN[31:0]$586 [7:0] } = { 16'0000000000000000 $techmap\RAM.$0$memwr$\memArray$SOCnexpoV8_.v:264$570_EN[31:0]$586 [8] $techmap\RAM.$0$memwr$\memArray$SOCnexpoV8_.v:264$570_EN[31:0]$586 [8] $techmap\RAM.$0$memwr$\memArray$SOCnexpoV8_.v:264$570_EN[31:0]$586 [8] $techmap\RAM.$0$memwr$\memArray$SOCnexpoV8_.v:264$570_EN[31:0]$586 [8] $techmap\RAM.$0$memwr$\memArray$SOCnexpoV8_.v:264$570_EN[31:0]$586 [8] $techmap\RAM.$0$memwr$\memArray$SOCnexpoV8_.v:264$570_EN[31:0]$586 [8] $techmap\RAM.$0$memwr$\memArray$SOCnexpoV8_.v:264$570_EN[31:0]$586 [8] 8'00000000 }
Consolidated identical input bits for $mux cell $techmap\RAM.$procmux$669:
Old ports: A=0, B=$techmap\RAM.$procmux$667_Y, Y=$techmap\RAM.$0$memwr$\memArray$SOCnexpoV8_.v:265$571_EN[31:0]$589
New ports: A=1'0, B=$techmap\RAM.$procmux$667_Y [16], Y=$techmap\RAM.$0$memwr$\memArray$SOCnexpoV8_.v:265$571_EN[31:0]$589 [16]
New connections: { $techmap\RAM.$0$memwr$\memArray$SOCnexpoV8_.v:265$571_EN[31:0]$589 [31:17] $techmap\RAM.$0$memwr$\memArray$SOCnexpoV8_.v:265$571_EN[31:0]$589 [15:0] } = { 8'00000000 $techmap\RAM.$0$memwr$\memArray$SOCnexpoV8_.v:265$571_EN[31:0]$589 [16] $techmap\RAM.$0$memwr$\memArray$SOCnexpoV8_.v:265$571_EN[31:0]$589 [16] $techmap\RAM.$0$memwr$\memArray$SOCnexpoV8_.v:265$571_EN[31:0]$589 [16] $techmap\RAM.$0$memwr$\memArray$SOCnexpoV8_.v:265$571_EN[31:0]$589 [16] $techmap\RAM.$0$memwr$\memArray$SOCnexpoV8_.v:265$571_EN[31:0]$589 [16] $techmap\RAM.$0$memwr$\memArray$SOCnexpoV8_.v:265$571_EN[31:0]$589 [16] $techmap\RAM.$0$memwr$\memArray$SOCnexpoV8_.v:265$571_EN[31:0]$589 [16] 16'0000000000000000 }
Consolidated identical input bits for $mux cell $techmap\RAM.$procmux$681:
Old ports: A=0, B=$techmap\RAM.$procmux$679_Y, Y=$techmap\RAM.$0$memwr$\memArray$SOCnexpoV8_.v:266$572_EN[31:0]$592
New ports: A=1'0, B=$techmap\RAM.$procmux$679_Y [24], Y=$techmap\RAM.$0$memwr$\memArray$SOCnexpoV8_.v:266$572_EN[31:0]$592 [24]
New connections: { $techmap\RAM.$0$memwr$\memArray$SOCnexpoV8_.v:266$572_EN[31:0]$592 [31:25] $techmap\RAM.$0$memwr$\memArray$SOCnexpoV8_.v:266$572_EN[31:0]$592 [23:0] } = { $techmap\RAM.$0$memwr$\memArray$SOCnexpoV8_.v:266$572_EN[31:0]$592 [24] $techmap\RAM.$0$memwr$\memArray$SOCnexpoV8_.v:266$572_EN[31:0]$592 [24] $techmap\RAM.$0$memwr$\memArray$SOCnexpoV8_.v:266$572_EN[31:0]$592 [24] $techmap\RAM.$0$memwr$\memArray$SOCnexpoV8_.v:266$572_EN[31:0]$592 [24] $techmap\RAM.$0$memwr$\memArray$SOCnexpoV8_.v:266$572_EN[31:0]$592 [24] $techmap\RAM.$0$memwr$\memArray$SOCnexpoV8_.v:266$572_EN[31:0]$592 [24] $techmap\RAM.$0$memwr$\memArray$SOCnexpoV8_.v:266$572_EN[31:0]$592 [24] 24'000000000000000000000000 }
Optimizing cells in module \SOCnexpo.
Performed a total of 13 changes.

4.10.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\SOCnexpo'.
Removed a total of 3 cells.

4.10.6. Executing OPT_RMDFF pass (remove dff with constant values).
Promoting init spec \UART_RX.rcv = 1'0 to constant driver in module SOCnexpo.
Promoted 1 init specs to constant drivers.

4.10.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \SOCnexpo..
Removed 0 unused cells and 24 unused wires.

4.10.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module SOCnexpo.

4.10.9. Rerunning OPT passes. (Maybe there is more to do..)

4.10.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \SOCnexpo..
Creating internal representation of mux trees.
Evaluating internal representation of mux trees.
Analyzing evaluation results.
Removed 0 multiplexer ports.

4.10.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
Optimizing cells in module \SOCnexpo.
Performed a total of 0 changes.

4.10.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\SOCnexpo'.
Removed a total of 0 cells.

4.10.13. Executing OPT_RMDFF pass (remove dff with constant values).

4.10.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \SOCnexpo..

4.10.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module SOCnexpo.

4.10.16. Finished OPT passes. (There is nothing left to do.)

4.11. Executing WREDUCE pass (reducing word size of cells).
Removed top 21 address bits (of 32) from memory init port SOCnexpo.$meminit$\MEMROM$SOCnexpoV8_.v:42$357 (MEMROM).
Removed top 21 address bits (of 32) from memory init port SOCnexpo.$techmap\RAM.$meminit$\memArray$SOCnexpoV8_.v:258$594 (RAM.memArray).
Removed top 27 address bits (of 32) from memory init port SOCnexpo.$techmap\RV32I.reg32.$meminit$\WORKREG$Procesador_V2.0b/registros_32.v:30$100 (RV32I.reg32.WORKREG).
Removed top 27 address bits (of 32) from memory init port SOCnexpo.$techmap\RV32I.reg32.$meminit$\WORKREG$Procesador_V2.0b/registros_32.v:30$101 (RV32I.reg32.WORKREG).
Removed top 27 address bits (of 32) from memory init port SOCnexpo.$techmap\RV32I.reg32.$meminit$\WORKREG$Procesador_V2.0b/registros_32.v:30$102 (RV32I.reg32.WORKREG).
Removed top 27 address bits (of 32) from memory init port SOCnexpo.$techmap\RV32I.reg32.$meminit$\WORKREG$Procesador_V2.0b/registros_32.v:30$103 (RV32I.reg32.WORKREG).
Removed top 27 address bits (of 32) from memory init port SOCnexpo.$techmap\RV32I.reg32.$meminit$\WORKREG$Procesador_V2.0b/registros_32.v:30$104 (RV32I.reg32.WORKREG).
Removed top 27 address bits (of 32) from memory init port SOCnexpo.$techmap\RV32I.reg32.$meminit$\WORKREG$Procesador_V2.0b/registros_32.v:30$105 (RV32I.reg32.WORKREG).
Removed top 27 address bits (of 32) from memory init port SOCnexpo.$techmap\RV32I.reg32.$meminit$\WORKREG$Procesador_V2.0b/registros_32.v:30$106 (RV32I.reg32.WORKREG).
Removed top 27 address bits (of 32) from memory init port SOCnexpo.$techmap\RV32I.reg32.$meminit$\WORKREG$Procesador_V2.0b/registros_32.v:30$107 (RV32I.reg32.WORKREG).
Removed top 27 address bits (of 32) from memory init port SOCnexpo.$techmap\RV32I.reg32.$meminit$\WORKREG$Procesador_V2.0b/registros_32.v:30$108 (RV32I.reg32.WORKREG).
Removed top 27 address bits (of 32) from memory init port SOCnexpo.$techmap\RV32I.reg32.$meminit$\WORKREG$Procesador_V2.0b/registros_32.v:30$109 (RV32I.reg32.WORKREG).
Removed top 27 address bits (of 32) from memory init port SOCnexpo.$techmap\RV32I.reg32.$meminit$\WORKREG$Procesador_V2.0b/registros_32.v:30$110 (RV32I.reg32.WORKREG).
Removed top 27 address bits (of 32) from memory init port SOCnexpo.$techmap\RV32I.reg32.$meminit$\WORKREG$Procesador_V2.0b/registros_32.v:30$111 (RV32I.reg32.WORKREG).
Removed top 27 address bits (of 32) from memory init port SOCnexpo.$techmap\RV32I.reg32.$meminit$\WORKREG$Procesador_V2.0b/registros_32.v:30$112 (RV32I.reg32.WORKREG).
Removed top 27 address bits (of 32) from memory init port SOCnexpo.$techmap\RV32I.reg32.$meminit$\WORKREG$Procesador_V2.0b/registros_32.v:30$113 (RV32I.reg32.WORKREG).
Removed top 27 address bits (of 32) from memory init port SOCnexpo.$techmap\RV32I.reg32.$meminit$\WORKREG$Procesador_V2.0b/registros_32.v:30$114 (RV32I.reg32.WORKREG).
Removed top 27 address bits (of 32) from memory init port SOCnexpo.$techmap\RV32I.reg32.$meminit$\WORKREG$Procesador_V2.0b/registros_32.v:30$115 (RV32I.reg32.WORKREG).
Removed top 27 address bits (of 32) from memory init port SOCnexpo.$techmap\RV32I.reg32.$meminit$\WORKREG$Procesador_V2.0b/registros_32.v:30$116 (RV32I.reg32.WORKREG).
Removed top 27 address bits (of 32) from memory init port SOCnexpo.$techmap\RV32I.reg32.$meminit$\WORKREG$Procesador_V2.0b/registros_32.v:30$117 (RV32I.reg32.WORKREG).
Removed top 27 address bits (of 32) from memory init port SOCnexpo.$techmap\RV32I.reg32.$meminit$\WORKREG$Procesador_V2.0b/registros_32.v:30$86 (RV32I.reg32.WORKREG).
Removed top 27 address bits (of 32) from memory init port SOCnexpo.$techmap\RV32I.reg32.$meminit$\WORKREG$Procesador_V2.0b/registros_32.v:30$87 (RV32I.reg32.WORKREG).
Removed top 27 address bits (of 32) from memory init port SOCnexpo.$techmap\RV32I.reg32.$meminit$\WORKREG$Procesador_V2.0b/registros_32.v:30$88 (RV32I.reg32.WORKREG).
Removed top 27 address bits (of 32) from memory init port SOCnexpo.$techmap\RV32I.reg32.$meminit$\WORKREG$Procesador_V2.0b/registros_32.v:30$89 (RV32I.reg32.WORKREG).
Removed top 27 address bits (of 32) from memory init port SOCnexpo.$techmap\RV32I.reg32.$meminit$\WORKREG$Procesador_V2.0b/registros_32.v:30$90 (RV32I.reg32.WORKREG).
Removed top 27 address bits (of 32) from memory init port SOCnexpo.$techmap\RV32I.reg32.$meminit$\WORKREG$Procesador_V2.0b/registros_32.v:30$91 (RV32I.reg32.WORKREG).
Removed top 27 address bits (of 32) from memory init port SOCnexpo.$techmap\RV32I.reg32.$meminit$\WORKREG$Procesador_V2.0b/registros_32.v:30$92 (RV32I.reg32.WORKREG).
Removed top 27 address bits (of 32) from memory init port SOCnexpo.$techmap\RV32I.reg32.$meminit$\WORKREG$Procesador_V2.0b/registros_32.v:30$93 (RV32I.reg32.WORKREG).
Removed top 27 address bits (of 32) from memory init port SOCnexpo.$techmap\RV32I.reg32.$meminit$\WORKREG$Procesador_V2.0b/registros_32.v:30$94 (RV32I.reg32.WORKREG).
Removed top 27 address bits (of 32) from memory init port SOCnexpo.$techmap\RV32I.reg32.$meminit$\WORKREG$Procesador_V2.0b/registros_32.v:30$95 (RV32I.reg32.WORKREG).
Removed top 27 address bits (of 32) from memory init port SOCnexpo.$techmap\RV32I.reg32.$meminit$\WORKREG$Procesador_V2.0b/registros_32.v:30$96 (RV32I.reg32.WORKREG).
Removed top 27 address bits (of 32) from memory init port SOCnexpo.$techmap\RV32I.reg32.$meminit$\WORKREG$Procesador_V2.0b/registros_32.v:30$97 (RV32I.reg32.WORKREG).
Removed top 27 address bits (of 32) from memory init port SOCnexpo.$techmap\RV32I.reg32.$meminit$\WORKREG$Procesador_V2.0b/registros_32.v:30$98 (RV32I.reg32.WORKREG).
Removed top 27 address bits (of 32) from memory init port SOCnexpo.$techmap\RV32I.reg32.$meminit$\WORKREG$Procesador_V2.0b/registros_32.v:30$99 (RV32I.reg32.WORKREG).
Removed top 31 bits (of 32) from port B of cell SOCnexpo.$add$SOCnexpoV8_.v:28$326 ($add).
Removed top 24 bits (of 32) from port Y of cell SOCnexpo.$add$SOCnexpoV8_.v:28$326 ($add).
Removed top 17 bits (of 18) from port B of cell SOCnexpo.$eq$SOCnexpoV8_.v:74$331 ($eq).
Removed top 2 bits (of 3) from port B of cell SOCnexpo.$eq$SOCnexpoV8_.v:77$335 ($eq).
Removed top 1 bits (of 3) from port B of cell SOCnexpo.$eq$SOCnexpoV8_.v:78$337 ($eq).
Removed top 1 bits (of 3) from port B of cell SOCnexpo.$eq$SOCnexpoV8_.v:79$339 ($eq).
Removed top 1 bits (of 32) from mux cell SOCnexpo.$procmux$764 ($pmux).
Removed top 1 bits (of 2) from port B of cell SOCnexpo.$procmux$767_CMP0 ($eq).
Removed top 12 bits (of 32) from mux cell SOCnexpo.$techmap\RV32I.$procmux$1087 ($mux).
Removed cell SOCnexpo.$techmap\RV32I.$procmux$1066 ($mux).
Removed cell SOCnexpo.$techmap\RV32I.$procmux$1062 ($mux).
Removed top 63 bits (of 64) from port B of cell SOCnexpo.$techmap\RV32I.$add$Procesador_V2.0b/RV32nexpo.v:484$322 ($add).
Removed top 31 bits (of 32) from port B of cell SOCnexpo.$techmap\RV32I.$add$Procesador_V2.0b/RV32nexpo.v:483$320 ($add).
Removed top 1 bits (of 2) from port B of cell SOCnexpo.$techmap\RV32I.$eq$Procesador_V2.0b/RV32nexpo.v:218$289 ($eq).
Removed top 1 bits (of 7) from port B of cell SOCnexpo.$techmap\RV32I.$eq$Procesador_V2.0b/RV32nexpo.v:149$276 ($eq).
Removed top 1 bits (of 7) from port B of cell SOCnexpo.$techmap\RV32I.$eq$Procesador_V2.0b/RV32nexpo.v:148$275 ($eq).
Removed top 1 bits (of 7) from port B of cell SOCnexpo.$techmap\RV32I.$eq$Procesador_V2.0b/RV32nexpo.v:147$274 ($eq).
Removed top 2 bits (of 7) from port B of cell SOCnexpo.$techmap\RV32I.$eq$Procesador_V2.0b/RV32nexpo.v:146$273 ($eq).
Removed top 2 bits (of 7) from port B of cell SOCnexpo.$techmap\RV32I.$eq$Procesador_V2.0b/RV32nexpo.v:145$272 ($eq).
Removed top 3 bits (of 7) from port B of cell SOCnexpo.$techmap\RV32I.$eq$Procesador_V2.0b/RV32nexpo.v:144$271 ($eq).
Removed top 5 bits (of 7) from port B of cell SOCnexpo.$techmap\RV32I.$eq$Procesador_V2.0b/RV32nexpo.v:143$270 ($eq).
Removed top 29 bits (of 32) from port B of cell SOCnexpo.$techmap\RV32I.$add$Procesador_V2.0b/RV32nexpo.v:100$266 ($add).
Removed top 7 bits (of 32) from FF cell SOCnexpo.$techmap\RAM.$procdff$1277 ($dff).
Removed top 8 bits (of 32) from FF cell SOCnexpo.$techmap\RAM.$procdff$1274 ($dff).
Removed top 16 bits (of 32) from FF cell SOCnexpo.$techmap\RAM.$procdff$1271 ($dff).
Removed top 24 bits (of 32) from FF cell SOCnexpo.$techmap\RAM.$procdff$1268 ($dff).
Removed cell SOCnexpo.$techmap\RAM.$procmux$689 ($mux).
Removed cell SOCnexpo.$techmap\RAM.$procmux$687 ($mux).
Removed cell SOCnexpo.$techmap\RAM.$procmux$685 ($mux).
Removed cell SOCnexpo.$techmap\RAM.$procmux$683 ($mux).
Removed cell SOCnexpo.$techmap\RAM.$procmux$677 ($mux).
Removed cell SOCnexpo.$techmap\RAM.$procmux$675 ($mux).
Removed cell SOCnexpo.$techmap\RAM.$procmux$673 ($mux).
Removed cell SOCnexpo.$techmap\RAM.$procmux$671 ($mux).
Removed cell SOCnexpo.$techmap\RAM.$procmux$665 ($mux).
Removed cell SOCnexpo.$techmap\RAM.$procmux$663 ($mux).
Removed cell SOCnexpo.$techmap\RAM.$procmux$661 ($mux).
Removed cell SOCnexpo.$techmap\RAM.$procmux$659 ($mux).
Removed cell SOCnexpo.$techmap\RAM.$procmux$653 ($mux).
Removed cell SOCnexpo.$techmap\RAM.$procmux$651 ($mux).
Removed cell SOCnexpo.$techmap\RAM.$procmux$649 ($mux).
Removed cell SOCnexpo.$techmap\RAM.$procmux$647 ($mux).
Removed top 1 bits (of 2) from port B of cell SOCnexpo.$techmap\LEDS8_4.$procmux$1123_CMP0 ($eq).
Removed top 3 bits (of 10) from port B of cell SOCnexpo.$techmap\LEDS8_4.$le$ControladorMatrizLed.v:38$3 ($le).
Removed top 31 bits (of 32) from port B of cell SOCnexpo.$techmap\LEDS8_4.$add$ControladorMatrizLed.v:28$2 ($add).
Removed top 20 bits (of 32) from port Y of cell SOCnexpo.$techmap\LEDS8_4.$add$ControladorMatrizLed.v:28$2 ($add).
Removed top 31 bits (of 32) from port B of cell SOCnexpo.$techmap\UART_TX.$add$uart.v:98$406 ($add).
Removed top 28 bits (of 32) from port Y of cell SOCnexpo.$techmap\UART_TX.$add$uart.v:98$406 ($add).
Removed top 1 bits (of 5) from port B of cell SOCnexpo.$techmap\UART_RX.$eq$uart.v:210$431 ($eq).
Removed top 31 bits (of 32) from port B of cell SOCnexpo.$techmap\UART_RX.$add$uart.v:207$430 ($add).
Removed top 27 bits (of 32) from port Y of cell SOCnexpo.$techmap\UART_RX.$add$uart.v:207$430 ($add).
Removed top 1 bits (of 7) from port B of cell SOCnexpo.$techmap\UART_RX.$eq$uart.v:176$424 ($eq).
Removed top 31 bits (of 32) from port B of cell SOCnexpo.$techmap\UART_RX.$add$uart.v:172$423 ($add).
Removed top 25 bits (of 32) from port Y of cell SOCnexpo.$techmap\UART_RX.$add$uart.v:172$423 ($add).
Removed top 26 bits (of 32) from port B of cell SOCnexpo.$techmap\UART_RX.$lt$uart.v:171$422 ($lt).
Removed top 31 bits (of 32) from mux cell SOCnexpo.$techmap\RV32I.load.$ternary$Procesador_V2.0b/interfaz_mem.v:61$261 ($mux).
Removed top 31 bits (of 32) from mux cell SOCnexpo.$techmap\RV32I.load.$ternary$Procesador_V2.0b/interfaz_mem.v:60$259 ($mux).
Removed top 2 bits (of 4) from mux cell SOCnexpo.$techmap\RV32I.store.$ternary$Procesador_V2.0b/interfaz_mem.v:35$252 ($mux).
Removed top 1 bits (of 33) from port Y of cell SOCnexpo.$techmap\RV32I.alu.$or$Procesador_V2.0b/ALU.v:63$225 ($or).
Removed top 1 bits (of 33) from port A of cell SOCnexpo.$techmap\RV32I.alu.$or$Procesador_V2.0b/ALU.v:63$225 ($or).
Removed top 1 bits (of 33) from port B of cell SOCnexpo.$techmap\RV32I.alu.$or$Procesador_V2.0b/ALU.v:63$225 ($or).
Removed top 1 bits (of 33) from mux cell SOCnexpo.$techmap\RV32I.alu.$ternary$Procesador_V2.0b/ALU.v:63$224 ($mux).
Removed top 1 bits (of 33) from port Y of cell SOCnexpo.$techmap\RV32I.alu.$and$Procesador_V2.0b/ALU.v:63$222 ($and).
Removed top 1 bits (of 33) from port Y of cell SOCnexpo.$techmap\RV32I.alu.$or$Procesador_V2.0b/ALU.v:62$221 ($or).
Removed top 1 bits (of 33) from port A of cell SOCnexpo.$techmap\RV32I.alu.$or$Procesador_V2.0b/ALU.v:62$221 ($or).
Removed top 1 bits (of 33) from port B of cell SOCnexpo.$techmap\RV32I.alu.$or$Procesador_V2.0b/ALU.v:62$221 ($or).
Removed top 1 bits (of 33) from mux cell SOCnexpo.$techmap\RV32I.alu.$ternary$Procesador_V2.0b/ALU.v:62$220 ($mux).
Removed top 1 bits (of 33) from port Y of cell SOCnexpo.$techmap\RV32I.alu.$or$Procesador_V2.0b/ALU.v:62$218 ($or).
Removed top 1 bits (of 33) from port B of cell SOCnexpo.$techmap\RV32I.alu.$or$Procesador_V2.0b/ALU.v:61$217 ($or).
Removed top 1 bits (of 33) from port Y of cell SOCnexpo.$techmap\RV32I.alu.$or$Procesador_V2.0b/ALU.v:61$217 ($or).
Removed top 1 bits (of 33) from port A of cell SOCnexpo.$techmap\RV32I.alu.$or$Procesador_V2.0b/ALU.v:61$217 ($or).
Removed top 1 bits (of 33) from port Y of cell SOCnexpo.$techmap\RV32I.alu.$or$Procesador_V2.0b/ALU.v:60$215 ($or).
Removed top 1 bits (of 33) from port A of cell SOCnexpo.$techmap\RV32I.alu.$or$Procesador_V2.0b/ALU.v:60$215 ($or).
Removed top 1 bits (of 33) from port B of cell SOCnexpo.$techmap\RV32I.alu.$or$Procesador_V2.0b/ALU.v:60$215 ($or).
Removed top 1 bits (of 33) from mux cell SOCnexpo.$techmap\RV32I.alu.$ternary$Procesador_V2.0b/ALU.v:60$214 ($mux).
Removed top 1 bits (of 33) from port Y of cell SOCnexpo.$techmap\RV32I.alu.$xor$Procesador_V2.0b/ALU.v:60$212 ($xor).
Removed top 1 bits (of 33) from port Y of cell SOCnexpo.$techmap\RV32I.alu.$or$Procesador_V2.0b/ALU.v:59$211 ($or).
Removed top 1 bits (of 33) from port A of cell SOCnexpo.$techmap\RV32I.alu.$or$Procesador_V2.0b/ALU.v:59$211 ($or).
Removed top 1 bits (of 33) from port B of cell SOCnexpo.$techmap\RV32I.alu.$or$Procesador_V2.0b/ALU.v:59$211 ($or).
Removed top 32 bits (of 33) from mux cell SOCnexpo.$techmap\RV32I.alu.$ternary$Procesador_V2.0b/ALU.v:59$210 ($mux).
Removed top 1 bits (of 33) from port Y of cell SOCnexpo.$techmap\RV32I.alu.$or$Procesador_V2.0b/ALU.v:58$208 ($or).
Removed top 1 bits (of 33) from port A of cell SOCnexpo.$techmap\RV32I.alu.$or$Procesador_V2.0b/ALU.v:58$208 ($or).
Removed top 1 bits (of 33) from port B of cell SOCnexpo.$techmap\RV32I.alu.$or$Procesador_V2.0b/ALU.v:58$208 ($or).
Removed top 32 bits (of 33) from mux cell SOCnexpo.$techmap\RV32I.alu.$ternary$Procesador_V2.0b/ALU.v:58$207 ($mux).
Removed top 1 bits (of 33) from port B of cell SOCnexpo.$techmap\RV32I.alu.$or$Procesador_V2.0b/ALU.v:57$205 ($or).
Removed top 1 bits (of 33) from port Y of cell SOCnexpo.$techmap\RV32I.alu.$or$Procesador_V2.0b/ALU.v:57$205 ($or).
Removed top 1 bits (of 33) from port A of cell SOCnexpo.$techmap\RV32I.alu.$or$Procesador_V2.0b/ALU.v:57$205 ($or).
Removed top 1 bits (of 33) from mux cell SOCnexpo.$techmap\RV32I.alu.$ternary$Procesador_V2.0b/ALU.v:56$203 ($mux).
Removed top 1 bits (of 33) from mux cell SOCnexpo.$techmap\RV32I.alu.$ternary$Procesador_V2.0b/ALU.v:56$201 ($mux).
Removed top 1 bits (of 33) from port Y of cell SOCnexpo.$techmap\RV32I.alu.$add$Procesador_V2.0b/ALU.v:56$200 ($add).
Removed top 1 bits (of 33) from port A of cell SOCnexpo.$techmap\RV32I.alu.$add$Procesador_V2.0b/ALU.v:47$193 ($add).
Removed top 32 bits (of 33) from port B of cell SOCnexpo.$techmap\RV32I.alu.$add$Procesador_V2.0b/ALU.v:47$192 ($add).
Removed top 1 bits (of 33) from port Y of cell SOCnexpo.$techmap\RV32I.alu.$sshr$Procesador_V2.0b/ALU.v:38$190 ($sshr).
Removed top 7 bits (of 8) from port A of cell SOCnexpo.$techmap\RV32I.alu.$shl$Procesador_V2.0b/ALU.v:31$187 ($shl).
Removed top 31 bits (of 32) from FF cell SOCnexpo.$techmap\RV32I.reg32.$procdff$1339 ($dff).
Removed cell SOCnexpo.$techmap\RV32I.reg32.$procmux$1117 ($mux).
Removed cell SOCnexpo.$techmap\RV32I.reg32.$procmux$1115 ($mux).
Removed top 31 bits (of 32) from port B of cell SOCnexpo.$techmap\UART_TX.bclk.$add$uart.v:39$603 ($add).
Removed top 25 bits (of 32) from port Y of cell SOCnexpo.$techmap\UART_TX.bclk.$add$uart.v:39$603 ($add).
Removed top 31 bits (of 32) from port B of cell SOCnexpo.$techmap\UART_RX.bclk.$add$uart.v:39$603 ($add).
Removed top 25 bits (of 32) from port Y of cell SOCnexpo.$techmap\UART_RX.bclk.$add$uart.v:39$603 ($add).
Removed top 12 bits (of 32) from mux cell SOCnexpo.$techmap\RV32I.$procmux$1089 ($mux).
Removed top 7 bits (of 24) from FF cell SOCnexpo.$techmap\RAM.$procdff$1274 ($dff).
Removed top 7 bits (of 16) from FF cell SOCnexpo.$techmap\RAM.$procdff$1271 ($dff).
Removed top 7 bits (of 8) from FF cell SOCnexpo.$techmap\RAM.$procdff$1268 ($dff).
Removed top 12 bits (of 32) from mux cell SOCnexpo.$techmap\RV32I.$procmux$1091 ($mux).
Removed top 1 bits (of 32) from mux cell SOCnexpo.$techmap\RV32I.$procmux$1093 ($mux).
Removed top 1 bits (of 32) from mux cell SOCnexpo.$techmap\RV32I.$procmux$1095 ($mux).
Removed top 20 bits (of 32) from wire SOCnexpo.$techmap\LEDS8_4.$add$ControladorMatrizLed.v:28$2_Y.
Removed top 24 bits (of 32) from wire SOCnexpo.$techmap\RAM.$0$memwr$\memArray$SOCnexpoV8_.v:263$569_EN[31:0]$583.
Removed top 16 bits (of 32) from wire SOCnexpo.$techmap\RAM.$0$memwr$\memArray$SOCnexpoV8_.v:264$570_DATA[31:0]$585.
Removed top 16 bits (of 32) from wire SOCnexpo.$techmap\RAM.$0$memwr$\memArray$SOCnexpoV8_.v:264$570_EN[31:0]$586.
Removed top 8 bits (of 32) from wire SOCnexpo.$techmap\RAM.$0$memwr$\memArray$SOCnexpoV8_.v:265$571_DATA[31:0]$588.
Removed top 8 bits (of 32) from wire SOCnexpo.$techmap\RAM.$0$memwr$\memArray$SOCnexpoV8_.v:265$571_EN[31:0]$589.
Removed top 24 bits (of 32) from wire SOCnexpo.$techmap\RAM.$procmux$643_Y.
Removed top 16 bits (of 32) from wire SOCnexpo.$techmap\RAM.$procmux$655_Y.
Removed top 16 bits (of 32) from wire SOCnexpo.$techmap\RAM.$procmux$659_Y.
Removed top 8 bits (of 32) from wire SOCnexpo.$techmap\RAM.$procmux$667_Y.
Removed top 8 bits (of 32) from wire SOCnexpo.$techmap\RAM.$procmux$671_Y.
Removed top 63 bits (of 64) from wire SOCnexpo.$techmap\RV32I.$logic_not$Procesador_V2.0b/RV32nexpo.v:484$321_Y.
Removed top 1 bits (of 33) from wire SOCnexpo.$techmap\RV32I.alu.$add$Procesador_V2.0b/ALU.v:56$200_Y.
Removed top 1 bits (of 33) from wire SOCnexpo.$techmap\RV32I.alu.$and$Procesador_V2.0b/ALU.v:63$222_Y.
Removed top 1 bits (of 33) from wire SOCnexpo.$techmap\RV32I.alu.$or$Procesador_V2.0b/ALU.v:57$205_Y.
Removed top 25 bits (of 33) from wire SOCnexpo.$techmap\RV32I.alu.$or$Procesador_V2.0b/ALU.v:61$217_Y.
Removed top 1 bits (of 33) from wire SOCnexpo.$techmap\RV32I.alu.$or$Procesador_V2.0b/ALU.v:62$218_Y.
Removed top 1 bits (of 33) from wire SOCnexpo.$techmap\RV32I.alu.$or$Procesador_V2.0b/ALU.v:62$221_Y.
Removed top 10 bits (of 33) from wire SOCnexpo.$techmap\RV32I.alu.$ternary$Procesador_V2.0b/ALU.v:56$201_Y.
Removed top 9 bits (of 33) from wire SOCnexpo.$techmap\RV32I.alu.$ternary$Procesador_V2.0b/ALU.v:56$203_Y.
Removed top 8 bits (of 32) from wire SOCnexpo.$techmap\RV32I.alu.$ternary$Procesador_V2.0b/ALU.v:57$204_Y.
Removed top 9 bits (of 33) from wire SOCnexpo.$techmap\RV32I.alu.$ternary$Procesador_V2.0b/ALU.v:62$220_Y.
Removed top 25 bits (of 32) from wire SOCnexpo.$techmap\UART_RX.$add$uart.v:172$423_Y.
Removed top 27 bits (of 32) from wire SOCnexpo.$techmap\UART_RX.$add$uart.v:207$430_Y.
Removed top 25 bits (of 32) from wire SOCnexpo.$techmap\UART_RX.bclk.$add$uart.v:39$603_Y.
Removed top 31 bits (of 32) from wire SOCnexpo.$techmap\UART_TX.bclk.$add$uart.v:39$603_Y.
Removed top 1 bits (of 8) from wire SOCnexpo.RV32I.D_funct7.
Removed top 1 bits (of 8) from wire SOCnexpo.RV32I.D_opcode.
Removed top 23 bits (of 32) from wire SOCnexpo.UART_data.
Removed top 1 bits (of 32) from wire SOCnexpo.palabra.

4.12. Executing PEEPOPT pass (run peephole optimizers).

4.13. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \SOCnexpo..
Removed 0 unused cells and 55 unused wires.

4.14. Executing SHARE pass (SAT-based resource sharing).
Found 2 cells in module SOCnexpo that may be considered for resource sharing.
Analyzing resource sharing options for $techmap\RV32I.alu.$sshr$Procesador_V2.0b/ALU.v:38$190 ($sshr):
Found 4 activation_patterns using ctrl signal { \RV32I.alu.funcionIs [5] \RV32I.alu.funcionIs [1] \RV32I.DE_isJALR \RV32I.E_Jump \RV32I.E_JumpOrBranch \rst }.
No candidates found.
Analyzing resource sharing options for $techmap\RV32I.alu.$shl$Procesador_V2.0b/ALU.v:31$187 ($shl):
Found 7 activation_patterns using ctrl signal { \RV32I.alu.funcionIs [5] \RV32I.alu.funcionIs [1] \RV32I.DE_isJALR \RV32I.E_Jump \RV32I.E_JumpOrBranch \rst }.
No candidates found.

4.15. Executing TECHMAP pass (map to technology primitives).

4.15.1. Executing Verilog-2005 frontend: /home/jfdava/.apio/packages/toolchain-yosys/bin/../share/yosys/cmp2lut.v
Parsing Verilog input from `/home/jfdava/.apio/packages/toolchain-yosys/bin/../share/yosys/cmp2lut.v' to AST representation.
Generating RTLIL representation for module `\_90_lut_cmp_'.
Successfully finished Verilog frontend.

4.15.2. Continuing TECHMAP pass.
No more expansions possible.

4.16. Executing OPT_EXPR pass (perform const folding).
Optimizing module SOCnexpo.

4.17. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \SOCnexpo..
Removed 0 unused cells and 6 unused wires.

4.18. Executing ALUMACC pass (create $alu and $macc cells).
Extracting $alu and $macc cells in module SOCnexpo:
creating $macc model for $add$SOCnexpoV8_.v:28$326 ($add).
creating $macc model for $techmap\LEDS8_4.$add$ControladorMatrizLed.v:28$2 ($add).
creating $macc model for $techmap\RV32I.$add$Procesador_V2.0b/RV32nexpo.v:100$266 ($add).
creating $macc model for $techmap\RV32I.$add$Procesador_V2.0b/RV32nexpo.v:338$299 ($add).
creating $macc model for $techmap\RV32I.$add$Procesador_V2.0b/RV32nexpo.v:483$320 ($add).
creating $macc model for $techmap\RV32I.$add$Procesador_V2.0b/RV32nexpo.v:484$322 ($add).
creating $macc model for $techmap\RV32I.alu.$add$Procesador_V2.0b/ALU.v:47$192 ($add).
creating $macc model for $techmap\RV32I.alu.$add$Procesador_V2.0b/ALU.v:47$193 ($add).
creating $macc model for $techmap\RV32I.alu.$add$Procesador_V2.0b/ALU.v:56$200 ($add).
creating $macc model for $techmap\UART_RX.$add$uart.v:172$423 ($add).
creating $macc model for $techmap\UART_RX.$add$uart.v:207$430 ($add).
creating $macc model for $techmap\UART_RX.bclk.$add$uart.v:39$603 ($add).
creating $macc model for $techmap\UART_TX.$add$uart.v:98$406 ($add).
creating $macc model for $techmap\UART_TX.bclk.$add$uart.v:39$603 ($add).
merging $macc model for $techmap\RV32I.alu.$add$Procesador_V2.0b/ALU.v:47$192 into $techmap\RV32I.alu.$add$Procesador_V2.0b/ALU.v:47$193.
creating $alu model for $macc $techmap\UART_TX.$add$uart.v:98$406.
creating $alu model for $macc $techmap\UART_RX.bclk.$add$uart.v:39$603.
creating $alu model for $macc $techmap\UART_RX.$add$uart.v:207$430.
creating $alu model for $macc $techmap\UART_RX.$add$uart.v:172$423.
creating $alu model for $macc $techmap\RV32I.alu.$add$Procesador_V2.0b/ALU.v:56$200.
creating $alu model for $macc $techmap\RV32I.alu.$add$Procesador_V2.0b/ALU.v:47$193.
creating $alu model for $macc $techmap\UART_TX.bclk.$add$uart.v:39$603.
creating $alu model for $macc $techmap\RV32I.$add$Procesador_V2.0b/RV32nexpo.v:484$322.
creating $alu model for $macc $techmap\RV32I.$add$Procesador_V2.0b/RV32nexpo.v:483$320.
creating $alu model for $macc $techmap\RV32I.$add$Procesador_V2.0b/RV32nexpo.v:338$299.
creating $alu model for $macc $techmap\RV32I.$add$Procesador_V2.0b/RV32nexpo.v:100$266.
creating $alu model for $macc $techmap\LEDS8_4.$add$ControladorMatrizLed.v:28$2.
creating $alu model for $macc $add$SOCnexpoV8_.v:28$326.
creating $alu model for $techmap\LEDS8_4.$le$ControladorMatrizLed.v:38$3 ($le): new $alu
creating $alu model for $techmap\UART_RX.$lt$uart.v:171$422 ($lt): new $alu
creating $alu model for $techmap\UART_RX.$eq$uart.v:176$424 ($eq): merged with $techmap\UART_RX.$lt$uart.v:171$422.
creating $alu cell for $techmap\UART_RX.$lt$uart.v:171$422, $techmap\UART_RX.$eq$uart.v:176$424: $auto$alumacc.cc:485:replace_alu$1379
creating $alu cell for $techmap\LEDS8_4.$le$ControladorMatrizLed.v:38$3: $auto$alumacc.cc:485:replace_alu$1390
creating $alu cell for $add$SOCnexpoV8_.v:28$326: $auto$alumacc.cc:485:replace_alu$1403
creating $alu cell for $techmap\LEDS8_4.$add$ControladorMatrizLed.v:28$2: $auto$alumacc.cc:485:replace_alu$1406
creating $alu cell for $techmap\RV32I.$add$Procesador_V2.0b/RV32nexpo.v:100$266: $auto$alumacc.cc:485:replace_alu$1409
creating $alu cell for $techmap\RV32I.$add$Procesador_V2.0b/RV32nexpo.v:338$299: $auto$alumacc.cc:485:replace_alu$1412
creating $alu cell for $techmap\RV32I.$add$Procesador_V2.0b/RV32nexpo.v:483$320: $auto$alumacc.cc:485:replace_alu$1415
creating $alu cell for $techmap\RV32I.$add$Procesador_V2.0b/RV32nexpo.v:484$322: $auto$alumacc.cc:485:replace_alu$1418
creating $alu cell for $techmap\UART_TX.bclk.$add$uart.v:39$603: $auto$alumacc.cc:485:replace_alu$1421
creating $alu cell for $techmap\RV32I.alu.$add$Procesador_V2.0b/ALU.v:47$193: $auto$alumacc.cc:485:replace_alu$1424
creating $alu cell for $techmap\RV32I.alu.$add$Procesador_V2.0b/ALU.v:56$200: $auto$alumacc.cc:485:replace_alu$1427
creating $alu cell for $techmap\UART_RX.$add$uart.v:172$423: $auto$alumacc.cc:485:replace_alu$1430
creating $alu cell for $techmap\UART_RX.$add$uart.v:207$430: $auto$alumacc.cc:485:replace_alu$1433
creating $alu cell for $techmap\UART_RX.bclk.$add$uart.v:39$603: $auto$alumacc.cc:485:replace_alu$1436
creating $alu cell for $techmap\UART_TX.$add$uart.v:98$406: $auto$alumacc.cc:485:replace_alu$1439
created 15 $alu and 0 $macc cells.

4.19. Executing OPT pass (performing simple optimizations).

4.19.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module SOCnexpo.

4.19.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\SOCnexpo'.
Removed a total of 3 cells.

4.19.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \SOCnexpo..
Creating internal representation of mux trees.
Evaluating internal representation of mux trees.
Analyzing evaluation results.
Removed 0 multiplexer ports.

4.19.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
Optimizing cells in module \SOCnexpo.
New input vector for $reduce_or cell $auto$alumacc.cc:520:replace_alu$1401: { $auto$rtlil.cc:1862:Not$1400 $auto$rtlil.cc:1865:ReduceAnd$1396 }
New input vector for $reduce_and cell $auto$alumacc.cc:75:get_eq$1395: { $auto$alumacc.cc:501:replace_alu$1391 [0] $auto$alumacc.cc:501:replace_alu$1391 [1] $auto$alumacc.cc:501:replace_alu$1391 [2] $auto$alumacc.cc:501:replace_alu$1391 [3] $auto$alumacc.cc:501:replace_alu$1391 [4] $auto$alumacc.cc:501:replace_alu$1391 [5] $auto$alumacc.cc:501:replace_alu$1391 [6] $auto$alumacc.cc:501:replace_alu$1391 [7] $auto$alumacc.cc:501:replace_alu$1391 [8] $auto$alumacc.cc:501:replace_alu$1391 [9] }
New input vector for $reduce_and cell $auto$alumacc.cc:75:get_eq$1384: { $auto$alumacc.cc:501:replace_alu$1380 [0] $auto$alumacc.cc:501:replace_alu$1380 [1] $auto$alumacc.cc:501:replace_alu$1380 [2] $auto$alumacc.cc:501:replace_alu$1380 [3] $auto$alumacc.cc:501:replace_alu$1380 [4] $auto$alumacc.cc:501:replace_alu$1380 [5] $auto$alumacc.cc:501:replace_alu$1380 [6] }
Optimizing cells in module \SOCnexpo.
Performed a total of 3 changes.

4.19.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\SOCnexpo'.
Removed a total of 0 cells.

4.19.6. Executing OPT_RMDFF pass (remove dff with constant values).

4.19.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \SOCnexpo..
Removed 2 unused cells and 8 unused wires.

4.19.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module SOCnexpo.

4.19.9. Rerunning OPT passes. (Maybe there is more to do..)

4.19.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \SOCnexpo..
Creating internal representation of mux trees.
Evaluating internal representation of mux trees.
Analyzing evaluation results.
Removed 0 multiplexer ports.

4.19.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
Optimizing cells in module \SOCnexpo.
Performed a total of 0 changes.

4.19.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\SOCnexpo'.
Removed a total of 0 cells.

4.19.13. Executing OPT_RMDFF pass (remove dff with constant values).

4.19.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \SOCnexpo..

4.19.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module SOCnexpo.

4.19.16. Finished OPT passes. (There is nothing left to do.)

4.20. Executing FSM pass (extract and optimize FSM).

4.20.1. Executing FSM_DETECT pass (finding FSMs in design).
Not marking SOCnexpo.LEDS8_4.act_row as FSM state register:
Register is connected to module port.
Users of register don't seem to benefit from recoding.

4.20.2. Executing FSM_EXTRACT pass (extracting FSM from design).

4.20.3. Executing FSM_OPT pass (simple optimizations of FSMs).

4.20.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \SOCnexpo..

4.20.5. Executing FSM_OPT pass (simple optimizations of FSMs).

4.20.6. Executing FSM_RECODE pass (re-assigning FSM state encoding).

4.20.7. Executing FSM_INFO pass (dumping all available information on FSM cells).

4.20.8. Executing FSM_MAP pass (mapping FSMs to basic logic).

4.21. Executing OPT pass (performing simple optimizations).

4.21.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module SOCnexpo.

4.21.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\SOCnexpo'.
Removed a total of 0 cells.

4.21.3. Executing OPT_RMDFF pass (remove dff with constant values).

4.21.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \SOCnexpo..

4.21.5. Finished fast OPT passes.

4.22. Executing MEMORY pass.

4.22.1. Executing OPT_MEM pass (optimize memories).
Performed a total of 0 transformations.

4.22.2. Executing MEMORY_DFF pass (merging $dff cells to $memrd and $memwr).
Checking cell `$techmap\RAM.$memwr$\memArray$SOCnexpoV8_.v:263$595' in module `\SOCnexpo': merged $dff to cell.
Checking cell `$techmap\RAM.$memwr$\memArray$SOCnexpoV8_.v:264$596' in module `\SOCnexpo': merged $dff to cell.
Checking cell `$techmap\RAM.$memwr$\memArray$SOCnexpoV8_.v:265$597' in module `\SOCnexpo': merged $dff to cell.
Checking cell `$techmap\RAM.$memwr$\memArray$SOCnexpoV8_.v:266$598' in module `\SOCnexpo': merged $dff to cell.
Checking cell `$techmap\RV32I.reg32.$memwr$\WORKREG$Procesador_V2.0b/registros_32.v:43$118' in module `\SOCnexpo': merged $dff to cell.
Checking cell `$memrd$\MEMROM$SOCnexpoV8_.v:47$330' in module `\SOCnexpo': merged data $dff to cell.
Checking cell `$techmap\RAM.$memrd$\memArray$SOCnexpoV8_.v:268$593' in module `\SOCnexpo': merged data $dff to cell.
Checking cell `$techmap\RV32I.reg32.$memrd$\WORKREG$Procesador_V2.0b/registros_32.v:35$78' in module `\SOCnexpo': merged data $dff to cell.
Checking cell `$techmap\RV32I.reg32.$memrd$\WORKREG$Procesador_V2.0b/registros_32.v:38$79' in module `\SOCnexpo': merged data $dff to cell.

4.22.3. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \SOCnexpo..
Removed 16 unused cells and 22 unused wires.

4.22.4. Executing MEMORY_SHARE pass (consolidating $memrd/$memwr cells).
Consolidating write ports of memory SOCnexpo.RAM.memArray by address:
New clock domain: posedge \clk12MHz
Port 0 ($techmap\RAM.$memwr$\memArray$SOCnexpoV8_.v:263$595) has addr \RV32I.EM_resultado [12:2].
Active bits: 00000000000000000000000011111111
Port 1 ($techmap\RAM.$memwr$\memArray$SOCnexpoV8_.v:264$596) has addr \RV32I.EM_resultado [12:2].
Active bits: 00000000000000001111111100000000
Merging port 0 into this one.
Active bits: 00000000000000001111111111111111
Port 2 ($techmap\RAM.$memwr$\memArray$SOCnexpoV8_.v:265$597) has addr \RV32I.EM_resultado [12:2].
Active bits: 00000000111111110000000000000000
Merging port 1 into this one.
Active bits: 00000000111111111111111111111111
Port 3 ($techmap\RAM.$memwr$\memArray$SOCnexpoV8_.v:266$598) has addr \RV32I.EM_resultado [12:2].
Active bits: 11111111000000000000000000000000
Merging port 2 into this one.
Active bits: 11111111111111111111111111111111

4.22.5. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \SOCnexpo..

4.22.6. Executing MEMORY_COLLECT pass (generating $mem cells).
Collecting $memrd, $memwr and $meminit for memory `\MEMROM' in module `\SOCnexpo':
$meminit$\MEMROM$SOCnexpoV8_.v:42$357 ($meminit)
$memrd$\MEMROM$SOCnexpoV8_.v:47$330 ($memrd)
Collecting $memrd, $memwr and $meminit for memory `\RAM.memArray' in module `\SOCnexpo':
$techmap\RAM.$meminit$\memArray$SOCnexpoV8_.v:258$594 ($meminit)
$techmap\RAM.$memwr$\memArray$SOCnexpoV8_.v:266$598 ($memwr)
$techmap\RAM.$memrd$\memArray$SOCnexpoV8_.v:268$593 ($memrd)
Collecting $memrd, $memwr and $meminit for memory `\RV32I.reg32.WORKREG' in module `\SOCnexpo':
$techmap\RV32I.reg32.$meminit$\WORKREG$Procesador_V2.0b/registros_32.v:30$86 ($meminit)
$techmap\RV32I.reg32.$meminit$\WORKREG$Procesador_V2.0b/registros_32.v:30$87 ($meminit)
$techmap\RV32I.reg32.$meminit$\WORKREG$Procesador_V2.0b/registros_32.v:30$88 ($meminit)
$techmap\RV32I.reg32.$meminit$\WORKREG$Procesador_V2.0b/registros_32.v:30$89 ($meminit)
$techmap\RV32I.reg32.$meminit$\WORKREG$Procesador_V2.0b/registros_32.v:30$90 ($meminit)
$techmap\RV32I.reg32.$meminit$\WORKREG$Procesador_V2.0b/registros_32.v:30$91 ($meminit)
$techmap\RV32I.reg32.$meminit$\WORKREG$Procesador_V2.0b/registros_32.v:30$92 ($meminit)
$techmap\RV32I.reg32.$meminit$\WORKREG$Procesador_V2.0b/registros_32.v:30$93 ($meminit)
$techmap\RV32I.reg32.$meminit$\WORKREG$Procesador_V2.0b/registros_32.v:30$94 ($meminit)
$techmap\RV32I.reg32.$meminit$\WORKREG$Procesador_V2.0b/registros_32.v:30$95 ($meminit)
$techmap\RV32I.reg32.$meminit$\WORKREG$Procesador_V2.0b/registros_32.v:30$96 ($meminit)
$techmap\RV32I.reg32.$meminit$\WORKREG$Procesador_V2.0b/registros_32.v:30$97 ($meminit)
$techmap\RV32I.reg32.$meminit$\WORKREG$Procesador_V2.0b/registros_32.v:30$98 ($meminit)
$techmap\RV32I.reg32.$meminit$\WORKREG$Procesador_V2.0b/registros_32.v:30$99 ($meminit)
$techmap\RV32I.reg32.$meminit$\WORKREG$Procesador_V2.0b/registros_32.v:30$100 ($meminit)
$techmap\RV32I.reg32.$meminit$\WORKREG$Procesador_V2.0b/registros_32.v:30$101 ($meminit)
$techmap\RV32I.reg32.$meminit$\WORKREG$Procesador_V2.0b/registros_32.v:30$102 ($meminit)
$techmap\RV32I.reg32.$meminit$\WORKREG$Procesador_V2.0b/registros_32.v:30$103 ($meminit)
$techmap\RV32I.reg32.$meminit$\WORKREG$Procesador_V2.0b/registros_32.v:30$104 ($meminit)
$techmap\RV32I.reg32.$meminit$\WORKREG$Procesador_V2.0b/registros_32.v:30$105 ($meminit)
$techmap\RV32I.reg32.$meminit$\WORKREG$Procesador_V2.0b/registros_32.v:30$106 ($meminit)
$techmap\RV32I.reg32.$meminit$\WORKREG$Procesador_V2.0b/registros_32.v:30$107 ($meminit)
$techmap\RV32I.reg32.$meminit$\WORKREG$Procesador_V2.0b/registros_32.v:30$108 ($meminit)
$techmap\RV32I.reg32.$meminit$\WORKREG$Procesador_V2.0b/registros_32.v:30$109 ($meminit)
$techmap\RV32I.reg32.$meminit$\WORKREG$Procesador_V2.0b/registros_32.v:30$110 ($meminit)
$techmap\RV32I.reg32.$meminit$\WORKREG$Procesador_V2.0b/registros_32.v:30$111 ($meminit)
$techmap\RV32I.reg32.$meminit$\WORKREG$Procesador_V2.0b/registros_32.v:30$112 ($meminit)
$techmap\RV32I.reg32.$meminit$\WORKREG$Procesador_V2.0b/registros_32.v:30$113 ($meminit)
$techmap\RV32I.reg32.$meminit$\WORKREG$Procesador_V2.0b/registros_32.v:30$114 ($meminit)
$techmap\RV32I.reg32.$meminit$\WORKREG$Procesador_V2.0b/registros_32.v:30$115 ($meminit)
$techmap\RV32I.reg32.$meminit$\WORKREG$Procesador_V2.0b/registros_32.v:30$116 ($meminit)
$techmap\RV32I.reg32.$meminit$\WORKREG$Procesador_V2.0b/registros_32.v:30$117 ($meminit)
$techmap\RV32I.reg32.$memwr$\WORKREG$Procesador_V2.0b/registros_32.v:43$118 ($memwr)
$techmap\RV32I.reg32.$memrd$\WORKREG$Procesador_V2.0b/registros_32.v:38$79 ($memrd)
$techmap\RV32I.reg32.$memrd$\WORKREG$Procesador_V2.0b/registros_32.v:35$78 ($memrd)

4.23. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \SOCnexpo..

4.24. Executing MEMORY_BRAM pass (mapping $mem cells to block memories).
Processing SOCnexpo.MEMROM:
Properties: ports=1 bits=65536 rports=1 wports=0 dbits=32 abits=11 words=2048
Checking rule #1 for bram type $__ICE40_RAM4K_M0 (variant 1):
Bram geometry: abits=8 dbits=16 wports=0 rports=0
Estimated number of duplicates for more read ports: dups=1
Metrics for $__ICE40_RAM4K_M0: awaste=0 dwaste=0 bwaste=0 waste=0 efficiency=100
Rule #1 for bram type $__ICE40_RAM4K_M0 (variant 1) accepted.
Mapping to bram type $__ICE40_RAM4K_M0 (variant 1):
Read port #0 is in clock domain \clk12MHz.
Mapped to bram port A1.1.
Updated properties: dups=1 waste=0 efficiency=100
Storing for later selection.
Checking rule #2 for bram type $__ICE40_RAM4K_M123 (variant 1):
Bram geometry: abits=9 dbits=8 wports=0 rports=0
Estimated number of duplicates for more read ports: dups=1
Metrics for $__ICE40_RAM4K_M123: awaste=0 dwaste=0 bwaste=0 waste=0 efficiency=100
Rule #2 for bram type $__ICE40_RAM4K_M123 (variant 1) accepted.
Mapping to bram type $__ICE40_RAM4K_M123 (variant 1):
Read port #0 is in clock domain \clk12MHz.
Mapped to bram port A1.1.
Updated properties: dups=1 waste=0 efficiency=100
Storing for later selection.
Checking rule #2 for bram type $__ICE40_RAM4K_M123 (variant 2):
Bram geometry: abits=10 dbits=4 wports=0 rports=0
Estimated number of duplicates for more read ports: dups=1
Metrics for $__ICE40_RAM4K_M123: awaste=0 dwaste=0 bwaste=0 waste=0 efficiency=100
Rule #2 for bram type $__ICE40_RAM4K_M123 (variant 2) accepted.
Mapping to bram type $__ICE40_RAM4K_M123 (variant 2):
Read port #0 is in clock domain \clk12MHz.
Mapped to bram port A1.1.
Updated properties: dups=1 waste=0 efficiency=100
Storing for later selection.
Checking rule #2 for bram type $__ICE40_RAM4K_M123 (variant 3):
Bram geometry: abits=11 dbits=2 wports=0 rports=0
Estimated number of duplicates for more read ports: dups=1
Metrics for $__ICE40_RAM4K_M123: awaste=0 dwaste=0 bwaste=0 waste=0 efficiency=100
Rule #2 for bram type $__ICE40_RAM4K_M123 (variant 3) accepted.
Mapping to bram type $__ICE40_RAM4K_M123 (variant 3):
Read port #0 is in clock domain \clk12MHz.
Mapped to bram port A1.1.
Updated properties: dups=1 waste=0 efficiency=100
Storing for later selection.
Selecting best of 4 rules:
Efficiency for rule 2.3: efficiency=100, cells=16, acells=1
Efficiency for rule 2.2: efficiency=100, cells=16, acells=2
Efficiency for rule 2.1: efficiency=100, cells=16, acells=4
Efficiency for rule 1.1: efficiency=100, cells=16, acells=8
Selected rule 2.3 with efficiency 100.
Mapping to bram type $__ICE40_RAM4K_M123 (variant 3):
Read port #0 is in clock domain \clk12MHz.
Mapped to bram port A1.1.
Creating $__ICE40_RAM4K_M123 cell at grid position <0 0 0>: MEMROM.0.0.0
Creating $__ICE40_RAM4K_M123 cell at grid position <1 0 0>: MEMROM.1.0.0
Creating $__ICE40_RAM4K_M123 cell at grid position <2 0 0>: MEMROM.2.0.0
Creating $__ICE40_RAM4K_M123 cell at grid position <3 0 0>: MEMROM.3.0.0
Creating $__ICE40_RAM4K_M123 cell at grid position <4 0 0>: MEMROM.4.0.0
Creating $__ICE40_RAM4K_M123 cell at grid position <5 0 0>: MEMROM.5.0.0
Creating $__ICE40_RAM4K_M123 cell at grid position <6 0 0>: MEMROM.6.0.0
Creating $__ICE40_RAM4K_M123 cell at grid position <7 0 0>: MEMROM.7.0.0
Creating $__ICE40_RAM4K_M123 cell at grid position <8 0 0>: MEMROM.8.0.0
Creating $__ICE40_RAM4K_M123 cell at grid position <9 0 0>: MEMROM.9.0.0
Creating $__ICE40_RAM4K_M123 cell at grid position <10 0 0>: MEMROM.10.0.0
Creating $__ICE40_RAM4K_M123 cell at grid position <11 0 0>: MEMROM.11.0.0
Creating $__ICE40_RAM4K_M123 cell at grid position <12 0 0>: MEMROM.12.0.0
Creating $__ICE40_RAM4K_M123 cell at grid position <13 0 0>: MEMROM.13.0.0
Creating $__ICE40_RAM4K_M123 cell at grid position <14 0 0>: MEMROM.14.0.0
Creating $__ICE40_RAM4K_M123 cell at grid position <15 0 0>: MEMROM.15.0.0
Processing SOCnexpo.RAM.memArray:
Properties: ports=2 bits=65536 rports=1 wports=1 dbits=32 abits=11 words=2048
Checking rule #1 for bram type $__ICE40_RAM4K_M0 (variant 1):
Bram geometry: abits=8 dbits=16 wports=0 rports=0
Estimated number of duplicates for more read ports: dups=1
Metrics for $__ICE40_RAM4K_M0: awaste=0 dwaste=0 bwaste=0 waste=0 efficiency=100
Rule #1 for bram type $__ICE40_RAM4K_M0 (variant 1) accepted.
Mapping to bram type $__ICE40_RAM4K_M0 (variant 1):
Write port #0 is in clock domain \clk12MHz.
Mapped to bram port B1.
Read port #0 is in clock domain \clk12MHz.
Mapped to bram port A1.1.
Updated properties: dups=1 waste=0 efficiency=100
Storing for later selection.
Checking rule #2 for bram type $__ICE40_RAM4K_M123 (variant 1):
Bram geometry: abits=9 dbits=8 wports=0 rports=0
Estimated number of duplicates for more read ports: dups=1
Metrics for $__ICE40_RAM4K_M123: awaste=0 dwaste=0 bwaste=0 waste=0 efficiency=100
Rule #2 for bram type $__ICE40_RAM4K_M123 (variant 1) accepted.
Mapping to bram type $__ICE40_RAM4K_M123 (variant 1):
Write port #0 is in clock domain \clk12MHz.
Mapped to bram port B1.
Read port #0 is in clock domain \clk12MHz.
Mapped to bram port A1.1.
Updated properties: dups=1 waste=0 efficiency=100
Storing for later selection.
Checking rule #2 for bram type $__ICE40_RAM4K_M123 (variant 2):
Bram geometry: abits=10 dbits=4 wports=0 rports=0
Estimated number of duplicates for more read ports: dups=1
Metrics for $__ICE40_RAM4K_M123: awaste=0 dwaste=0 bwaste=0 waste=0 efficiency=100
Rule #2 for bram type $__ICE40_RAM4K_M123 (variant 2) accepted.
Mapping to bram type $__ICE40_RAM4K_M123 (variant 2):
Write port #0 is in clock domain \clk12MHz.
Mapped to bram port B1.
Read port #0 is in clock domain \clk12MHz.
Mapped to bram port A1.1.
Updated properties: dups=1 waste=0 efficiency=100
Storing for later selection.
Checking rule #2 for bram type $__ICE40_RAM4K_M123 (variant 3):
Bram geometry: abits=11 dbits=2 wports=0 rports=0
Estimated number of duplicates for more read ports: dups=1
Metrics for $__ICE40_RAM4K_M123: awaste=0 dwaste=0 bwaste=0 waste=0 efficiency=100
Rule #2 for bram type $__ICE40_RAM4K_M123 (variant 3) accepted.
Mapping to bram type $__ICE40_RAM4K_M123 (variant 3):
Write port #0 is in clock domain \clk12MHz.
Mapped to bram port B1.
Read port #0 is in clock domain \clk12MHz.
Mapped to bram port A1.1.
Updated properties: dups=1 waste=0 efficiency=100
Storing for later selection.
Selecting best of 4 rules:
Efficiency for rule 2.3: efficiency=100, cells=16, acells=1
Efficiency for rule 2.2: efficiency=100, cells=16, acells=2
Efficiency for rule 2.1: efficiency=100, cells=16, acells=4
Efficiency for rule 1.1: efficiency=100, cells=16, acells=8
Selected rule 2.3 with efficiency 100.
Mapping to bram type $__ICE40_RAM4K_M123 (variant 3):
Write port #0 is in clock domain \clk12MHz.
Mapped to bram port B1.
Read port #0 is in clock domain \clk12MHz.
Mapped to bram port A1.1.
Creating $__ICE40_RAM4K_M123 cell at grid position <0 0 0>: RAM.memArray.0.0.0
Creating $__ICE40_RAM4K_M123 cell at grid position <1 0 0>: RAM.memArray.1.0.0
Creating $__ICE40_RAM4K_M123 cell at grid position <2 0 0>: RAM.memArray.2.0.0
Creating $__ICE40_RAM4K_M123 cell at grid position <3 0 0>: RAM.memArray.3.0.0
Creating $__ICE40_RAM4K_M123 cell at grid position <4 0 0>: RAM.memArray.4.0.0
Creating $__ICE40_RAM4K_M123 cell at grid position <5 0 0>: RAM.memArray.5.0.0
Creating $__ICE40_RAM4K_M123 cell at grid position <6 0 0>: RAM.memArray.6.0.0
Creating $__ICE40_RAM4K_M123 cell at grid position <7 0 0>: RAM.memArray.7.0.0
Creating $__ICE40_RAM4K_M123 cell at grid position <8 0 0>: RAM.memArray.8.0.0
Creating $__ICE40_RAM4K_M123 cell at grid position <9 0 0>: RAM.memArray.9.0.0
Creating $__ICE40_RAM4K_M123 cell at grid position <10 0 0>: RAM.memArray.10.0.0
Creating $__ICE40_RAM4K_M123 cell at grid position <11 0 0>: RAM.memArray.11.0.0
Creating $__ICE40_RAM4K_M123 cell at grid position <12 0 0>: RAM.memArray.12.0.0
Creating $__ICE40_RAM4K_M123 cell at grid position <13 0 0>: RAM.memArray.13.0.0
Creating $__ICE40_RAM4K_M123 cell at grid position <14 0 0>: RAM.memArray.14.0.0
Creating $__ICE40_RAM4K_M123 cell at grid position <15 0 0>: RAM.memArray.15.0.0
Processing SOCnexpo.RV32I.reg32.WORKREG:
Properties: ports=3 bits=1024 rports=2 wports=1 dbits=32 abits=5 words=32
Checking rule #1 for bram type $__ICE40_RAM4K_M0 (variant 1):
Bram geometry: abits=8 dbits=16 wports=0 rports=0
Estimated number of duplicates for more read ports: dups=1
Metrics for $__ICE40_RAM4K_M0: awaste=224 dwaste=0 bwaste=3584 waste=3584 efficiency=12
Rule #1 for bram type $__ICE40_RAM4K_M0 (variant 1) accepted.
Mapping to bram type $__ICE40_RAM4K_M0 (variant 1):
Write port #0 is in clock domain !\clk12MHz.
Mapped to bram port B1.
Read port #0 is in clock domain \clk12MHz.
Mapped to bram port A1.1.
Read port #1 is in clock domain \clk12MHz.
Failed to map read port #1.
Growing more read ports by duplicating bram cells.
Read port #0 is in clock domain \clk12MHz.
Mapped to bram port A1.1.
Read port #1 is in clock domain \clk12MHz.
Mapped to bram port A1.2.
Updated properties: dups=2 waste=7168 efficiency=6
Storing for later selection.
Checking rule #2 for bram type $__ICE40_RAM4K_M123 (variant 1):
Bram geometry: abits=9 dbits=8 wports=0 rports=0
Estimated number of duplicates for more read ports: dups=1
Metrics for $__ICE40_RAM4K_M123: awaste=480 dwaste=0 bwaste=3840 waste=3840 efficiency=6
Rule #2 for bram type $__ICE40_RAM4K_M123 (variant 1) accepted.
Mapping to bram type $__ICE40_RAM4K_M123 (variant 1):
Write port #0 is in clock domain !\clk12MHz.
Mapped to bram port B1.
Read port #0 is in clock domain \clk12MHz.
Mapped to bram port A1.1.
Read port #1 is in clock domain \clk12MHz.
Failed to map read port #1.
Growing more read ports by duplicating bram cells.
Read port #0 is in clock domain \clk12MHz.
Mapped to bram port A1.1.
Read port #1 is in clock domain \clk12MHz.
Mapped to bram port A1.2.
Updated properties: dups=2 waste=7680 efficiency=3
Storing for later selection.
Checking rule #2 for bram type $__ICE40_RAM4K_M123 (variant 2):
Bram geometry: abits=10 dbits=4 wports=0 rports=0
Estimated number of duplicates for more read ports: dups=1
Metrics for $__ICE40_RAM4K_M123: awaste=992 dwaste=0 bwaste=3968 waste=3968 efficiency=3
Rule #2 for bram type $__ICE40_RAM4K_M123 (variant 2) accepted.
Mapping to bram type $__ICE40_RAM4K_M123 (variant 2):
Write port #0 is in clock domain !\clk12MHz.
Mapped to bram port B1.
Read port #0 is in clock domain \clk12MHz.
Mapped to bram port A1.1.
Read port #1 is in clock domain \clk12MHz.
Failed to map read port #1.
Growing more read ports by duplicating bram cells.
Read port #0 is in clock domain \clk12MHz.
Mapped to bram port A1.1.
Read port #1 is in clock domain \clk12MHz.
Mapped to bram port A1.2.
Updated properties: dups=2 waste=7936 efficiency=1
Rule for bram type $__ICE40_RAM4K_M123 rejected: requirement 'min efficiency 2' not met.
Mapping to bram type $__ICE40_RAM4K_M123 failed.
Checking rule #2 for bram type $__ICE40_RAM4K_M123 (variant 3):
Bram geometry: abits=11 dbits=2 wports=0 rports=0
Estimated number of duplicates for more read ports: dups=1
Metrics for $__ICE40_RAM4K_M123: awaste=2016 dwaste=0 bwaste=4032 waste=4032 efficiency=1
Rule #2 for bram type $__ICE40_RAM4K_M123 (variant 3) rejected: requirement 'min efficiency 2' not met.
Selecting best of 2 rules:
Efficiency for rule 2.1: efficiency=3, cells=8, acells=1
Efficiency for rule 1.1: efficiency=6, cells=4, acells=1
Selected rule 1.1 with efficiency 6.
Mapping to bram type $__ICE40_RAM4K_M0 (variant 1):
Write port #0 is in clock domain !\clk12MHz.
Mapped to bram port B1.
Read port #0 is in clock domain \clk12MHz.
Mapped to bram port A1.1.
Read port #1 is in clock domain \clk12MHz.
Failed to map read port #1.
Growing more read ports by duplicating bram cells.
Read port #0 is in clock domain \clk12MHz.
Mapped to bram port A1.1.
Read port #1 is in clock domain \clk12MHz.
Mapped to bram port A1.2.
Creating $__ICE40_RAM4K_M0 cell at grid position <0 0 0>: RV32I.reg32.WORKREG.0.0.0
Creating $__ICE40_RAM4K_M0 cell at grid position <0 0 1>: RV32I.reg32.WORKREG.0.0.1
Creating $__ICE40_RAM4K_M0 cell at grid position <1 0 0>: RV32I.reg32.WORKREG.1.0.0
Creating $__ICE40_RAM4K_M0 cell at grid position <1 0 1>: RV32I.reg32.WORKREG.1.0.1

4.25. Executing TECHMAP pass (map to technology primitives).

4.25.1. Executing Verilog-2005 frontend: /home/jfdava/.apio/packages/toolchain-yosys/bin/../share/yosys/ice40/brams_map.v
Parsing Verilog input from `/home/jfdava/.apio/packages/toolchain-yosys/bin/../share/yosys/ice40/brams_map.v' to AST representation.
Generating RTLIL representation for module `\$__ICE40_RAM4K'.
Generating RTLIL representation for module `\$__ICE40_RAM4K_M0'.
Generating RTLIL representation for module `\$__ICE40_RAM4K_M123'.
Successfully finished Verilog frontend.

4.25.2. Continuing TECHMAP pass.
Using template $paramod$49da78f14376c226e3f73898b86349d2523b6092\$__ICE40_RAM4K_M123 for cells of type $__ICE40_RAM4K_M123.
Using template $paramod$a8aa7d12844ac8b0d870ac804d4149ae6f078986\$__ICE40_RAM4K_M123 for cells of type $__ICE40_RAM4K_M123.
Using template $paramod$e7da016e61eb174bc4a157898a70972884970ec1\$__ICE40_RAM4K_M123 for cells of type $__ICE40_RAM4K_M123.
Using template $paramod$6848f3359059f5598f1765e6b527c876a18fe714\$__ICE40_RAM4K_M0 for cells of type $__ICE40_RAM4K_M0.
Using template $paramod$8c9caa9c316a640b79d653050021d5a2b518ca58\$__ICE40_RAM4K_M123 for cells of type $__ICE40_RAM4K_M123.
Using template $paramod$8065e31cc199b6cff6b083f1ad4bbb23eb7038da\$__ICE40_RAM4K_M123 for cells of type $__ICE40_RAM4K_M123.
Using template $paramod$43e316d8c83333e77d3cda6acbe2e82aee4ba905\$__ICE40_RAM4K_M123 for cells of type $__ICE40_RAM4K_M123.
Using template $paramod$0e44341c6359cd699a4f2624e0c6abd2aaa97866\$__ICE40_RAM4K_M123 for cells of type $__ICE40_RAM4K_M123.
Using template $paramod$253ec975b63a5a47e1562e71285c7fdecc505f28\$__ICE40_RAM4K_M123 for cells of type $__ICE40_RAM4K_M123.
Using template $paramod$d39ff6d1e4c8175799ee3dc79aed312674933750\$__ICE40_RAM4K_M123 for cells of type $__ICE40_RAM4K_M123.
Using template $paramod$d7dc27f0be80a639292a2b7c5f939f4b572c8541\$__ICE40_RAM4K_M123 for cells of type $__ICE40_RAM4K_M123.
Using template $paramod$ef3795b17e30aa643d5036c6dfc722da236e6e25\$__ICE40_RAM4K_M123 for cells of type $__ICE40_RAM4K_M123.
Using template $paramod$04a91933b7c4f704d0da0f1a9143463ab94e1526\$__ICE40_RAM4K_M123 for cells of type $__ICE40_RAM4K_M123.
Using template $paramod$ef61f3b15c1b8a8796d63c7c136e0deeb92ae25a\$__ICE40_RAM4K_M123 for cells of type $__ICE40_RAM4K_M123.
Using template $paramod$1ea0f20111d0936fdb52ae728dd91e890aab8f17\$__ICE40_RAM4K_M123 for cells of type $__ICE40_RAM4K_M123.
Using template $paramod$e316530381baf3e4177deadcaaf0acb6f41e4f8d\$__ICE40_RAM4K_M123 for cells of type $__ICE40_RAM4K_M123.
Using template $paramod$b4fa3dd6f6d32c6c412d9a1a8f9680eb73d43084\$__ICE40_RAM4K_M123 for cells of type $__ICE40_RAM4K_M123.
Using template $paramod$5b3a546462178891c10942a5739f8be9ea8c9310\$__ICE40_RAM4K_M123 for cells of type $__ICE40_RAM4K_M123.
Using template $paramod$9efb18edb8de02bad1a7094f5e96d3699b439d6d\$__ICE40_RAM4K_M123 for cells of type $__ICE40_RAM4K_M123.
Using template $paramod$9c3de4fde3caf232a36174b45213ceae29494249\$__ICE40_RAM4K_M123 for cells of type $__ICE40_RAM4K_M123.
Using template $paramod$ad71a841cb7560dd185296d03b6e23729c25ddb1\$__ICE40_RAM4K_M123 for cells of type $__ICE40_RAM4K_M123.
Using template $paramod$c968b0013a165f3634e5c92d29081f0d392b5770\$__ICE40_RAM4K_M123 for cells of type $__ICE40_RAM4K_M123.
Using template $paramod$97cde197a967de7b4af14f3d3b27b3b7f2ff1eb3\$__ICE40_RAM4K_M123 for cells of type $__ICE40_RAM4K_M123.
Using template $paramod$c299441b407b39a3eed06ffb52e1d5f8b024d123\$__ICE40_RAM4K_M123 for cells of type $__ICE40_RAM4K_M123.
Using template $paramod$631aa3d8085982bec08e3c6462eb04a92cf6ea98\$__ICE40_RAM4K_M123 for cells of type $__ICE40_RAM4K_M123.
Using template $paramod$3cac6450a894b4e9da8ffe19af6571a02c73b999\$__ICE40_RAM4K_M123 for cells of type $__ICE40_RAM4K_M123.
Using template $paramod$bbe8445093f44dd5346ea54bfbfffb984fe06ac1\$__ICE40_RAM4K_M123 for cells of type $__ICE40_RAM4K_M123.
Using template $paramod$11e971eef5d171a268adb0d67074bada7e5847c6\$__ICE40_RAM4K_M123 for cells of type $__ICE40_RAM4K_M123.
Using template $paramod$0f1abeea0452129e2da1b5b4af3205daf6f62996\$__ICE40_RAM4K for cells of type $__ICE40_RAM4K.
Using template $paramod$fe63ec2ab6634e93d6eb73a2d422aa8c63752778\$__ICE40_RAM4K for cells of type $__ICE40_RAM4K.
Using template $paramod$6583422058d296b054b8f17a5973c9c276116928\$__ICE40_RAM4K for cells of type $__ICE40_RAM4K.
Using template $paramod$2d99f85ef83aa950a288ec9b60ddf3213e3287b1\$__ICE40_RAM4K for cells of type $__ICE40_RAM4K.
Using template $paramod$a99a0694763cb9c4bfe6aef49cb7fd96bc2d56a2\$__ICE40_RAM4K for cells of type $__ICE40_RAM4K.
Using template $paramod$19c8f5c5865cd3db63daf576d0474b888e1da522\$__ICE40_RAM4K for cells of type $__ICE40_RAM4K.
Using template $paramod$44870a8530cb3ab4e7642ea0523cbc6664165311\$__ICE40_RAM4K for cells of type $__ICE40_RAM4K.
Using template $paramod$bd5ae792e284658ab9479e6718256c6e5cbe74bd\$__ICE40_RAM4K for cells of type $__ICE40_RAM4K.
Using template $paramod$d9f430b26a8f802b8897ed6d8702c74f582ca96b\$__ICE40_RAM4K for cells of type $__ICE40_RAM4K.
Using template $paramod$d05de495dde6bb70860f9129064bfff9f6763c10\$__ICE40_RAM4K for cells of type $__ICE40_RAM4K.
Using template $paramod$622fc6a661b18ed5b926d36c52950e5152072fad\$__ICE40_RAM4K for cells of type $__ICE40_RAM4K.
Using template $paramod$dabb5c3961102dbebaf39564c774caa0adba5d45\$__ICE40_RAM4K for cells of type $__ICE40_RAM4K.
Using template $paramod$3f99c3a72696703ff7cfa334b2933aba4c8d0425\$__ICE40_RAM4K for cells of type $__ICE40_RAM4K.
Using template $paramod$44c3ede37ee5e397586e794c35ae8d78d8c226d5\$__ICE40_RAM4K for cells of type $__ICE40_RAM4K.
Using template $paramod$8fc1ea870b69862a705dbd6f2c96f45ccc7f768c\$__ICE40_RAM4K for cells of type $__ICE40_RAM4K.
Using template $paramod$48a496dfb2a3148cf50ade5fd1c59eda856af1e7\$__ICE40_RAM4K for cells of type $__ICE40_RAM4K.
Using template $paramod$54aab2e17318fee33c9f5f74decaf5df4782f578\$__ICE40_RAM4K for cells of type $__ICE40_RAM4K.
Using template $paramod$64e33e362b91afce25de47c67eff862b2a9b9eec\$__ICE40_RAM4K for cells of type $__ICE40_RAM4K.
Using template $paramod$019ddcf982d74081f554bd2465497fdf78ee4917\$__ICE40_RAM4K for cells of type $__ICE40_RAM4K.
Using template $paramod$3b62b2558518b799c357a045fad41a9b4cc26cca\$__ICE40_RAM4K for cells of type $__ICE40_RAM4K.
Using template $paramod$d58b47ffcfc063077771eab072f3ca381b742177\$__ICE40_RAM4K for cells of type $__ICE40_RAM4K.
Using template $paramod$1e99678737b2cd4ee98a7e5b173390505a9d3fc4\$__ICE40_RAM4K for cells of type $__ICE40_RAM4K.
Using template $paramod$902085627fd59a6b268dff8bd9ce895169f304f6\$__ICE40_RAM4K for cells of type $__ICE40_RAM4K.
Using template $paramod$8d1dd2c7d7f45163b6190bc987af418ed338ad34\$__ICE40_RAM4K for cells of type $__ICE40_RAM4K.
Using template $paramod$b03cd6bb204a56f8104ccd8441ff4f1d11137e7a\$__ICE40_RAM4K for cells of type $__ICE40_RAM4K.
Using template $paramod$84b3f69eba997ca69281cdead1cfd0c79b03fdd3\$__ICE40_RAM4K for cells of type $__ICE40_RAM4K.
Using template $paramod$2a28e4b01580b8da3604211d655b7a30cfba2b78\$__ICE40_RAM4K for cells of type $__ICE40_RAM4K.
Using template $paramod$a39408acb3a0fc515cdfe0eb701254c4be50fda9\$__ICE40_RAM4K for cells of type $__ICE40_RAM4K.
No more expansions possible.

4.26. Executing ICE40_BRAMINIT pass.

4.27. Executing OPT pass (performing simple optimizations).

4.27.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module SOCnexpo.

4.27.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\SOCnexpo'.
Removed a total of 3 cells.

4.27.3. Executing OPT_RMDFF pass (remove dff with constant values).

4.27.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \SOCnexpo..
Removed 2 unused cells and 890 unused wires.

4.27.5. Finished fast OPT passes.

4.28. Executing MEMORY_MAP pass (converting $mem cells to logic and flip-flops).

4.29. Executing OPT pass (performing simple optimizations).

4.29.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module SOCnexpo.

4.29.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\SOCnexpo'.
Removed a total of 0 cells.

4.29.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \SOCnexpo..
Creating internal representation of mux trees.
Evaluating internal representation of mux trees.
Analyzing evaluation results.
Removed 0 multiplexer ports.

4.29.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
Optimizing cells in module \SOCnexpo.
Consolidated identical input bits for $pmux cell $procmux$764:
Old ports: A=31'1100001011011000110111101001000, B=93'110111001110101010011010010000001000000010000001101111011001000000000000000000000000000000000, Y=\palabra
New ports: A=7'1011010, B=21'111010000111010000000, Y={ \palabra [18] \palabra [16] \palabra [8] \palabra [6:5] \palabra [3:2] }
New connections: { \palabra [30:19] \palabra [17] \palabra [15:9] \palabra [7] \palabra [4] \palabra [1:0] } = { \palabra [18] \palabra [8] 1'0 \palabra [16] \palabra [16] \palabra [16] \palabra [3] 1'0 \palabra [18] \palabra [8] \palabra [16] \palabra [3] 2'00 \palabra [8] \palabra [6] 1'0 \palabra [8] \palabra [8] \palabra [6] 4'0000 }
Consolidated identical input bits for $mux cell $techmap\RV32I.$procmux$1087:
Old ports: A={ \RV32I.FD_instr [31] \RV32I.FD_instr [31] \RV32I.FD_instr [31] \RV32I.FD_instr [31] \RV32I.FD_instr [31] \RV32I.FD_instr [31] \RV32I.FD_instr [31] \RV32I.FD_instr [31] \RV32I.FD_instr [31:20] }, B={ \RV32I.FD_instr [19:12] \RV32I.FD_instr [20] \RV32I.FD_instr [30:21] 1'0 }, Y=$techmap\RV32I.$procmux$1087_Y [19:0]
New ports: A={ \RV32I.FD_instr [31] \RV32I.FD_instr [31] \RV32I.FD_instr [31] \RV32I.FD_instr [31] \RV32I.FD_instr [31] \RV32I.FD_instr [31] \RV32I.FD_instr [31] \RV32I.FD_instr [31] \RV32I.FD_instr [31] \RV32I.FD_instr [20] }, B={ \RV32I.FD_instr [19:12] \RV32I.FD_instr [20] 1'0 }, Y={ $techmap\RV32I.$procmux$1087_Y [19:11] $techmap\RV32I.$procmux$1087_Y [0] }
New connections: $techmap\RV32I.$procmux$1087_Y [10:1] = \RV32I.FD_instr [30:21]
Consolidated identical input bits for $mux cell $techmap\RV32I.load.$ternary$Procesador_V2.0b/interfaz_mem.v:67$262:
Old ports: A={ \RV32I.load.signo_byte \RV32I.load.signo_byte \RV32I.load.signo_byte \RV32I.load.signo_byte \RV32I.load.signo_byte \RV32I.load.signo_byte \RV32I.load.signo_byte \RV32I.load.signo_byte \RV32I.load.signo_byte \RV32I.load.signo_byte \RV32I.load.signo_byte \RV32I.load.signo_byte \RV32I.load.signo_byte \RV32I.load.signo_byte \RV32I.load.signo_byte \RV32I.load.signo_byte \RV32I.load.signo_byte \RV32I.load.signo_byte \RV32I.load.signo_byte \RV32I.load.signo_byte \RV32I.load.signo_byte \RV32I.load.signo_byte \RV32I.load.signo_byte \RV32I.load.signo_byte \RV32I.load.data_byte }, B={ \RV32I.load.signo_half \RV32I.load.signo_half \RV32I.load.signo_half \RV32I.load.signo_half \RV32I.load.signo_half \RV32I.load.signo_half \RV32I.load.signo_half \RV32I.load.signo_half \RV32I.load.signo_half \RV32I.load.signo_half \RV32I.load.signo_half \RV32I.load.signo_half \RV32I.load.signo_half \RV32I.load.signo_half \RV32I.load.signo_half \RV32I.load.signo_half \RV32I.load.data_half }, Y=$techmap\RV32I.load.$ternary$Procesador_V2.0b/interfaz_mem.v:67$262_Y
New ports: A={ \RV32I.load.signo_byte \RV32I.load.signo_byte \RV32I.load.signo_byte \RV32I.load.signo_byte \RV32I.load.signo_byte \RV32I.load.signo_byte \RV32I.load.signo_byte \RV32I.load.signo_byte \RV32I.load.signo_byte \RV32I.load.data_byte }, B={ \RV32I.load.signo_half \RV32I.load.data_half }, Y=$techmap\RV32I.load.$ternary$Procesador_V2.0b/interfaz_mem.v:67$262_Y [16:0]
New connections: $techmap\RV32I.load.$ternary$Procesador_V2.0b/interfaz_mem.v:67$262_Y [31:17] = { $techmap\RV32I.load.$ternary$Procesador_V2.0b/interfaz_mem.v:67$262_Y [16] $techmap\RV32I.load.$ternary$Procesador_V2.0b/interfaz_mem.v:67$262_Y [16] $techmap\RV32I.load.$ternary$Procesador_V2.0b/interfaz_mem.v:67$262_Y [16] $techmap\RV32I.load.$ternary$Procesador_V2.0b/interfaz_mem.v:67$262_Y [16] $techmap\RV32I.load.$ternary$Procesador_V2.0b/interfaz_mem.v:67$262_Y [16] $techmap\RV32I.load.$ternary$Procesador_V2.0b/interfaz_mem.v:67$262_Y [16] $techmap\RV32I.load.$ternary$Procesador_V2.0b/interfaz_mem.v:67$262_Y [16] $techmap\RV32I.load.$ternary$Procesador_V2.0b/interfaz_mem.v:67$262_Y [16] $techmap\RV32I.load.$ternary$Procesador_V2.0b/interfaz_mem.v:67$262_Y [16] $techmap\RV32I.load.$ternary$Procesador_V2.0b/interfaz_mem.v:67$262_Y [16] $techmap\RV32I.load.$ternary$Procesador_V2.0b/interfaz_mem.v:67$262_Y [16] $techmap\RV32I.load.$ternary$Procesador_V2.0b/interfaz_mem.v:67$262_Y [16] $techmap\RV32I.load.$ternary$Procesador_V2.0b/interfaz_mem.v:67$262_Y [16] $techmap\RV32I.load.$ternary$Procesador_V2.0b/interfaz_mem.v:67$262_Y [16] $techmap\RV32I.load.$ternary$Procesador_V2.0b/interfaz_mem.v:67$262_Y [16] }
Consolidated identical input bits for $mux cell $techmap\RV32I.store.$ternary$Procesador_V2.0b/interfaz_mem.v:33$250:
Old ports: A=4'0011, B=4'1100, Y=$techmap\RV32I.store.$ternary$Procesador_V2.0b/interfaz_mem.v:33$250_Y
New ports: A=2'01, B=2'10, Y={ $techmap\RV32I.store.$ternary$Procesador_V2.0b/interfaz_mem.v:33$250_Y [2] $techmap\RV32I.store.$ternary$Procesador_V2.0b/interfaz_mem.v:33$250_Y [0] }
New connections: { $techmap\RV32I.store.$ternary$Procesador_V2.0b/interfaz_mem.v:33$250_Y [3] $techmap\RV32I.store.$ternary$Procesador_V2.0b/interfaz_mem.v:33$250_Y [1] } = { $techmap\RV32I.store.$ternary$Procesador_V2.0b/interfaz_mem.v:33$250_Y [2] $techmap\RV32I.store.$ternary$Procesador_V2.0b/interfaz_mem.v:33$250_Y [0] }
Consolidated identical input bits for $mux cell $techmap\RV32I.store.$ternary$Procesador_V2.0b/interfaz_mem.v:34$251:
Old ports: A=4'0100, B=4'1000, Y=$techmap\RV32I.store.$ternary$Procesador_V2.0b/interfaz_mem.v:34$251_Y
New ports: A=2'01, B=2'10, Y=$techmap\RV32I.store.$ternary$Procesador_V2.0b/interfaz_mem.v:34$251_Y [3:2]
New connections: $techmap\RV32I.store.$ternary$Procesador_V2.0b/interfaz_mem.v:34$251_Y [1:0] = 2'00
Consolidated identical input bits for $mux cell $ternary$SOCnexpoV8_.v:101$345:
Old ports: A=0, B={ 1'0 \palabra }, Y=$ternary$SOCnexpoV8_.v:101$345_Y
New ports: A=31'0000000000000000000000000000000, B=\palabra, Y=$ternary$SOCnexpoV8_.v:101$345_Y [30:0]
New connections: $ternary$SOCnexpoV8_.v:101$345_Y [31] = 1'0
Optimizing cells in module \SOCnexpo.
Consolidated identical input bits for $mux cell $techmap\RV32I.$procmux$1089:
Old ports: A=$techmap\RV32I.$procmux$1087_Y [19:0], B={ \RV32I.FD_instr [31] \RV32I.FD_instr [31] \RV32I.FD_instr [31] \RV32I.FD_instr [31] \RV32I.FD_instr [31] \RV32I.FD_instr [31] \RV32I.FD_instr [31] \RV32I.FD_instr [31] \RV32I.FD_instr [31:25] \RV32I.FD_instr [11:7] }, Y=$techmap\RV32I.$procmux$1089_Y [19:0]
New ports: A={ $techmap\RV32I.$procmux$1087_Y [19:11] \RV32I.FD_instr [24:21] $techmap\RV32I.$procmux$1087_Y [0] }, B={ \RV32I.FD_instr [31] \RV32I.FD_instr [31] \RV32I.FD_instr [31] \RV32I.FD_instr [31] \RV32I.FD_instr [31] \RV32I.FD_instr [31] \RV32I.FD_instr [31] \RV32I.FD_instr [31] \RV32I.FD_instr [31] \RV32I.FD_instr [11:7] }, Y={ $techmap\RV32I.$procmux$1089_Y [19:11] $techmap\RV32I.$procmux$1089_Y [4:0] }
New connections: $techmap\RV32I.$procmux$1089_Y [10:5] = \RV32I.FD_instr [30:25]
Consolidated identical input bits for $mux cell $ternary$SOCnexpoV8_.v:101$345:
Old ports: A=31'0000000000000000000000000000000, B=\palabra, Y=$ternary$SOCnexpoV8_.v:101$345_Y [30:0]
New ports: A=7'0000000, B={ \palabra [18] \palabra [16] \palabra [8] \palabra [6:5] \palabra [3:2] }, Y={ $ternary$SOCnexpoV8_.v:101$345_Y [18] $ternary$SOCnexpoV8_.v:101$345_Y [16] $ternary$SOCnexpoV8_.v:101$345_Y [8] $ternary$SOCnexpoV8_.v:101$345_Y [6:5] $ternary$SOCnexpoV8_.v:101$345_Y [3:2] }
New connections: { $ternary$SOCnexpoV8_.v:101$345_Y [30:19] $ternary$SOCnexpoV8_.v:101$345_Y [17] $ternary$SOCnexpoV8_.v:101$345_Y [15:9] $ternary$SOCnexpoV8_.v:101$345_Y [7] $ternary$SOCnexpoV8_.v:101$345_Y [4] $ternary$SOCnexpoV8_.v:101$345_Y [1:0] } = { $ternary$SOCnexpoV8_.v:101$345_Y [18] $ternary$SOCnexpoV8_.v:101$345_Y [8] 1'0 $ternary$SOCnexpoV8_.v:101$345_Y [16] $ternary$SOCnexpoV8_.v:101$345_Y [16] $ternary$SOCnexpoV8_.v:101$345_Y [16] $ternary$SOCnexpoV8_.v:101$345_Y [3] 1'0 $ternary$SOCnexpoV8_.v:101$345_Y [18] $ternary$SOCnexpoV8_.v:101$345_Y [8] $ternary$SOCnexpoV8_.v:101$345_Y [16] $ternary$SOCnexpoV8_.v:101$345_Y [3] 2'00 $ternary$SOCnexpoV8_.v:101$345_Y [8] $ternary$SOCnexpoV8_.v:101$345_Y [6] 1'0 $ternary$SOCnexpoV8_.v:101$345_Y [8] $ternary$SOCnexpoV8_.v:101$345_Y [8] $ternary$SOCnexpoV8_.v:101$345_Y [6] 4'0000 }
Consolidated identical input bits for $mux cell $ternary$SOCnexpoV8_.v:101$346:
Old ports: A=$ternary$SOCnexpoV8_.v:101$345_Y, B={ 23'00000000000000000000000 \tx_ready \UART_RX.data }, Y=$ternary$SOCnexpoV8_.v:101$346_Y
New ports: A=$ternary$SOCnexpoV8_.v:101$345_Y [30:0], B={ 22'0000000000000000000000 \tx_ready \UART_RX.data }, Y=$ternary$SOCnexpoV8_.v:101$346_Y [30:0]
New connections: $ternary$SOCnexpoV8_.v:101$346_Y [31] = 1'0
Optimizing cells in module \SOCnexpo.
Consolidated identical input bits for $mux cell $techmap\RV32I.$procmux$1091:
Old ports: A=$techmap\RV32I.$procmux$1089_Y [19:0], B={ \RV32I.FD_instr [31] \RV32I.FD_instr [31] \RV32I.FD_instr [31] \RV32I.FD_instr [31] \RV32I.FD_instr [31] \RV32I.FD_instr [31] \RV32I.FD_instr [31] \RV32I.FD_instr [31] \RV32I.FD_instr [7] \RV32I.FD_instr [30:25] \RV32I.FD_instr [11:8] 1'0 }, Y=$techmap\RV32I.$procmux$1091_Y [19:0]
New ports: A={ $techmap\RV32I.$procmux$1089_Y [19:11] $techmap\RV32I.$procmux$1089_Y [4:0] }, B={ \RV32I.FD_instr [31] \RV32I.FD_instr [31] \RV32I.FD_instr [31] \RV32I.FD_instr [31] \RV32I.FD_instr [31] \RV32I.FD_instr [31] \RV32I.FD_instr [31] \RV32I.FD_instr [31] \RV32I.FD_instr [7] \RV32I.FD_instr [11:8] 1'0 }, Y={ $techmap\RV32I.$procmux$1091_Y [19:11] $techmap\RV32I.$procmux$1091_Y [4:0] }
New connections: $techmap\RV32I.$procmux$1091_Y [10:5] = \RV32I.FD_instr [30:25]
Consolidated identical input bits for $mux cell $ternary$SOCnexpoV8_.v:101$346:
Old ports: A=$ternary$SOCnexpoV8_.v:101$345_Y [30:0], B={ 22'0000000000000000000000 \tx_ready \UART_RX.data }, Y=$ternary$SOCnexpoV8_.v:101$346_Y [30:0]
New ports: A={ $ternary$SOCnexpoV8_.v:101$345_Y [3] $ternary$SOCnexpoV8_.v:101$345_Y [18] $ternary$SOCnexpoV8_.v:101$345_Y [16] $ternary$SOCnexpoV8_.v:101$345_Y [8] $ternary$SOCnexpoV8_.v:101$345_Y [6] $ternary$SOCnexpoV8_.v:101$345_Y [8] 1'0 $ternary$SOCnexpoV8_.v:101$345_Y [6:5] 1'0 $ternary$SOCnexpoV8_.v:101$345_Y [3:2] 2'00 }, B={ 5'00000 \tx_ready \UART_RX.data }, Y={ $ternary$SOCnexpoV8_.v:101$346_Y [19:18] $ternary$SOCnexpoV8_.v:101$346_Y [16] $ternary$SOCnexpoV8_.v:101$346_Y [10:0] }
New connections: { $ternary$SOCnexpoV8_.v:101$346_Y [30:20] $ternary$SOCnexpoV8_.v:101$346_Y [17] $ternary$SOCnexpoV8_.v:101$346_Y [15:11] } = { $ternary$SOCnexpoV8_.v:101$346_Y [18] $ternary$SOCnexpoV8_.v:101$346_Y [10] 1'0 $ternary$SOCnexpoV8_.v:101$346_Y [16] $ternary$SOCnexpoV8_.v:101$346_Y [16] $ternary$SOCnexpoV8_.v:101$346_Y [16] $ternary$SOCnexpoV8_.v:101$346_Y [19] 1'0 $ternary$SOCnexpoV8_.v:101$346_Y [18] $ternary$SOCnexpoV8_.v:101$346_Y [10] $ternary$SOCnexpoV8_.v:101$346_Y [16] 2'00 $ternary$SOCnexpoV8_.v:101$346_Y [10:9] 1'0 $ternary$SOCnexpoV8_.v:101$346_Y [10] }
Consolidated identical input bits for $mux cell $ternary$SOCnexpoV8_.v:101$347:
Old ports: A=$ternary$SOCnexpoV8_.v:101$346_Y, B={ 31'0000000000000000000000000000000 \leds_en }, Y=$ternary$SOCnexpoV8_.v:101$347_Y
New ports: A=$ternary$SOCnexpoV8_.v:101$346_Y [30:0], B={ 30'000000000000000000000000000000 \leds_en }, Y=$ternary$SOCnexpoV8_.v:101$347_Y [30:0]
New connections: $ternary$SOCnexpoV8_.v:101$347_Y [31] = 1'0
Optimizing cells in module \SOCnexpo.
Consolidated identical input bits for $mux cell $ternary$SOCnexpoV8_.v:101$347:
Old ports: A=$ternary$SOCnexpoV8_.v:101$346_Y [30:0], B={ 30'000000000000000000000000000000 \leds_en }, Y=$ternary$SOCnexpoV8_.v:101$347_Y [30:0]
New ports: A={ $ternary$SOCnexpoV8_.v:101$346_Y [19:18] $ternary$SOCnexpoV8_.v:101$346_Y [16] $ternary$SOCnexpoV8_.v:101$346_Y [10:0] }, B={ 13'0000000000000 \leds_en }, Y={ $ternary$SOCnexpoV8_.v:101$347_Y [19:18] $ternary$SOCnexpoV8_.v:101$347_Y [16] $ternary$SOCnexpoV8_.v:101$347_Y [10:0] }
New connections: { $ternary$SOCnexpoV8_.v:101$347_Y [30:20] $ternary$SOCnexpoV8_.v:101$347_Y [17] $ternary$SOCnexpoV8_.v:101$347_Y [15:11] } = { $ternary$SOCnexpoV8_.v:101$347_Y [18] $ternary$SOCnexpoV8_.v:101$347_Y [10] 1'0 $ternary$SOCnexpoV8_.v:101$347_Y [16] $ternary$SOCnexpoV8_.v:101$347_Y [16] $ternary$SOCnexpoV8_.v:101$347_Y [16] $ternary$SOCnexpoV8_.v:101$347_Y [19] 1'0 $ternary$SOCnexpoV8_.v:101$347_Y [18] $ternary$SOCnexpoV8_.v:101$347_Y [10] $ternary$SOCnexpoV8_.v:101$347_Y [16] 2'00 $ternary$SOCnexpoV8_.v:101$347_Y [10:9] 1'0 $ternary$SOCnexpoV8_.v:101$347_Y [10] }
Optimizing cells in module \SOCnexpo.
Performed a total of 13 changes.

4.29.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\SOCnexpo'.
Removed a total of 1 cells.

4.29.6. Executing OPT_RMDFF pass (remove dff with constant values).

4.29.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \SOCnexpo..
Removed 0 unused cells and 1 unused wires.

4.29.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module SOCnexpo.

4.29.9. Rerunning OPT passes. (Maybe there is more to do..)

4.29.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \SOCnexpo..
Creating internal representation of mux trees.
Evaluating internal representation of mux trees.
Analyzing evaluation results.
Removed 0 multiplexer ports.

4.29.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
Optimizing cells in module \SOCnexpo.
Performed a total of 0 changes.

4.29.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\SOCnexpo'.
Removed a total of 0 cells.

4.29.13. Executing OPT_RMDFF pass (remove dff with constant values).

4.29.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \SOCnexpo..

4.29.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module SOCnexpo.

4.29.16. Finished OPT passes. (There is nothing left to do.)

4.30. Executing ICE40_WRAPCARRY pass (wrap carries).

4.31. Executing TECHMAP pass (map to technology primitives).

4.31.1. Executing Verilog-2005 frontend: /home/jfdava/.apio/packages/toolchain-yosys/bin/../share/yosys/techmap.v
Parsing Verilog input from `/home/jfdava/.apio/packages/toolchain-yosys/bin/../share/yosys/techmap.v' to AST representation.
Generating RTLIL representation for module `\_90_simplemap_bool_ops'.
Generating RTLIL representation for module `\_90_simplemap_reduce_ops'.
Generating RTLIL representation for module `\_90_simplemap_logic_ops'.
Generating RTLIL representation for module `\_90_simplemap_compare_ops'.
Generating RTLIL representation for module `\_90_simplemap_various'.
Generating RTLIL representation for module `\_90_simplemap_registers'.
Generating RTLIL representation for module `\_90_shift_ops_shr_shl_sshl_sshr'.
Generating RTLIL representation for module `\_90_shift_shiftx'.
Generating RTLIL representation for module `\_90_fa'.
Generating RTLIL representation for module `\_90_lcu'.
Generating RTLIL representation for module `\_90_alu'.
Generating RTLIL representation for module `\_90_macc'.
Generating RTLIL representation for module `\_90_alumacc'.
Generating RTLIL representation for module `\$__div_mod_u'.
Generating RTLIL representation for module `\$__div_mod'.
Generating RTLIL representation for module `\_90_div'.
Generating RTLIL representation for module `\_90_mod'.
Generating RTLIL representation for module `\_90_pow'.
Generating RTLIL representation for module `\_90_pmux'.
Generating RTLIL representation for module `\_90_lut'.
Successfully finished Verilog frontend.

4.31.2. Executing Verilog-2005 frontend: /home/jfdava/.apio/packages/toolchain-yosys/bin/../share/yosys/ice40/arith_map.v
Parsing Verilog input from `/home/jfdava/.apio/packages/toolchain-yosys/bin/../share/yosys/ice40/arith_map.v' to AST representation.
Generating RTLIL representation for module `\_80_ice40_alu'.
Successfully finished Verilog frontend.

4.31.3. Continuing TECHMAP pass.
Using template $paramod\_80_ice40_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=1\B_WIDTH=12\Y_WIDTH=12 for cells of type $alu.
Using extmapper simplemap for cells of type $eq.
Using extmapper simplemap for cells of type $logic_not.
Using extmapper simplemap for cells of type $and.
Using extmapper simplemap for cells of type $not.
Using extmapper simplemap for cells of type $mux.
Using template $paramod\_90_pmux\WIDTH=7\S_WIDTH=3 for cells of type $pmux.
Using extmapper simplemap for cells of type $dff.
Using template $paramod\_80_ice40_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=6\B_WIDTH=7\Y_WIDTH=7 for cells of type $alu.
Using extmapper simplemap for cells of type $or.
Using extmapper simplemap for cells of type $reduce_and.
Using extmapper simplemap for cells of type $reduce_or.
Using template $paramod\_90_pmux\WIDTH=32\S_WIDTH=5 for cells of type $pmux.
Using template $paramod\_80_ice40_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=1\B_WIDTH=7\Y_WIDTH=7 for cells of type $alu.
Using template $paramod\_80_ice40_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=1\B_WIDTH=64\Y_WIDTH=64 for cells of type $alu.
Using extmapper simplemap for cells of type $logic_or.
Using extmapper simplemap for cells of type $logic_and.
Using template $paramod\_80_ice40_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=32\B_WIDTH=32\Y_WIDTH=32 for cells of type $alu.
Using template $paramod\_90_pmux\WIDTH=4\S_WIDTH=3 for cells of type $pmux.
Using template $paramod\_90_pmux\WIDTH=8\S_WIDTH=3 for cells of type $pmux.
Using template $paramod\_80_ice40_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=1\B_WIDTH=8\Y_WIDTH=8 for cells of type $alu.
Using template $paramod\_80_ice40_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=1\B_WIDTH=30\Y_WIDTH=30 for cells of type $alu.
Using template $paramod\_80_ice40_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=7\B_WIDTH=10\Y_WIDTH=10 for cells of type $alu.
Using template $paramod\_80_ice40_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=1\B_WIDTH=5\Y_WIDTH=5 for cells of type $alu.
Using extmapper simplemap for cells of type $xor.
Using template $paramod$constmap:87f69c0bea22f84de4bcd0314b57cb19e61b5eb7$paramod$88abf4b792300efa328894e6936be740fdc22f6d\_90_shift_ops_shr_shl_sshl_sshr for cells of type $sshr.
Using template $paramod$constmap:1b6115d36d46c0296d0024e3e3623593810ba834$paramod$2c522b46cc21505f45a595eaa4706e490799228e\_90_shift_ops_shr_shl_sshl_sshr for cells of type $shl.
Using template $paramod\_80_ice40_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=32\B_WIDTH=33\Y_WIDTH=33 for cells of type $alu.
Using template $paramod\_80_ice40_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=1\B_WIDTH=4\Y_WIDTH=4 for cells of type $alu.
Using extmapper simplemap for cells of type $pos.
No more expansions possible.

4.32. Executing ICE40_OPT pass (performing simple optimizations).

4.32.1. Running ICE40 specific optimizations.

4.32.2. Executing OPT_EXPR pass (perform const folding).
Optimizing module SOCnexpo.

4.32.3. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\SOCnexpo'.
Removed a total of 209 cells.

4.32.4. Executing OPT_RMDFF pass (remove dff with constant values).

4.32.5. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \SOCnexpo..
Removed 331 unused cells and 491 unused wires.

4.32.6. Rerunning OPT passes. (Removed registers in this run.)

4.32.7. Running ICE40 specific optimizations.
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) SOCnexpo.$auto$alumacc.cc:485:replace_alu$1379.slice[0].carry: CO=$auto$alumacc.cc:485:replace_alu$1379.BB [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) SOCnexpo.$auto$alumacc.cc:485:replace_alu$1390.slice[0].carry: CO=$auto$alumacc.cc:485:replace_alu$1390.BB [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) SOCnexpo.$auto$alumacc.cc:485:replace_alu$1403.slice[0].carry: CO=\Espera [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) SOCnexpo.$auto$alumacc.cc:485:replace_alu$1406.slice[0].carry: CO=\LEDS8_4.timer [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) SOCnexpo.$auto$alumacc.cc:485:replace_alu$1409.slice[0].carry: CO=\RV32I.F_pc [2]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) SOCnexpo.$auto$alumacc.cc:485:replace_alu$1415.slice[0].carry: CO=\RV32I.cycle [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) SOCnexpo.$auto$alumacc.cc:485:replace_alu$1421.slice[0].carry: CO=\UART_TX.bclk.divcounter [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) SOCnexpo.$auto$alumacc.cc:485:replace_alu$1424.slice[32].carry: CO=$auto$alumacc.cc:485:replace_alu$1424.C [32]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) SOCnexpo.$auto$alumacc.cc:485:replace_alu$1430.slice[0].carry: CO=\UART_RX.div2counter [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) SOCnexpo.$auto$alumacc.cc:485:replace_alu$1433.slice[0].carry: CO=\UART_RX.cont [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) SOCnexpo.$auto$alumacc.cc:485:replace_alu$1436.slice[0].carry: CO=\UART_RX.bclk.divcounter [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) SOCnexpo.$auto$alumacc.cc:485:replace_alu$1439.slice[0].carry: CO=\UART_TX.bits [0]

4.32.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module SOCnexpo.

4.32.9. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\SOCnexpo'.
Removed a total of 0 cells.

4.32.10. Executing OPT_RMDFF pass (remove dff with constant values).

4.32.11. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \SOCnexpo..
Removed 2 unused cells and 1 unused wires.

4.32.12. Rerunning OPT passes. (Removed registers in this run.)

4.32.13. Running ICE40 specific optimizations.

4.32.14. Executing OPT_EXPR pass (perform const folding).
Optimizing module SOCnexpo.

4.32.15. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\SOCnexpo'.
Removed a total of 0 cells.

4.32.16. Executing OPT_RMDFF pass (remove dff with constant values).

4.32.17. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \SOCnexpo..

4.32.18. Finished OPT passes. (There is nothing left to do.)

4.33. Executing DFFSR2DFF pass (mapping DFFSR cells to simpler FFs).

4.34. Executing DFF2DFFE pass (transform $dff to $dffe where applicable).
Selected cell types for direct conversion:
$_DFF_PP1_ -> $__DFFE_PP1
$_DFF_PP0_ -> $__DFFE_PP0
$_DFF_PN1_ -> $__DFFE_PN1
$_DFF_PN0_ -> $__DFFE_PN0
$_DFF_NP1_ -> $__DFFE_NP1
$_DFF_NP0_ -> $__DFFE_NP0
$_DFF_NN1_ -> $__DFFE_NN1
$_DFF_NN0_ -> $__DFFE_NN0
$_DFF_N_ -> $_DFFE_NP_
$_DFF_P_ -> $_DFFE_PP_
Transforming FF to FF+Enable cells in module SOCnexpo:
converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2084 to $_DFFE_PP_ for $0\tx_ready[0:0] -> \tx_ready.
converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2085 to $_DFFE_PP_ for $0\leds_en[0:0] -> \leds_en.
converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2086 to $_DFFE_PP_ for $0\leds1[7:0] [0] -> \leds1 [0].
converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2087 to $_DFFE_PP_ for $0\leds1[7:0] [1] -> \leds1 [1].
converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2088 to $_DFFE_PP_ for $0\leds1[7:0] [2] -> \leds1 [2].
converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2089 to $_DFFE_PP_ for $0\leds1[7:0] [3] -> \leds1 [3].
converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2090 to $_DFFE_PP_ for $0\leds1[7:0] [4] -> \leds1 [4].
converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2091 to $_DFFE_PP_ for $0\leds1[7:0] [5] -> \leds1 [5].
converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2092 to $_DFFE_PP_ for $0\leds1[7:0] [6] -> \leds1 [6].
converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2093 to $_DFFE_PP_ for $0\leds1[7:0] [7] -> \leds1 [7].
converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2094 to $_DFFE_PP_ for $0\leds2[7:0] [0] -> \leds2 [0].
converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2095 to $_DFFE_PP_ for $0\leds2[7:0] [1] -> \leds2 [1].
converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2096 to $_DFFE_PP_ for $0\leds2[7:0] [2] -> \leds2 [2].
converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2097 to $_DFFE_PP_ for $0\leds2[7:0] [3] -> \leds2 [3].
converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2098 to $_DFFE_PP_ for $0\leds2[7:0] [4] -> \leds2 [4].
converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2099 to $_DFFE_PP_ for $0\leds2[7:0] [5] -> \leds2 [5].
converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2100 to $_DFFE_PP_ for $0\leds2[7:0] [6] -> \leds2 [6].
converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2101 to $_DFFE_PP_ for $0\leds2[7:0] [7] -> \leds2 [7].
converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2102 to $_DFFE_PP_ for $0\leds3[7:0] [0] -> \leds3 [0].
converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2103 to $_DFFE_PP_ for $0\leds3[7:0] [1] -> \leds3 [1].
converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2104 to $_DFFE_PP_ for $0\leds3[7:0] [2] -> \leds3 [2].
converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2105 to $_DFFE_PP_ for $0\leds3[7:0] [3] -> \leds3 [3].
converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2106 to $_DFFE_PP_ for $0\leds3[7:0] [4] -> \leds3 [4].
converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2107 to $_DFFE_PP_ for $0\leds3[7:0] [5] -> \leds3 [5].
converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2108 to $_DFFE_PP_ for $0\leds3[7:0] [6] -> \leds3 [6].
converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2109 to $_DFFE_PP_ for $0\leds3[7:0] [7] -> \leds3 [7].
converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2110 to $_DFFE_PP_ for $0\leds4[7:0] [0] -> \leds4 [0].
converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2111 to $_DFFE_PP_ for $0\leds4[7:0] [1] -> \leds4 [1].
converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2112 to $_DFFE_PP_ for $0\leds4[7:0] [2] -> \leds4 [2].
converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2113 to $_DFFE_PP_ for $0\leds4[7:0] [3] -> \leds4 [3].
converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2114 to $_DFFE_PP_ for $0\leds4[7:0] [4] -> \leds4 [4].
converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2115 to $_DFFE_PP_ for $0\leds4[7:0] [5] -> \leds4 [5].
converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2116 to $_DFFE_PP_ for $0\leds4[7:0] [6] -> \leds4 [6].
converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2117 to $_DFFE_PP_ for $0\leds4[7:0] [7] -> \leds4 [7].
converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2118 to $_DFFE_PP_ for $0\rst[0:0] -> \rst.
converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2165 to $_DFFE_PP_ for $techmap\RV32I.$0\F_pc[31:0] [0] -> \RV32I.F_pc [0].
converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2166 to $_DFFE_PP_ for $techmap\RV32I.$0\F_pc[31:0] [1] -> \RV32I.F_pc [1].
converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2456 to $_DFFE_PP_ for $techmap\RV32I.$0\PWM_[31:0] [0] -> \RV32I.PWM_ [0].
converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2457 to $_DFFE_PP_ for $techmap\RV32I.$0\PWM_[31:0] [1] -> \RV32I.PWM_ [1].
converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2458 to $_DFFE_PP_ for $techmap\RV32I.$0\PWM_[31:0] [2] -> \RV32I.PWM_ [2].
converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2459 to $_DFFE_PP_ for $techmap\RV32I.$0\PWM_[31:0] [3] -> \RV32I.PWM_ [3].
converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2460 to $_DFFE_PP_ for $techmap\RV32I.$0\PWM_[31:0] [4] -> \RV32I.PWM_ [4].
converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2461 to $_DFFE_PP_ for $techmap\RV32I.$0\PWM_[31:0] [5] -> \RV32I.PWM_ [5].
converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2462 to $_DFFE_PP_ for $techmap\RV32I.$0\PWM_[31:0] [6] -> \RV32I.PWM_ [6].
converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2463 to $_DFFE_PP_ for $techmap\RV32I.$0\PWM_[31:0] [7] -> \RV32I.PWM_ [7].
converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2464 to $_DFFE_PP_ for $techmap\RV32I.$0\PWM_[31:0] [8] -> \RV32I.PWM_ [8].
converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2465 to $_DFFE_PP_ for $techmap\RV32I.$0\PWM_[31:0] [9] -> \RV32I.PWM_ [9].
converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2466 to $_DFFE_PP_ for $techmap\RV32I.$0\PWM_[31:0] [10] -> \RV32I.PWM_ [10].
converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2467 to $_DFFE_PP_ for $techmap\RV32I.$0\PWM_[31:0] [11] -> \RV32I.PWM_ [11].
converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2468 to $_DFFE_PP_ for $techmap\RV32I.$0\PWM_[31:0] [12] -> \RV32I.PWM_ [12].
converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2469 to $_DFFE_PP_ for $techmap\RV32I.$0\PWM_[31:0] [13] -> \RV32I.PWM_ [13].
converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2470 to $_DFFE_PP_ for $techmap\RV32I.$0\PWM_[31:0] [14] -> \RV32I.PWM_ [14].
converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2471 to $_DFFE_PP_ for $techmap\RV32I.$0\PWM_[31:0] [15] -> \RV32I.PWM_ [15].
converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2472 to $_DFFE_PP_ for $techmap\RV32I.$0\PWM_[31:0] [16] -> \RV32I.PWM_ [16].
converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2473 to $_DFFE_PP_ for $techmap\RV32I.$0\PWM_[31:0] [17] -> \RV32I.PWM_ [17].
converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2474 to $_DFFE_PP_ for $techmap\RV32I.$0\PWM_[31:0] [18] -> \RV32I.PWM_ [18].
converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2475 to $_DFFE_PP_ for $techmap\RV32I.$0\PWM_[31:0] [19] -> \RV32I.PWM_ [19].
converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2476 to $_DFFE_PP_ for $techmap\RV32I.$0\PWM_[31:0] [20] -> \RV32I.PWM_ [20].
converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2477 to $_DFFE_PP_ for $techmap\RV32I.$0\PWM_[31:0] [21] -> \RV32I.PWM_ [21].
converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2478 to $_DFFE_PP_ for $techmap\RV32I.$0\PWM_[31:0] [22] -> \RV32I.PWM_ [22].
converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2479 to $_DFFE_PP_ for $techmap\RV32I.$0\PWM_[31:0] [23] -> \RV32I.PWM_ [23].
converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2480 to $_DFFE_PP_ for $techmap\RV32I.$0\PWM_[31:0] [24] -> \RV32I.PWM_ [24].
converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2481 to $_DFFE_PP_ for $techmap\RV32I.$0\PWM_[31:0] [25] -> \RV32I.PWM_ [25].
converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2482 to $_DFFE_PP_ for $techmap\RV32I.$0\PWM_[31:0] [26] -> \RV32I.PWM_ [26].
converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2483 to $_DFFE_PP_ for $techmap\RV32I.$0\PWM_[31:0] [27] -> \RV32I.PWM_ [27].
converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2484 to $_DFFE_PP_ for $techmap\RV32I.$0\PWM_[31:0] [28] -> \RV32I.PWM_ [28].
converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2485 to $_DFFE_PP_ for $techmap\RV32I.$0\PWM_[31:0] [29] -> \RV32I.PWM_ [29].
converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2486 to $_DFFE_PP_ for $techmap\RV32I.$0\PWM_[31:0] [30] -> \RV32I.PWM_ [30].
converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2487 to $_DFFE_PP_ for $techmap\RV32I.$0\PWM_[31:0] [31] -> \RV32I.PWM_ [31].
converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4249 to $_DFFE_PP_ for $techmap\UART_TX.$0\state[0:0] -> \UART_TX.state.
converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4250 to $_DFFE_PP_ for $techmap\UART_TX.$0\q[8:0] [0] -> \UART_TX.q [0].
converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4251 to $_DFFE_PP_ for $techmap\UART_TX.$0\q[8:0] [1] -> \UART_TX.q [1].
converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4252 to $_DFFE_PP_ for $techmap\UART_TX.$0\q[8:0] [2] -> \UART_TX.q [2].
converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4253 to $_DFFE_PP_ for $techmap\UART_TX.$0\q[8:0] [3] -> \UART_TX.q [3].
converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4254 to $_DFFE_PP_ for $techmap\UART_TX.$0\q[8:0] [4] -> \UART_TX.q [4].
converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4255 to $_DFFE_PP_ for $techmap\UART_TX.$0\q[8:0] [5] -> \UART_TX.q [5].
converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4256 to $_DFFE_PP_ for $techmap\UART_TX.$0\q[8:0] [6] -> \UART_TX.q [6].
converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4257 to $_DFFE_PP_ for $techmap\UART_TX.$0\q[8:0] [7] -> \UART_TX.q [7].
converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4258 to $_DFFE_PP_ for $techmap\UART_TX.$0\q[8:0] [8] -> \UART_TX.q [8].
converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4260 to $_DFFE_PP_ for $techmap\UART_TX.$0\bits[3:0] [0] -> \UART_TX.bits [0].
converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4261 to $_DFFE_PP_ for $techmap\UART_TX.$0\bits[3:0] [1] -> \UART_TX.bits [1].
converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4262 to $_DFFE_PP_ for $techmap\UART_TX.$0\bits[3:0] [2] -> \UART_TX.bits [2].
converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4263 to $_DFFE_PP_ for $techmap\UART_TX.$0\bits[3:0] [3] -> \UART_TX.bits [3].
converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4313 to $_DFFE_PP_ for $techmap\UART_RX.$0\state[0:0] -> \UART_RX.state.
converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4314 to $_DFFE_PP_ for $techmap\UART_RX.$0\div2counter[6:0] [0] -> \UART_RX.div2counter [0].
converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4315 to $_DFFE_PP_ for $techmap\UART_RX.$0\div2counter[6:0] [1] -> \UART_RX.div2counter [1].
converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4316 to $_DFFE_PP_ for $techmap\UART_RX.$0\div2counter[6:0] [2] -> \UART_RX.div2counter [2].
converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4317 to $_DFFE_PP_ for $techmap\UART_RX.$0\div2counter[6:0] [3] -> \UART_RX.div2counter [3].
converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4318 to $_DFFE_PP_ for $techmap\UART_RX.$0\div2counter[6:0] [4] -> \UART_RX.div2counter [4].
converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4319 to $_DFFE_PP_ for $techmap\UART_RX.$0\div2counter[6:0] [5] -> \UART_RX.div2counter [5].
converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4320 to $_DFFE_PP_ for $techmap\UART_RX.$0\div2counter[6:0] [6] -> \UART_RX.div2counter [6].
converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4321 to $_DFFE_PP_ for $techmap\UART_RX.$0\sr[8:0] [0] -> \UART_RX.sr [0].
converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4322 to $_DFFE_PP_ for $techmap\UART_RX.$0\sr[8:0] [1] -> \UART_RX.sr [1].
converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4323 to $_DFFE_PP_ for $techmap\UART_RX.$0\sr[8:0] [2] -> \UART_RX.sr [2].
converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4324 to $_DFFE_PP_ for $techmap\UART_RX.$0\sr[8:0] [3] -> \UART_RX.sr [3].
converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4325 to $_DFFE_PP_ for $techmap\UART_RX.$0\sr[8:0] [4] -> \UART_RX.sr [4].
converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4326 to $_DFFE_PP_ for $techmap\UART_RX.$0\sr[8:0] [5] -> \UART_RX.sr [5].
converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4327 to $_DFFE_PP_ for $techmap\UART_RX.$0\sr[8:0] [6] -> \UART_RX.sr [6].
converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4328 to $_DFFE_PP_ for $techmap\UART_RX.$0\sr[8:0] [7] -> \UART_RX.sr [7].
converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4329 to $_DFFE_PP_ for $techmap\UART_RX.$0\sr[8:0] [8] -> \UART_RX.sr [8].
converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4330 to $_DFFE_PP_ for $techmap\UART_RX.$0\cont[4:0] [0] -> \UART_RX.cont [0].
converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4331 to $_DFFE_PP_ for $techmap\UART_RX.$0\cont[4:0] [1] -> \UART_RX.cont [1].
converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4332 to $_DFFE_PP_ for $techmap\UART_RX.$0\cont[4:0] [2] -> \UART_RX.cont [2].
converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4333 to $_DFFE_PP_ for $techmap\UART_RX.$0\cont[4:0] [3] -> \UART_RX.cont [3].
converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4334 to $_DFFE_PP_ for $techmap\UART_RX.$0\cont[4:0] [4] -> \UART_RX.cont [4].
converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4335 to $_DFFE_PP_ for $techmap\UART_RX.$0\data[7:0] [0] -> \UART_RX.data [0].
converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4336 to $_DFFE_PP_ for $techmap\UART_RX.$0\data[7:0] [1] -> \UART_RX.data [1].
converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4337 to $_DFFE_PP_ for $techmap\UART_RX.$0\data[7:0] [2] -> \UART_RX.data [2].
converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4338 to $_DFFE_PP_ for $techmap\UART_RX.$0\data[7:0] [3] -> \UART_RX.data [3].
converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4339 to $_DFFE_PP_ for $techmap\UART_RX.$0\data[7:0] [4] -> \UART_RX.data [4].
converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4340 to $_DFFE_PP_ for $techmap\UART_RX.$0\data[7:0] [5] -> \UART_RX.data [5].
converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4341 to $_DFFE_PP_ for $techmap\UART_RX.$0\data[7:0] [6] -> \UART_RX.data [6].
converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4342 to $_DFFE_PP_ for $techmap\UART_RX.$0\data[7:0] [7] -> \UART_RX.data [7].

4.35. Executing TECHMAP pass (map to technology primitives).

4.35.1. Executing Verilog-2005 frontend: /home/jfdava/.apio/packages/toolchain-yosys/bin/../share/yosys/ice40/cells_map.v
Parsing Verilog input from `/home/jfdava/.apio/packages/toolchain-yosys/bin/../share/yosys/ice40/cells_map.v' to AST representation.
Generating RTLIL representation for module `\$_DFF_N_'.
Generating RTLIL representation for module `\$_DFF_P_'.
Generating RTLIL representation for module `\$_DFFE_NN_'.
Generating RTLIL representation for module `\$_DFFE_PN_'.
Generating RTLIL representation for module `\$_DFFE_NP_'.
Generating RTLIL representation for module `\$_DFFE_PP_'.
Generating RTLIL representation for module `\$_DFF_NN0_'.
Generating RTLIL representation for module `\$_DFF_NN1_'.
Generating RTLIL representation for module `\$_DFF_PN0_'.
Generating RTLIL representation for module `\$_DFF_PN1_'.
Generating RTLIL representation for module `\$_DFF_NP0_'.
Generating RTLIL representation for module `\$_DFF_NP1_'.
Generating RTLIL representation for module `\$_DFF_PP0_'.
Generating RTLIL representation for module `\$_DFF_PP1_'.
Generating RTLIL representation for module `\$__DFFE_NN0'.
Generating RTLIL representation for module `\$__DFFE_NN1'.
Generating RTLIL representation for module `\$__DFFE_PN0'.
Generating RTLIL representation for module `\$__DFFE_PN1'.
Generating RTLIL representation for module `\$__DFFE_NP0'.
Generating RTLIL representation for module `\$__DFFE_NP1'.
Generating RTLIL representation for module `\$__DFFE_PP0'.
Generating RTLIL representation for module `\$__DFFE_PP1'.
Successfully finished Verilog frontend.

4.35.2. Continuing TECHMAP pass.
Using template \$_DFF_P_ for cells of type $_DFF_P_.
Using template \$_DFFE_PP_ for cells of type $_DFFE_PP_.
No more expansions possible.

4.36. Executing OPT_EXPR pass (perform const folding).
Optimizing module SOCnexpo.

4.37. Executing SIMPLEMAP pass (map simple cells to gate primitives).
Mapping SOCnexpo.$auto$alumacc.cc:485:replace_alu$1403.slice[0].carry ($lut).
Mapping SOCnexpo.$auto$alumacc.cc:485:replace_alu$1406.slice[0].carry ($lut).
Mapping SOCnexpo.$auto$alumacc.cc:485:replace_alu$1409.slice[0].carry ($lut).
Mapping SOCnexpo.$auto$alumacc.cc:485:replace_alu$1415.slice[0].carry ($lut).
Mapping SOCnexpo.$auto$alumacc.cc:485:replace_alu$1421.slice[0].carry ($lut).
Mapping SOCnexpo.$auto$alumacc.cc:485:replace_alu$1424.slice[32].carry ($lut).
Mapping SOCnexpo.$auto$alumacc.cc:485:replace_alu$1430.slice[0].carry ($lut).
Mapping SOCnexpo.$auto$alumacc.cc:485:replace_alu$1433.slice[0].carry ($lut).
Mapping SOCnexpo.$auto$alumacc.cc:485:replace_alu$1436.slice[0].carry ($lut).
Mapping SOCnexpo.$auto$alumacc.cc:485:replace_alu$1439.slice[0].carry ($lut).

4.38. Executing ICE40_FFINIT pass (implement FF init values).
Handling FF init values in SOCnexpo.
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5874 (SB_DFF): \UART_RX.bclk.divcounter [6] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2085 (SB_DFFE): \leds_en = 1
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2120 (SB_DFF): \Espera [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4108 (SB_DFF): \LEDS8_4.timer [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4257 (SB_DFFE): \UART_TX.q [7] = 1
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2121 (SB_DFF): \Espera [2] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2126 (SB_DFF): \Espera [7] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2124 (SB_DFF): \Espera [5] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2122 (SB_DFF): \Espera [3] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2125 (SB_DFF): \Espera [6] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2134 (SB_DFF): \RV32I.FD_pc [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2135 (SB_DFF): \RV32I.FD_pc [2] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4335 (SB_DFFE): \UART_RX.data [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2146 (SB_DFF): \RV32I.FD_pc [13] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2173 (SB_DFF): \RV32I.F_pc [8] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2138 (SB_DFF): \RV32I.FD_pc [5] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2147 (SB_DFF): \RV32I.FD_pc [14] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2133 (SB_DFF): \RV32I.FD_pc [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2187 (SB_DFF): \RV32I.F_pc [22] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2174 (SB_DFF): \RV32I.F_pc [9] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2181 (SB_DFF): \RV32I.F_pc [16] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2141 (SB_DFF): \RV32I.FD_pc [8] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2168 (SB_DFF): \RV32I.F_pc [3] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2188 (SB_DFF): \RV32I.F_pc [23] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2186 (SB_DFF): \RV32I.F_pc [21] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2185 (SB_DFF): \RV32I.F_pc [20] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2183 (SB_DFF): \RV32I.F_pc [18] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2182 (SB_DFF): \RV32I.F_pc [17] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2180 (SB_DFF): \RV32I.F_pc [15] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2184 (SB_DFF): \RV32I.F_pc [19] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2179 (SB_DFF): \RV32I.F_pc [14] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2178 (SB_DFF): \RV32I.F_pc [13] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2167 (SB_DFF): \RV32I.F_pc [2] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2177 (SB_DFF): \RV32I.F_pc [12] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2176 (SB_DFF): \RV32I.F_pc [11] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2189 (SB_DFF): \RV32I.F_pc [24] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2165 (SB_DFFE): \RV32I.F_pc [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2192 (SB_DFF): \RV32I.F_pc [27] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2191 (SB_DFF): \RV32I.F_pc [26] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2145 (SB_DFF): \RV32I.FD_pc [12] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2118 (SB_DFFE): \rst = 1
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2123 (SB_DFF): \Espera [4] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2190 (SB_DFF): \RV32I.F_pc [25] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2143 (SB_DFF): \RV32I.FD_pc [10] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2144 (SB_DFF): \RV32I.FD_pc [11] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2149 (SB_DFF): \RV32I.FD_pc [16] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2150 (SB_DFF): \RV32I.FD_pc [17] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2151 (SB_DFF): \RV32I.FD_pc [18] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2152 (SB_DFF): \RV32I.FD_pc [19] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2153 (SB_DFF): \RV32I.FD_pc [20] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2154 (SB_DFF): \RV32I.FD_pc [21] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2155 (SB_DFF): \RV32I.FD_pc [22] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2156 (SB_DFF): \RV32I.FD_pc [23] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2157 (SB_DFF): \RV32I.FD_pc [24] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2158 (SB_DFF): \RV32I.FD_pc [25] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2159 (SB_DFF): \RV32I.FD_pc [26] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2160 (SB_DFF): \RV32I.FD_pc [27] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2161 (SB_DFF): \RV32I.FD_pc [28] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2162 (SB_DFF): \RV32I.FD_pc [29] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2163 (SB_DFF): \RV32I.FD_pc [30] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2164 (SB_DFF): \RV32I.FD_pc [31] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2193 (SB_DFF): \RV32I.F_pc [28] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2169 (SB_DFF): \RV32I.F_pc [4] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2119 (SB_DFF): \Espera [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2175 (SB_DFF): \RV32I.F_pc [10] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2139 (SB_DFF): \RV32I.FD_pc [6] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2137 (SB_DFF): \RV32I.FD_pc [4] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5827 (SB_DFF): \UART_TX.bclk.divcounter [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2148 (SB_DFF): \RV32I.FD_pc [15] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4118 (SB_DFF): \LEDS8_4.timer [10] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4117 (SB_DFF): \LEDS8_4.timer [9] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2140 (SB_DFF): \RV32I.FD_pc [7] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2170 (SB_DFF): \RV32I.F_pc [5] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2194 (SB_DFF): \RV32I.F_pc [29] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4264 (SB_DFF): \UART_TX.done = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2136 (SB_DFF): \RV32I.FD_pc [3] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5868 (SB_DFF): \UART_RX.bclk.divcounter [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2196 (SB_DFF): \RV32I.F_pc [31] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2195 (SB_DFF): \RV32I.F_pc [30] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2172 (SB_DFF): \RV32I.F_pc [7] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2171 (SB_DFF): \RV32I.F_pc [6] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2132 (SB_DFF): \RV32I.FD_nop = 1
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2166 (SB_DFFE): \RV32I.F_pc [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2142 (SB_DFF): \RV32I.FD_pc [9] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4109 (SB_DFF): \LEDS8_4.timer [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4110 (SB_DFF): \LEDS8_4.timer [2] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4111 (SB_DFF): \LEDS8_4.timer [3] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4112 (SB_DFF): \LEDS8_4.timer [4] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4113 (SB_DFF): \LEDS8_4.timer [5] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4114 (SB_DFF): \LEDS8_4.timer [6] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4115 (SB_DFF): \LEDS8_4.timer [7] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4116 (SB_DFF): \LEDS8_4.timer [8] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4119 (SB_DFF): \LEDS8_4.timer [11] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4249 (SB_DFFE): \UART_TX.state = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4248 (SB_DFF): \UART_TX.q_re = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4251 (SB_DFFE): \UART_TX.q [1] = 1
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4252 (SB_DFFE): \UART_TX.q [2] = 1
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4253 (SB_DFFE): \UART_TX.q [3] = 1
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4254 (SB_DFFE): \UART_TX.q [4] = 1
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4255 (SB_DFFE): \UART_TX.q [5] = 1
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4256 (SB_DFFE): \UART_TX.q [6] = 1
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4250 (SB_DFFE): \UART_TX.q [0] = 1
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4259 (SB_DFF): \UART_TX.TX = 1
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4258 (SB_DFFE): \UART_TX.q [8] = 1
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4261 (SB_DFFE): \UART_TX.bits [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4262 (SB_DFFE): \UART_TX.bits [2] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4260 (SB_DFFE): \UART_TX.bits [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4312 (SB_DFF): \UART_RX.q_t0 = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4313 (SB_DFFE): \UART_RX.state = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4263 (SB_DFFE): \UART_TX.bits [3] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4315 (SB_DFFE): \UART_RX.div2counter [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4316 (SB_DFFE): \UART_RX.div2counter [2] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4317 (SB_DFFE): \UART_RX.div2counter [3] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4318 (SB_DFFE): \UART_RX.div2counter [4] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4319 (SB_DFFE): \UART_RX.div2counter [5] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4314 (SB_DFFE): \UART_RX.div2counter [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4320 (SB_DFFE): \UART_RX.div2counter [6] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4322 (SB_DFFE): \UART_RX.sr [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4323 (SB_DFFE): \UART_RX.sr [2] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4324 (SB_DFFE): \UART_RX.sr [3] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4325 (SB_DFFE): \UART_RX.sr [4] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4326 (SB_DFFE): \UART_RX.sr [5] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4327 (SB_DFFE): \UART_RX.sr [6] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4328 (SB_DFFE): \UART_RX.sr [7] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4321 (SB_DFFE): \UART_RX.sr [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4329 (SB_DFFE): \UART_RX.sr [8] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4331 (SB_DFFE): \UART_RX.cont [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4332 (SB_DFFE): \UART_RX.cont [2] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4333 (SB_DFFE): \UART_RX.cont [3] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4330 (SB_DFFE): \UART_RX.cont [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4334 (SB_DFFE): \UART_RX.cont [4] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4336 (SB_DFFE): \UART_RX.data [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4337 (SB_DFFE): \UART_RX.data [2] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4338 (SB_DFFE): \UART_RX.data [3] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4339 (SB_DFFE): \UART_RX.data [4] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4340 (SB_DFFE): \UART_RX.data [5] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4341 (SB_DFFE): \UART_RX.data [6] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4342 (SB_DFFE): \UART_RX.data [7] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5828 (SB_DFF): \UART_TX.bclk.divcounter [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5829 (SB_DFF): \UART_TX.bclk.divcounter [2] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5830 (SB_DFF): \UART_TX.bclk.divcounter [3] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5831 (SB_DFF): \UART_TX.bclk.divcounter [4] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5832 (SB_DFF): \UART_TX.bclk.divcounter [5] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5833 (SB_DFF): \UART_TX.bclk.divcounter [6] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5869 (SB_DFF): \UART_RX.bclk.divcounter [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5870 (SB_DFF): \UART_RX.bclk.divcounter [2] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5871 (SB_DFF): \UART_RX.bclk.divcounter [3] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5872 (SB_DFF): \UART_RX.bclk.divcounter [4] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5873 (SB_DFF): \UART_RX.bclk.divcounter [5] = 0

4.39. Executing ICE40_FFSSR pass (merge synchronous set/reset into FF cells).
Merging set/reset $_MUX_ cells into SB_FFs in SOCnexpo.
Merging $auto$simplemap.cc:277:simplemap_mux$5881 (A=$auto$wreduce.cc:460:run$1371 [6], B=1'0, S=\UART_RX.bclk.reset) into $auto$simplemap.cc:420:simplemap_dff$5874 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$1986 (A=\RV32I.EM_rs2Data [1], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$2087 (SB_DFFE).
Merging $auto$simplemap.cc:277:simplemap_mux$1987 (A=\RV32I.EM_rs2Data [2], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$2088 (SB_DFFE).
Merging $auto$simplemap.cc:277:simplemap_mux$1988 (A=\RV32I.EM_rs2Data [3], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$2089 (SB_DFFE).
Merging $auto$simplemap.cc:277:simplemap_mux$1968 (A=\DatatoWrite [31], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$2117 (SB_DFFE).
Merging $auto$simplemap.cc:277:simplemap_mux$1966 (A=\DatatoWrite [29], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$2115 (SB_DFFE).
Merging $auto$simplemap.cc:277:simplemap_mux$2039 (A=\DatatoWrite [14], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$2100 (SB_DFFE).
Merging $auto$simplemap.cc:277:simplemap_mux$1985 (A=\RV32I.EM_rs2Data [0], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$2086 (SB_DFFE).
Merging $auto$simplemap.cc:277:simplemap_mux$3281 (A=$techmap\RV32I.$add$Procesador_V2.0b/RV32nexpo.v:484$322_Y [9], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$2497 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$3321 (A=$techmap\RV32I.$add$Procesador_V2.0b/RV32nexpo.v:484$322_Y [49], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$2537 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$3607 (A=\RV32I.DE_rs1Data [7], B=1'0, S=\RV32I.DE_funct3 [2]) into $auto$simplemap.cc:420:simplemap_dff$2322 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$2038 (A=\DatatoWrite [13], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$2099 (SB_DFFE).
Merging $auto$simplemap.cc:277:simplemap_mux$1992 (A=\RV32I.EM_rs2Data [7], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$2093 (SB_DFFE).
Merging $auto$simplemap.cc:277:simplemap_mux$2033 (A=\DatatoWrite [8], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$2094 (SB_DFFE).
Merging $auto$simplemap.cc:277:simplemap_mux$3134 (A=\RV32I.M_CSRtoWrite [22], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$2478 (SB_DFFE).
Merging $auto$simplemap.cc:277:simplemap_mux$1964 (A=\DatatoWrite [27], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$2113 (SB_DFFE).
Merging $auto$simplemap.cc:277:simplemap_mux$1963 (A=\DatatoWrite [26], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$2112 (SB_DFFE).
Merging $auto$simplemap.cc:277:simplemap_mux$2016 (A=\DatatoWrite [23], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$2109 (SB_DFFE).
Merging $auto$simplemap.cc:277:simplemap_mux$4132 (A=$auto$simplemap.cc:309:simplemap_lut$10113, B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$4108 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$2009 (A=\DatatoWrite [16], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$2102 (SB_DFFE).
Merging $auto$simplemap.cc:277:simplemap_mux$2014 (A=\DatatoWrite [21], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$2107 (SB_DFFE).
Merging $auto$simplemap.cc:277:simplemap_mux$1962 (A=\DatatoWrite [25], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$2111 (SB_DFFE).
Merging $auto$simplemap.cc:277:simplemap_mux$2013 (A=\DatatoWrite [20], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$2106 (SB_DFFE).
Merging $auto$simplemap.cc:277:simplemap_mux$2012 (A=\DatatoWrite [19], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$2105 (SB_DFFE).
Merging $auto$simplemap.cc:277:simplemap_mux$3318 (A=$techmap\RV32I.$add$Procesador_V2.0b/RV32nexpo.v:484$322_Y [46], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$2534 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$2011 (A=\DatatoWrite [18], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$2104 (SB_DFFE).
Merging $auto$simplemap.cc:277:simplemap_mux$1961 (A=\DatatoWrite [24], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$2110 (SB_DFFE).
Merging $auto$simplemap.cc:277:simplemap_mux$1991 (A=\RV32I.EM_rs2Data [6], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$2092 (SB_DFFE).
Merging $auto$simplemap.cc:277:simplemap_mux$3277 (A=$techmap\RV32I.$add$Procesador_V2.0b/RV32nexpo.v:484$322_Y [5], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$2493 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$2681 (A=\RV32I.F_pc [1], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$2134 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$2682 (A=\RV32I.F_pc [2], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$2135 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$2693 (A=\RV32I.F_pc [13], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$2146 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$3314 (A=$techmap\RV32I.$add$Procesador_V2.0b/RV32nexpo.v:484$322_Y [42], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$2530 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$2624 (A=$techmap\RV32I.$procmux$1105_Y [8], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$2173 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$3316 (A=$techmap\RV32I.$add$Procesador_V2.0b/RV32nexpo.v:484$322_Y [44], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$2532 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$2685 (A=\RV32I.F_pc [5], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$2138 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$2694 (A=\RV32I.F_pc [14], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$2147 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$3300 (A=$techmap\RV32I.$add$Procesador_V2.0b/RV32nexpo.v:484$322_Y [28], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$2516 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$4144 (A=1'1, B=$techmap$techmap\LEDS8_4.$procmux$1128.$ternary$/home/jfdava/.apio/packages/toolchain-yosys/bin/../share/yosys/techmap.v:445$4149_Y [0], S=$techmap\LEDS8_4.$and$ControladorMatrizLed.v:42$6_Y) into $auto$simplemap.cc:420:simplemap_dff$4128 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$3275 (A=$techmap\RV32I.$add$Procesador_V2.0b/RV32nexpo.v:484$322_Y [3], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$2491 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$3235 (A=$techmap\RV32I.$add$Procesador_V2.0b/RV32nexpo.v:483$320_Y [27], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$2579 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$3324 (A=$techmap\RV32I.$add$Procesador_V2.0b/RV32nexpo.v:484$322_Y [52], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$2540 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$3276 (A=$techmap\RV32I.$add$Procesador_V2.0b/RV32nexpo.v:484$322_Y [4], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$2492 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$3298 (A=$techmap\RV32I.$add$Procesador_V2.0b/RV32nexpo.v:484$322_Y [26], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$2514 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$2680 (A=\RV32I.F_pc [0], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$2133 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$4061 (A=\instr [19], B=1'0, S=\RV32I.FD_nop) into $auto$simplemap.cc:420:simplemap_dff$2224 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$2638 (A=$techmap\RV32I.$procmux$1105_Y [22], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$2187 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$2625 (A=$techmap\RV32I.$procmux$1105_Y [9], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$2174 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$2632 (A=$techmap\RV32I.$procmux$1105_Y [16], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$2181 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$3141 (A=\RV32I.M_CSRtoWrite [29], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$2485 (SB_DFFE).
Merging $auto$simplemap.cc:277:simplemap_mux$3313 (A=$techmap\RV32I.$add$Procesador_V2.0b/RV32nexpo.v:484$322_Y [41], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$2529 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$3312 (A=$techmap\RV32I.$add$Procesador_V2.0b/RV32nexpo.v:484$322_Y [40], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$2528 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$2688 (A=\RV32I.F_pc [8], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$2141 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$2619 (A=$techmap\RV32I.$procmux$1105_Y [3], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$2168 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$3310 (A=$techmap\RV32I.$add$Procesador_V2.0b/RV32nexpo.v:484$322_Y [38], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$2526 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$2639 (A=$techmap\RV32I.$procmux$1105_Y [23], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$2188 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$2637 (A=$techmap\RV32I.$procmux$1105_Y [21], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$2186 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$2636 (A=$techmap\RV32I.$procmux$1105_Y [20], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$2185 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$2634 (A=$techmap\RV32I.$procmux$1105_Y [18], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$2183 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$3605 (A=\RV32I.DE_rs1Data [5], B=1'0, S=\RV32I.DE_funct3 [2]) into $auto$simplemap.cc:420:simplemap_dff$2320 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$2633 (A=$techmap\RV32I.$procmux$1105_Y [17], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$2182 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$2631 (A=$techmap\RV32I.$procmux$1105_Y [15], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$2180 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$2635 (A=$techmap\RV32I.$procmux$1105_Y [19], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$2184 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$2630 (A=$techmap\RV32I.$procmux$1105_Y [14], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$2179 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$2629 (A=$techmap\RV32I.$procmux$1105_Y [13], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$2178 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$2618 (A=$techmap\RV32I.$procmux$1105_Y [2], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$2167 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$2628 (A=$techmap\RV32I.$procmux$1105_Y [12], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$2177 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$3236 (A=$techmap\RV32I.$add$Procesador_V2.0b/RV32nexpo.v:483$320_Y [28], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$2580 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$3765 (A=1'0, B=\RV32I.FD_instr [14], S=\RV32I.D_ALUFun) into $auto$simplemap.cc:420:simplemap_dff$2213 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$2627 (A=$techmap\RV32I.$procmux$1105_Y [11], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$2176 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$2640 (A=$techmap\RV32I.$procmux$1105_Y [24], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$2189 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$3142 (A=\RV32I.M_CSRtoWrite [30], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$2486 (SB_DFFE).
Merging $auto$simplemap.cc:277:simplemap_mux$3311 (A=$techmap\RV32I.$add$Procesador_V2.0b/RV32nexpo.v:484$322_Y [39], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$2527 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$2616 (A=\RV32I.E_JumpAddr [0], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$2165 (SB_DFFE).
Merging $auto$simplemap.cc:277:simplemap_mux$2832 (A=1'0, B=$techmap\RV32I.$procmux$1015_Y, S=$auto$simplemap.cc:256:simplemap_eqne$4024) into $auto$simplemap.cc:420:simplemap_dff$2197 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$2851 (A=1'1, B=$techmap\RV32I.$procmux$895_Y, S=$auto$simplemap.cc:256:simplemap_eqne$4024) into $auto$simplemap.cc:420:simplemap_dff$2202 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$2813 (A=1'0, B=$techmap\RV32I.$procmux$1082_Y, S=$auto$simplemap.cc:256:simplemap_eqne$4024) into $auto$simplemap.cc:420:simplemap_dff$2203 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$2859 (A=1'1, B=$techmap\RV32I.$procmux$870_Y, S=$auto$simplemap.cc:256:simplemap_eqne$4024) into $auto$simplemap.cc:420:simplemap_dff$2205 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$3630 (A=\RV32I.DE_rs1Data [30], B=1'0, S=\RV32I.DE_funct3 [2]) into $auto$simplemap.cc:420:simplemap_dff$2345 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$3629 (A=\RV32I.DE_rs1Data [29], B=1'0, S=\RV32I.DE_funct3 [2]) into $auto$simplemap.cc:420:simplemap_dff$2344 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$4054 (A=\instr [12], B=1'0, S=\RV32I.FD_nop) into $auto$simplemap.cc:420:simplemap_dff$2208 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$2643 (A=$techmap\RV32I.$procmux$1105_Y [27], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$2192 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$3764 (A=1'0, B=\RV32I.FD_instr [13], S=\RV32I.D_ALUFun) into $auto$simplemap.cc:420:simplemap_dff$2212 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$2642 (A=$techmap\RV32I.$procmux$1105_Y [26], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$2191 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$3763 (A=1'0, B=\RV32I.FD_instr [12], S=\RV32I.D_ALUFun) into $auto$simplemap.cc:420:simplemap_dff$2211 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$3628 (A=\RV32I.DE_rs1Data [28], B=1'0, S=\RV32I.DE_funct3 [2]) into $auto$simplemap.cc:420:simplemap_dff$2343 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$3320 (A=$techmap\RV32I.$add$Procesador_V2.0b/RV32nexpo.v:484$322_Y [48], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$2536 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$4049 (A=\instr [7], B=1'0, S=\RV32I.FD_nop) into $auto$simplemap.cc:420:simplemap_dff$2215 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$3143 (A=\RV32I.M_CSRtoWrite [31], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$2487 (SB_DFFE).
Merging $auto$simplemap.cc:277:simplemap_mux$3309 (A=$techmap\RV32I.$add$Procesador_V2.0b/RV32nexpo.v:484$322_Y [37], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$2525 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$3308 (A=$techmap\RV32I.$add$Procesador_V2.0b/RV32nexpo.v:484$322_Y [36], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$2524 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$4057 (A=\instr [15], B=1'0, S=\RV32I.FD_nop) into $auto$simplemap.cc:420:simplemap_dff$2220 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$3254 (A=$techmap\RV32I.$add$Procesador_V2.0b/RV32nexpo.v:483$320_Y [46], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$2598 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$2692 (A=\RV32I.F_pc [12], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$2145 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$2040 (A=\DatatoWrite [15], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$2101 (SB_DFFE).
Merging $auto$simplemap.cc:277:simplemap_mux$3239 (A=$techmap\RV32I.$add$Procesador_V2.0b/RV32nexpo.v:483$320_Y [31], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$2583 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$2015 (A=\DatatoWrite [22], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$2108 (SB_DFFE).
Merging $auto$simplemap.cc:277:simplemap_mux$2641 (A=$techmap\RV32I.$procmux$1105_Y [25], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$2190 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$2724 (A=1'0, B=$techmap\RV32I.$procmux$1093_Y [11], S=$auto$simplemap.cc:256:simplemap_eqne$3958) into $auto$simplemap.cc:420:simplemap_dff$2236 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$3273 (A=$techmap\RV32I.$add$Procesador_V2.0b/RV32nexpo.v:484$322_Y [1], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$2489 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$3307 (A=$techmap\RV32I.$add$Procesador_V2.0b/RV32nexpo.v:484$322_Y [35], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$2523 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$3306 (A=$techmap\RV32I.$add$Procesador_V2.0b/RV32nexpo.v:484$322_Y [34], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$2522 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$2713 (A=1'0, B=$techmap\RV32I.$procmux$1093_Y [0], S=$auto$simplemap.cc:256:simplemap_eqne$3958) into $auto$simplemap.cc:420:simplemap_dff$2225 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$3305 (A=$techmap\RV32I.$add$Procesador_V2.0b/RV32nexpo.v:484$322_Y [33], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$2521 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$3303 (A=$techmap\RV32I.$add$Procesador_V2.0b/RV32nexpo.v:484$322_Y [31], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$2519 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$3304 (A=$techmap\RV32I.$add$Procesador_V2.0b/RV32nexpo.v:484$322_Y [32], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$2520 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$3302 (A=$techmap\RV32I.$add$Procesador_V2.0b/RV32nexpo.v:484$322_Y [30], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$2518 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$2690 (A=\RV32I.F_pc [10], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$2143 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$2691 (A=\RV32I.F_pc [11], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$2144 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$3279 (A=$techmap\RV32I.$add$Procesador_V2.0b/RV32nexpo.v:484$322_Y [7], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$2495 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$3296 (A=$techmap\RV32I.$add$Procesador_V2.0b/RV32nexpo.v:484$322_Y [24], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$2512 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$2696 (A=\RV32I.F_pc [16], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$2149 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$2697 (A=\RV32I.F_pc [17], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$2150 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$2698 (A=\RV32I.F_pc [18], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$2151 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$2699 (A=\RV32I.F_pc [19], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$2152 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$2700 (A=\RV32I.F_pc [20], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$2153 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$2701 (A=\RV32I.F_pc [21], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$2154 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$2702 (A=\RV32I.F_pc [22], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$2155 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$2703 (A=\RV32I.F_pc [23], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$2156 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$2704 (A=\RV32I.F_pc [24], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$2157 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$2705 (A=\RV32I.F_pc [25], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$2158 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$2706 (A=\RV32I.F_pc [26], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$2159 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$2707 (A=\RV32I.F_pc [27], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$2160 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$2708 (A=\RV32I.F_pc [28], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$2161 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$2709 (A=\RV32I.F_pc [29], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$2162 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$2710 (A=\RV32I.F_pc [30], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$2163 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$2711 (A=\RV32I.F_pc [31], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$2164 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$4055 (A=\instr [13], B=1'0, S=\RV32I.FD_nop) into $auto$simplemap.cc:420:simplemap_dff$2209 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$4056 (A=\instr [14], B=1'0, S=\RV32I.FD_nop) into $auto$simplemap.cc:420:simplemap_dff$2210 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$4050 (A=\instr [8], B=1'0, S=\RV32I.FD_nop) into $auto$simplemap.cc:420:simplemap_dff$2216 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$4051 (A=\instr [9], B=1'0, S=\RV32I.FD_nop) into $auto$simplemap.cc:420:simplemap_dff$2217 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$4052 (A=\instr [10], B=1'0, S=\RV32I.FD_nop) into $auto$simplemap.cc:420:simplemap_dff$2218 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$3280 (A=$techmap\RV32I.$add$Procesador_V2.0b/RV32nexpo.v:484$322_Y [8], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$2496 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$2714 (A=1'0, B=$techmap\RV32I.$procmux$1093_Y [1], S=$auto$simplemap.cc:256:simplemap_eqne$3958) into $auto$simplemap.cc:420:simplemap_dff$2226 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$2715 (A=1'0, B=$techmap\RV32I.$procmux$1093_Y [2], S=$auto$simplemap.cc:256:simplemap_eqne$3958) into $auto$simplemap.cc:420:simplemap_dff$2227 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$2716 (A=1'0, B=$techmap\RV32I.$procmux$1093_Y [3], S=$auto$simplemap.cc:256:simplemap_eqne$3958) into $auto$simplemap.cc:420:simplemap_dff$2228 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$2717 (A=1'0, B=$techmap\RV32I.$procmux$1093_Y [4], S=$auto$simplemap.cc:256:simplemap_eqne$3958) into $auto$simplemap.cc:420:simplemap_dff$2229 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$2718 (A=1'0, B=$techmap\RV32I.$procmux$1093_Y [5], S=$auto$simplemap.cc:256:simplemap_eqne$3958) into $auto$simplemap.cc:420:simplemap_dff$2230 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$2719 (A=1'0, B=$techmap\RV32I.$procmux$1093_Y [6], S=$auto$simplemap.cc:256:simplemap_eqne$3958) into $auto$simplemap.cc:420:simplemap_dff$2231 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$2720 (A=1'0, B=$techmap\RV32I.$procmux$1093_Y [7], S=$auto$simplemap.cc:256:simplemap_eqne$3958) into $auto$simplemap.cc:420:simplemap_dff$2232 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$2722 (A=1'0, B=$techmap\RV32I.$procmux$1093_Y [9], S=$auto$simplemap.cc:256:simplemap_eqne$3958) into $auto$simplemap.cc:420:simplemap_dff$2234 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$2723 (A=1'0, B=$techmap\RV32I.$procmux$1093_Y [10], S=$auto$simplemap.cc:256:simplemap_eqne$3958) into $auto$simplemap.cc:420:simplemap_dff$2235 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$3328 (A=$techmap\RV32I.$add$Procesador_V2.0b/RV32nexpo.v:484$322_Y [56], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$2544 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$4053 (A=\instr [11], B=1'0, S=\RV32I.FD_nop) into $auto$simplemap.cc:420:simplemap_dff$2219 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$2644 (A=$techmap\RV32I.$procmux$1105_Y [28], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$2193 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$2620 (A=$techmap\RV32I.$procmux$1105_Y [4], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$2169 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$2010 (A=\DatatoWrite [17], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$2103 (SB_DFFE).
Merging $auto$simplemap.cc:277:simplemap_mux$3611 (A=\RV32I.DE_rs1Data [11], B=1'0, S=\RV32I.DE_funct3 [2]) into $auto$simplemap.cc:420:simplemap_dff$2326 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$3612 (A=\RV32I.DE_rs1Data [12], B=1'0, S=\RV32I.DE_funct3 [2]) into $auto$simplemap.cc:420:simplemap_dff$2327 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$3613 (A=\RV32I.DE_rs1Data [13], B=1'0, S=\RV32I.DE_funct3 [2]) into $auto$simplemap.cc:420:simplemap_dff$2328 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$3614 (A=\RV32I.DE_rs1Data [14], B=1'0, S=\RV32I.DE_funct3 [2]) into $auto$simplemap.cc:420:simplemap_dff$2329 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$3615 (A=\RV32I.DE_rs1Data [15], B=1'0, S=\RV32I.DE_funct3 [2]) into $auto$simplemap.cc:420:simplemap_dff$2330 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$3616 (A=\RV32I.DE_rs1Data [16], B=1'0, S=\RV32I.DE_funct3 [2]) into $auto$simplemap.cc:420:simplemap_dff$2331 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$3617 (A=\RV32I.DE_rs1Data [17], B=1'0, S=\RV32I.DE_funct3 [2]) into $auto$simplemap.cc:420:simplemap_dff$2332 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$3618 (A=\RV32I.DE_rs1Data [18], B=1'0, S=\RV32I.DE_funct3 [2]) into $auto$simplemap.cc:420:simplemap_dff$2333 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$3619 (A=\RV32I.DE_rs1Data [19], B=1'0, S=\RV32I.DE_funct3 [2]) into $auto$simplemap.cc:420:simplemap_dff$2334 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$3620 (A=\RV32I.DE_rs1Data [20], B=1'0, S=\RV32I.DE_funct3 [2]) into $auto$simplemap.cc:420:simplemap_dff$2335 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$3621 (A=\RV32I.DE_rs1Data [21], B=1'0, S=\RV32I.DE_funct3 [2]) into $auto$simplemap.cc:420:simplemap_dff$2336 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$3622 (A=\RV32I.DE_rs1Data [22], B=1'0, S=\RV32I.DE_funct3 [2]) into $auto$simplemap.cc:420:simplemap_dff$2337 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$3283 (A=$techmap\RV32I.$add$Procesador_V2.0b/RV32nexpo.v:484$322_Y [11], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$2499 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$3285 (A=$techmap\RV32I.$add$Procesador_V2.0b/RV32nexpo.v:484$322_Y [13], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$2501 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$3625 (A=\RV32I.DE_rs1Data [25], B=1'0, S=\RV32I.DE_funct3 [2]) into $auto$simplemap.cc:420:simplemap_dff$2340 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$3626 (A=\RV32I.DE_rs1Data [26], B=1'0, S=\RV32I.DE_funct3 [2]) into $auto$simplemap.cc:420:simplemap_dff$2341 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$3301 (A=$techmap\RV32I.$add$Procesador_V2.0b/RV32nexpo.v:484$322_Y [29], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$2517 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$3137 (A=\RV32I.M_CSRtoWrite [25], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$2481 (SB_DFFE).
Merging $auto$simplemap.cc:277:simplemap_mux$3323 (A=$techmap\RV32I.$add$Procesador_V2.0b/RV32nexpo.v:484$322_Y [51], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$2539 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$3113 (A=\RV32I.M_CSRtoWrite [1], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$2457 (SB_DFFE).
Merging $auto$simplemap.cc:277:simplemap_mux$3219 (A=$techmap\RV32I.$add$Procesador_V2.0b/RV32nexpo.v:483$320_Y [11], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$2563 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$3221 (A=$techmap\RV32I.$add$Procesador_V2.0b/RV32nexpo.v:483$320_Y [13], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$2565 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$3223 (A=$techmap\RV32I.$add$Procesador_V2.0b/RV32nexpo.v:483$320_Y [15], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$2567 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$2826 (A=1'0, B=$techmap\RV32I.$procmux$1034_Y, S=$auto$simplemap.cc:256:simplemap_eqne$4024) into $auto$simplemap.cc:420:simplemap_dff$2214 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$2626 (A=$techmap\RV32I.$procmux$1105_Y [10], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$2175 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$3237 (A=$techmap\RV32I.$add$Procesador_V2.0b/RV32nexpo.v:483$320_Y [29], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$2581 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$3295 (A=$techmap\RV32I.$add$Procesador_V2.0b/RV32nexpo.v:484$322_Y [23], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$2511 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$2686 (A=\RV32I.F_pc [6], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$2139 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$3278 (A=$techmap\RV32I.$add$Procesador_V2.0b/RV32nexpo.v:484$322_Y [6], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$2494 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$2684 (A=\RV32I.F_pc [4], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$2137 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$1967 (A=\DatatoWrite [30], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$2116 (SB_DFFE).
Merging $auto$simplemap.cc:277:simplemap_mux$3631 (A=\RV32I.DE_rs1Data [31], B=1'0, S=\RV32I.DE_funct3 [2]) into $auto$simplemap.cc:420:simplemap_dff$2346 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$1989 (A=\RV32I.EM_rs2Data [4], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$2090 (SB_DFFE).
Merging $auto$simplemap.cc:277:simplemap_mux$3322 (A=$techmap\RV32I.$add$Procesador_V2.0b/RV32nexpo.v:484$322_Y [50], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$2538 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$3234 (A=$techmap\RV32I.$add$Procesador_V2.0b/RV32nexpo.v:483$320_Y [26], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$2578 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$3246 (A=$techmap\RV32I.$add$Procesador_V2.0b/RV32nexpo.v:483$320_Y [38], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$2590 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$3270 (A=$techmap\RV32I.$add$Procesador_V2.0b/RV32nexpo.v:483$320_Y [62], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$2614 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$3257 (A=$techmap\RV32I.$add$Procesador_V2.0b/RV32nexpo.v:483$320_Y [49], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$2601 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$3624 (A=\RV32I.DE_rs1Data [24], B=1'0, S=\RV32I.DE_funct3 [2]) into $auto$simplemap.cc:420:simplemap_dff$2339 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$3330 (A=$techmap\RV32I.$add$Procesador_V2.0b/RV32nexpo.v:484$322_Y [58], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$2546 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$3332 (A=$techmap\RV32I.$add$Procesador_V2.0b/RV32nexpo.v:484$322_Y [60], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$2548 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$3334 (A=$techmap\RV32I.$add$Procesador_V2.0b/RV32nexpo.v:484$322_Y [62], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$2550 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$3209 (A=$techmap\RV32I.$add$Procesador_V2.0b/RV32nexpo.v:483$320_Y [1], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$2553 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$3211 (A=$techmap\RV32I.$add$Procesador_V2.0b/RV32nexpo.v:483$320_Y [3], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$2555 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$3213 (A=$techmap\RV32I.$add$Procesador_V2.0b/RV32nexpo.v:483$320_Y [5], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$2557 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$3215 (A=$techmap\RV32I.$add$Procesador_V2.0b/RV32nexpo.v:483$320_Y [7], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$2559 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$3217 (A=$techmap\RV32I.$add$Procesador_V2.0b/RV32nexpo.v:483$320_Y [9], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$2561 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$3274 (A=$techmap\RV32I.$add$Procesador_V2.0b/RV32nexpo.v:484$322_Y [2], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$2490 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$3299 (A=$techmap\RV32I.$add$Procesador_V2.0b/RV32nexpo.v:484$322_Y [27], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$2515 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$3225 (A=$techmap\RV32I.$add$Procesador_V2.0b/RV32nexpo.v:483$320_Y [17], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$2569 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$3120 (A=\RV32I.M_CSRtoWrite [8], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$2464 (SB_DFFE).
Merging $auto$simplemap.cc:277:simplemap_mux$3119 (A=\RV32I.M_CSRtoWrite [7], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$2463 (SB_DFFE).
Merging $auto$simplemap.cc:277:simplemap_mux$3627 (A=\RV32I.DE_rs1Data [27], B=1'0, S=\RV32I.DE_funct3 [2]) into $auto$simplemap.cc:420:simplemap_dff$2342 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$5834 (A=$auto$simplemap.cc:309:simplemap_lut$10170, B=1'0, S=\UART_TX.bclk.reset) into $auto$simplemap.cc:420:simplemap_dff$5827 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$3609 (A=\RV32I.DE_rs1Data [9], B=1'0, S=\RV32I.DE_funct3 [2]) into $auto$simplemap.cc:420:simplemap_dff$2324 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$2695 (A=\RV32I.F_pc [15], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$2148 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$2034 (A=\DatatoWrite [9], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$2095 (SB_DFFE).
Merging $auto$simplemap.cc:277:simplemap_mux$3231 (A=$techmap\RV32I.$add$Procesador_V2.0b/RV32nexpo.v:483$320_Y [23], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$2575 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$3232 (A=$techmap\RV32I.$add$Procesador_V2.0b/RV32nexpo.v:483$320_Y [24], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$2576 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$1942 (A=$procmux$702_Y, B=1'1, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$2084 (SB_DFFE).
Merging $auto$simplemap.cc:277:simplemap_mux$4142 (A=$auto$wreduce.cc:460:run$1347 [10], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$4118 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$3261 (A=$techmap\RV32I.$add$Procesador_V2.0b/RV32nexpo.v:483$320_Y [53], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$2605 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$3608 (A=\RV32I.DE_rs1Data [8], B=1'0, S=\RV32I.DE_funct3 [2]) into $auto$simplemap.cc:420:simplemap_dff$2323 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$3136 (A=\RV32I.M_CSRtoWrite [24], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$2480 (SB_DFFE).
Merging $auto$simplemap.cc:277:simplemap_mux$3287 (A=$techmap\RV32I.$add$Procesador_V2.0b/RV32nexpo.v:484$322_Y [15], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$2503 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$3139 (A=\RV32I.M_CSRtoWrite [27], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$2483 (SB_DFFE).
Merging $auto$simplemap.cc:277:simplemap_mux$4141 (A=$auto$wreduce.cc:460:run$1347 [9], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$4117 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$4163 (A=1'1, B=$techmap$techmap\LEDS8_4.$procmux$1120.$ternary$/home/jfdava/.apio/packages/toolchain-yosys/bin/../share/yosys/techmap.v:445$4186_Y [6], S=$techmap\LEDS8_4.$and$ControladorMatrizLed.v:42$6_Y) into $auto$simplemap.cc:420:simplemap_dff$4126 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$2687 (A=\RV32I.F_pc [7], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$2140 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$3114 (A=\RV32I.M_CSRtoWrite [2], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$2458 (SB_DFFE).
Merging $auto$simplemap.cc:277:simplemap_mux$3115 (A=\RV32I.M_CSRtoWrite [3], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$2459 (SB_DFFE).
Merging $auto$simplemap.cc:277:simplemap_mux$3116 (A=\RV32I.M_CSRtoWrite [4], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$2460 (SB_DFFE).
Merging $auto$simplemap.cc:277:simplemap_mux$3117 (A=\RV32I.M_CSRtoWrite [5], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$2461 (SB_DFFE).
Merging $auto$simplemap.cc:277:simplemap_mux$3118 (A=\RV32I.M_CSRtoWrite [6], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$2462 (SB_DFFE).
Merging $auto$simplemap.cc:277:simplemap_mux$3326 (A=$techmap\RV32I.$add$Procesador_V2.0b/RV32nexpo.v:484$322_Y [54], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$2542 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$2035 (A=\DatatoWrite [10], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$2096 (SB_DFFE).
Merging $auto$simplemap.cc:277:simplemap_mux$2621 (A=$techmap\RV32I.$procmux$1105_Y [5], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$2170 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$2645 (A=$techmap\RV32I.$procmux$1105_Y [29], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$2194 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$4058 (A=\instr [16], B=1'0, S=\RV32I.FD_nop) into $auto$simplemap.cc:420:simplemap_dff$2221 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$3112 (A=\RV32I.M_CSRtoWrite [0], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$2456 (SB_DFFE).
Merging $auto$simplemap.cc:277:simplemap_mux$3297 (A=$techmap\RV32I.$add$Procesador_V2.0b/RV32nexpo.v:484$322_Y [25], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$2513 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$3606 (A=\RV32I.DE_rs1Data [6], B=1'0, S=\RV32I.DE_funct3 [2]) into $auto$simplemap.cc:420:simplemap_dff$2321 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$3288 (A=$techmap\RV32I.$add$Procesador_V2.0b/RV32nexpo.v:484$322_Y [16], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$2504 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$3284 (A=$techmap\RV32I.$add$Procesador_V2.0b/RV32nexpo.v:484$322_Y [12], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$2500 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$3282 (A=$techmap\RV32I.$add$Procesador_V2.0b/RV32nexpo.v:484$322_Y [10], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$2498 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$3289 (A=$techmap\RV32I.$add$Procesador_V2.0b/RV32nexpo.v:484$322_Y [17], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$2505 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$3286 (A=$techmap\RV32I.$add$Procesador_V2.0b/RV32nexpo.v:484$322_Y [14], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$2502 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$3623 (A=\RV32I.DE_rs1Data [23], B=1'0, S=\RV32I.DE_funct3 [2]) into $auto$simplemap.cc:420:simplemap_dff$2338 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$3243 (A=$techmap\RV32I.$add$Procesador_V2.0b/RV32nexpo.v:483$320_Y [35], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$2587 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$2683 (A=\RV32I.F_pc [3], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$2136 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$3293 (A=$techmap\RV32I.$add$Procesador_V2.0b/RV32nexpo.v:484$322_Y [21], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$2509 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$3292 (A=$techmap\RV32I.$add$Procesador_V2.0b/RV32nexpo.v:484$322_Y [20], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$2508 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$5875 (A=$auto$simplemap.cc:309:simplemap_lut$10246, B=1'0, S=\UART_RX.bclk.reset) into $auto$simplemap.cc:420:simplemap_dff$5868 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$4073 (A=\instr [31], B=1'0, S=\RV32I.FD_nop) into $auto$simplemap.cc:420:simplemap_dff$2256 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$4060 (A=\instr [18], B=1'0, S=\RV32I.FD_nop) into $auto$simplemap.cc:420:simplemap_dff$2223 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$4059 (A=\instr [17], B=1'0, S=\RV32I.FD_nop) into $auto$simplemap.cc:420:simplemap_dff$2222 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$2647 (A=$techmap\RV32I.$procmux$1105_Y [31], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$2196 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$2646 (A=$techmap\RV32I.$procmux$1105_Y [30], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$2195 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$2623 (A=$techmap\RV32I.$procmux$1105_Y [7], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$2172 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$2622 (A=$techmap\RV32I.$procmux$1105_Y [6], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$2171 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$3315 (A=$techmap\RV32I.$add$Procesador_V2.0b/RV32nexpo.v:484$322_Y [43], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$2531 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$3140 (A=\RV32I.M_CSRtoWrite [28], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$2484 (SB_DFFE).
Merging $auto$simplemap.cc:277:simplemap_mux$3319 (A=$techmap\RV32I.$add$Procesador_V2.0b/RV32nexpo.v:484$322_Y [47], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$2535 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$3138 (A=\RV32I.M_CSRtoWrite [26], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$2482 (SB_DFFE).
Merging $auto$simplemap.cc:277:simplemap_mux$2037 (A=\DatatoWrite [12], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$2098 (SB_DFFE).
Merging $auto$simplemap.cc:277:simplemap_mux$2036 (A=\DatatoWrite [11], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$2097 (SB_DFFE).
Merging $auto$simplemap.cc:277:simplemap_mux$3317 (A=$techmap\RV32I.$add$Procesador_V2.0b/RV32nexpo.v:484$322_Y [45], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$2533 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$3325 (A=$techmap\RV32I.$add$Procesador_V2.0b/RV32nexpo.v:484$322_Y [53], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$2541 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$3135 (A=\RV32I.M_CSRtoWrite [23], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$2479 (SB_DFFE).
Merging $auto$simplemap.cc:277:simplemap_mux$3327 (A=$techmap\RV32I.$add$Procesador_V2.0b/RV32nexpo.v:484$322_Y [55], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$2543 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$3329 (A=$techmap\RV32I.$add$Procesador_V2.0b/RV32nexpo.v:484$322_Y [57], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$2545 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$3133 (A=\RV32I.M_CSRtoWrite [21], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$2477 (SB_DFFE).
Merging $auto$simplemap.cc:277:simplemap_mux$3331 (A=$techmap\RV32I.$add$Procesador_V2.0b/RV32nexpo.v:484$322_Y [59], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$2547 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$3132 (A=\RV32I.M_CSRtoWrite [20], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$2476 (SB_DFFE).
Merging $auto$simplemap.cc:277:simplemap_mux$3333 (A=$techmap\RV32I.$add$Procesador_V2.0b/RV32nexpo.v:484$322_Y [61], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$2549 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$3131 (A=\RV32I.M_CSRtoWrite [19], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$2475 (SB_DFFE).
Merging $auto$simplemap.cc:277:simplemap_mux$3335 (A=$techmap\RV32I.$add$Procesador_V2.0b/RV32nexpo.v:484$322_Y [63], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$2551 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$3130 (A=\RV32I.M_CSRtoWrite [18], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$2474 (SB_DFFE).
Merging $auto$simplemap.cc:277:simplemap_mux$3272 (A=$techmap\RV32I.$add$Procesador_V2.0b/RV32nexpo.v:484$322_Y [0], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$2488 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$3210 (A=$techmap\RV32I.$add$Procesador_V2.0b/RV32nexpo.v:483$320_Y [2], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$2554 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$3129 (A=\RV32I.M_CSRtoWrite [17], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$2473 (SB_DFFE).
Merging $auto$simplemap.cc:277:simplemap_mux$3212 (A=$techmap\RV32I.$add$Procesador_V2.0b/RV32nexpo.v:483$320_Y [4], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$2556 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$3128 (A=\RV32I.M_CSRtoWrite [16], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$2472 (SB_DFFE).
Merging $auto$simplemap.cc:277:simplemap_mux$3214 (A=$techmap\RV32I.$add$Procesador_V2.0b/RV32nexpo.v:483$320_Y [6], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$2558 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$3127 (A=\RV32I.M_CSRtoWrite [15], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$2471 (SB_DFFE).
Merging $auto$simplemap.cc:277:simplemap_mux$3216 (A=$techmap\RV32I.$add$Procesador_V2.0b/RV32nexpo.v:483$320_Y [8], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$2560 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$3126 (A=\RV32I.M_CSRtoWrite [14], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$2470 (SB_DFFE).
Merging $auto$simplemap.cc:277:simplemap_mux$3218 (A=$techmap\RV32I.$add$Procesador_V2.0b/RV32nexpo.v:483$320_Y [10], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$2562 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$3125 (A=\RV32I.M_CSRtoWrite [13], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$2469 (SB_DFFE).
Merging $auto$simplemap.cc:277:simplemap_mux$3220 (A=$techmap\RV32I.$add$Procesador_V2.0b/RV32nexpo.v:483$320_Y [12], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$2564 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$3124 (A=\RV32I.M_CSRtoWrite [12], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$2468 (SB_DFFE).
Merging $auto$simplemap.cc:277:simplemap_mux$3222 (A=$techmap\RV32I.$add$Procesador_V2.0b/RV32nexpo.v:483$320_Y [14], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$2566 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$3123 (A=\RV32I.M_CSRtoWrite [11], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$2467 (SB_DFFE).
Merging $auto$simplemap.cc:277:simplemap_mux$3224 (A=$techmap\RV32I.$add$Procesador_V2.0b/RV32nexpo.v:483$320_Y [16], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$2568 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$3122 (A=\RV32I.M_CSRtoWrite [10], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$2466 (SB_DFFE).
Merging $auto$simplemap.cc:277:simplemap_mux$3226 (A=$techmap\RV32I.$add$Procesador_V2.0b/RV32nexpo.v:483$320_Y [18], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$2570 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$3121 (A=\RV32I.M_CSRtoWrite [9], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$2465 (SB_DFFE).
Merging $auto$simplemap.cc:277:simplemap_mux$2721 (A=1'0, B=$techmap\RV32I.$procmux$1093_Y [8], S=$auto$simplemap.cc:256:simplemap_eqne$3958) into $auto$simplemap.cc:420:simplemap_dff$2233 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$3227 (A=$techmap\RV32I.$add$Procesador_V2.0b/RV32nexpo.v:483$320_Y [19], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$2571 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$3228 (A=$techmap\RV32I.$add$Procesador_V2.0b/RV32nexpo.v:483$320_Y [20], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$2572 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$3229 (A=$techmap\RV32I.$add$Procesador_V2.0b/RV32nexpo.v:483$320_Y [21], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$2573 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$3271 (A=$techmap\RV32I.$add$Procesador_V2.0b/RV32nexpo.v:483$320_Y [63], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$2615 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$3238 (A=$techmap\RV32I.$add$Procesador_V2.0b/RV32nexpo.v:483$320_Y [30], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$2582 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$3233 (A=$techmap\RV32I.$add$Procesador_V2.0b/RV32nexpo.v:483$320_Y [25], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$2577 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$2617 (A=\RV32I.E_JumpAddr [1], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$2166 (SB_DFFE).
Merging $auto$simplemap.cc:277:simplemap_mux$3240 (A=$techmap\RV32I.$add$Procesador_V2.0b/RV32nexpo.v:483$320_Y [32], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$2584 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$3241 (A=$techmap\RV32I.$add$Procesador_V2.0b/RV32nexpo.v:483$320_Y [33], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$2585 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$3242 (A=$techmap\RV32I.$add$Procesador_V2.0b/RV32nexpo.v:483$320_Y [34], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$2586 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$3291 (A=$techmap\RV32I.$add$Procesador_V2.0b/RV32nexpo.v:484$322_Y [19], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$2507 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$3244 (A=$techmap\RV32I.$add$Procesador_V2.0b/RV32nexpo.v:483$320_Y [36], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$2588 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$3245 (A=$techmap\RV32I.$add$Procesador_V2.0b/RV32nexpo.v:483$320_Y [37], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$2589 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$3247 (A=$techmap\RV32I.$add$Procesador_V2.0b/RV32nexpo.v:483$320_Y [39], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$2591 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$3248 (A=$techmap\RV32I.$add$Procesador_V2.0b/RV32nexpo.v:483$320_Y [40], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$2592 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$3249 (A=$techmap\RV32I.$add$Procesador_V2.0b/RV32nexpo.v:483$320_Y [41], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$2593 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$3250 (A=$techmap\RV32I.$add$Procesador_V2.0b/RV32nexpo.v:483$320_Y [42], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$2594 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$3251 (A=$techmap\RV32I.$add$Procesador_V2.0b/RV32nexpo.v:483$320_Y [43], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$2595 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$3252 (A=$techmap\RV32I.$add$Procesador_V2.0b/RV32nexpo.v:483$320_Y [44], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$2596 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$3253 (A=$techmap\RV32I.$add$Procesador_V2.0b/RV32nexpo.v:483$320_Y [45], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$2597 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$3255 (A=$techmap\RV32I.$add$Procesador_V2.0b/RV32nexpo.v:483$320_Y [47], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$2599 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$3256 (A=$techmap\RV32I.$add$Procesador_V2.0b/RV32nexpo.v:483$320_Y [48], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$2600 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$3258 (A=$techmap\RV32I.$add$Procesador_V2.0b/RV32nexpo.v:483$320_Y [50], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$2602 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$3259 (A=$techmap\RV32I.$add$Procesador_V2.0b/RV32nexpo.v:483$320_Y [51], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$2603 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$2689 (A=\RV32I.F_pc [9], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$2142 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$3208 (A=$auto$simplemap.cc:309:simplemap_lut$10151, B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$2552 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$3260 (A=$techmap\RV32I.$add$Procesador_V2.0b/RV32nexpo.v:483$320_Y [52], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$2604 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$3262 (A=$techmap\RV32I.$add$Procesador_V2.0b/RV32nexpo.v:483$320_Y [54], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$2606 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$3263 (A=$techmap\RV32I.$add$Procesador_V2.0b/RV32nexpo.v:483$320_Y [55], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$2607 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$3264 (A=$techmap\RV32I.$add$Procesador_V2.0b/RV32nexpo.v:483$320_Y [56], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$2608 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$3265 (A=$techmap\RV32I.$add$Procesador_V2.0b/RV32nexpo.v:483$320_Y [57], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$2609 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$3266 (A=$techmap\RV32I.$add$Procesador_V2.0b/RV32nexpo.v:483$320_Y [58], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$2610 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$3230 (A=$techmap\RV32I.$add$Procesador_V2.0b/RV32nexpo.v:483$320_Y [22], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$2574 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$3267 (A=$techmap\RV32I.$add$Procesador_V2.0b/RV32nexpo.v:483$320_Y [59], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$2611 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$3269 (A=$techmap\RV32I.$add$Procesador_V2.0b/RV32nexpo.v:483$320_Y [61], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$2613 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$3268 (A=$techmap\RV32I.$add$Procesador_V2.0b/RV32nexpo.v:483$320_Y [60], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$2612 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$4133 (A=$auto$wreduce.cc:460:run$1347 [1], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$4109 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$4134 (A=$auto$wreduce.cc:460:run$1347 [2], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$4110 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$4135 (A=$auto$wreduce.cc:460:run$1347 [3], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$4111 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$4136 (A=$auto$wreduce.cc:460:run$1347 [4], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$4112 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$4137 (A=$auto$wreduce.cc:460:run$1347 [5], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$4113 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$4138 (A=$auto$wreduce.cc:460:run$1347 [6], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$4114 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$4139 (A=$auto$wreduce.cc:460:run$1347 [7], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$4115 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$4140 (A=$auto$wreduce.cc:460:run$1347 [8], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$4116 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$4143 (A=$auto$wreduce.cc:460:run$1347 [11], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$4119 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$4158 (A=1'1, B=$techmap$techmap\LEDS8_4.$procmux$1120.$ternary$/home/jfdava/.apio/packages/toolchain-yosys/bin/../share/yosys/techmap.v:445$4186_Y [1], S=$techmap\LEDS8_4.$and$ControladorMatrizLed.v:42$6_Y) into $auto$simplemap.cc:420:simplemap_dff$4121 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$1965 (A=\DatatoWrite [28], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$2114 (SB_DFFE).
Merging $auto$simplemap.cc:277:simplemap_mux$4159 (A=1'1, B=$techmap$techmap\LEDS8_4.$procmux$1120.$ternary$/home/jfdava/.apio/packages/toolchain-yosys/bin/../share/yosys/techmap.v:445$4186_Y [2], S=$techmap\LEDS8_4.$and$ControladorMatrizLed.v:42$6_Y) into $auto$simplemap.cc:420:simplemap_dff$4122 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$4160 (A=1'1, B=$techmap$techmap\LEDS8_4.$procmux$1120.$ternary$/home/jfdava/.apio/packages/toolchain-yosys/bin/../share/yosys/techmap.v:445$4186_Y [3], S=$techmap\LEDS8_4.$and$ControladorMatrizLed.v:42$6_Y) into $auto$simplemap.cc:420:simplemap_dff$4123 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$4161 (A=1'1, B=$techmap$techmap\LEDS8_4.$procmux$1120.$ternary$/home/jfdava/.apio/packages/toolchain-yosys/bin/../share/yosys/techmap.v:445$4186_Y [4], S=$techmap\LEDS8_4.$and$ControladorMatrizLed.v:42$6_Y) into $auto$simplemap.cc:420:simplemap_dff$4124 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$4162 (A=1'1, B=$techmap$techmap\LEDS8_4.$procmux$1120.$ternary$/home/jfdava/.apio/packages/toolchain-yosys/bin/../share/yosys/techmap.v:445$4186_Y [5], S=$techmap\LEDS8_4.$and$ControladorMatrizLed.v:42$6_Y) into $auto$simplemap.cc:420:simplemap_dff$4125 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$4164 (A=1'1, B=$techmap$techmap\LEDS8_4.$procmux$1120.$ternary$/home/jfdava/.apio/packages/toolchain-yosys/bin/../share/yosys/techmap.v:445$4186_Y [7], S=$techmap\LEDS8_4.$and$ControladorMatrizLed.v:42$6_Y) into $auto$simplemap.cc:420:simplemap_dff$4127 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$4145 (A=1'1, B=$techmap$techmap\LEDS8_4.$procmux$1128.$ternary$/home/jfdava/.apio/packages/toolchain-yosys/bin/../share/yosys/techmap.v:445$4149_Y [1], S=$techmap\LEDS8_4.$and$ControladorMatrizLed.v:42$6_Y) into $auto$simplemap.cc:420:simplemap_dff$4129 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$4157 (A=1'1, B=$techmap$techmap\LEDS8_4.$procmux$1120.$ternary$/home/jfdava/.apio/packages/toolchain-yosys/bin/../share/yosys/techmap.v:445$4186_Y [0], S=$techmap\LEDS8_4.$and$ControladorMatrizLed.v:42$6_Y) into $auto$simplemap.cc:420:simplemap_dff$4120 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$4146 (A=1'1, B=$techmap$techmap\LEDS8_4.$procmux$1128.$ternary$/home/jfdava/.apio/packages/toolchain-yosys/bin/../share/yosys/techmap.v:445$4149_Y [2], S=$techmap\LEDS8_4.$and$ControladorMatrizLed.v:42$6_Y) into $auto$simplemap.cc:420:simplemap_dff$4130 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$4147 (A=1'1, B=$techmap$techmap\LEDS8_4.$procmux$1128.$ternary$/home/jfdava/.apio/packages/toolchain-yosys/bin/../share/yosys/techmap.v:445$4149_Y [3], S=$techmap\LEDS8_4.$and$ControladorMatrizLed.v:42$6_Y) into $auto$simplemap.cc:420:simplemap_dff$4131 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$1990 (A=\RV32I.EM_rs2Data [5], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$2091 (SB_DFFE).
Merging $auto$simplemap.cc:277:simplemap_mux$4286 (A=1'0, B=$techmap\UART_TX.$add$uart.v:98$406_Y [1], S=$auto$simplemap.cc:256:simplemap_eqne$4299) into $auto$simplemap.cc:420:simplemap_dff$4261 (SB_DFFE).
Merging $auto$simplemap.cc:277:simplemap_mux$4287 (A=1'0, B=$techmap\UART_TX.$add$uart.v:98$406_Y [2], S=$auto$simplemap.cc:256:simplemap_eqne$4299) into $auto$simplemap.cc:420:simplemap_dff$4262 (SB_DFFE).
Merging $auto$simplemap.cc:277:simplemap_mux$4285 (A=1'0, B=$auto$simplemap.cc:309:simplemap_lut$10265, S=$auto$simplemap.cc:256:simplemap_eqne$4299) into $auto$simplemap.cc:420:simplemap_dff$4260 (SB_DFFE).
Merging $auto$simplemap.cc:277:simplemap_mux$3290 (A=$techmap\RV32I.$add$Procesador_V2.0b/RV32nexpo.v:484$322_Y [18], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$2506 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$3294 (A=$techmap\RV32I.$add$Procesador_V2.0b/RV32nexpo.v:484$322_Y [22], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$2510 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$4288 (A=1'0, B=$techmap\UART_TX.$add$uart.v:98$406_Y [3], S=$auto$simplemap.cc:256:simplemap_eqne$4299) into $auto$simplemap.cc:420:simplemap_dff$4263 (SB_DFFE).
Merging $auto$simplemap.cc:277:simplemap_mux$4346 (A=1'0, B=$auto$wreduce.cc:460:run$1369 [1], S=\UART_RX.state) into $auto$simplemap.cc:420:simplemap_dff$4315 (SB_DFFE).
Merging $auto$simplemap.cc:277:simplemap_mux$4347 (A=1'0, B=$auto$wreduce.cc:460:run$1369 [2], S=\UART_RX.state) into $auto$simplemap.cc:420:simplemap_dff$4316 (SB_DFFE).
Merging $auto$simplemap.cc:277:simplemap_mux$4348 (A=1'0, B=$auto$wreduce.cc:460:run$1369 [3], S=\UART_RX.state) into $auto$simplemap.cc:420:simplemap_dff$4317 (SB_DFFE).
Merging $auto$simplemap.cc:277:simplemap_mux$4349 (A=1'0, B=$auto$wreduce.cc:460:run$1369 [4], S=\UART_RX.state) into $auto$simplemap.cc:420:simplemap_dff$4318 (SB_DFFE).
Merging $auto$simplemap.cc:277:simplemap_mux$4350 (A=1'0, B=$auto$wreduce.cc:460:run$1369 [5], S=\UART_RX.state) into $auto$simplemap.cc:420:simplemap_dff$4319 (SB_DFFE).
Merging $auto$simplemap.cc:277:simplemap_mux$4345 (A=1'0, B=$auto$simplemap.cc:309:simplemap_lut$10208, S=\UART_RX.state) into $auto$simplemap.cc:420:simplemap_dff$4314 (SB_DFFE).
Merging $auto$simplemap.cc:277:simplemap_mux$4351 (A=1'0, B=$auto$wreduce.cc:460:run$1369 [6], S=\UART_RX.state) into $auto$simplemap.cc:420:simplemap_dff$4320 (SB_DFFE).
Merging $auto$simplemap.cc:277:simplemap_mux$4369 (A=$auto$wreduce.cc:460:run$1370 [1], B=1'0, S=$techmap\UART_RX.$or$uart.v:203$429_Y) into $auto$simplemap.cc:420:simplemap_dff$4331 (SB_DFFE).
Merging $auto$simplemap.cc:277:simplemap_mux$4370 (A=$auto$wreduce.cc:460:run$1370 [2], B=1'0, S=$techmap\UART_RX.$or$uart.v:203$429_Y) into $auto$simplemap.cc:420:simplemap_dff$4332 (SB_DFFE).
Merging $auto$simplemap.cc:277:simplemap_mux$4371 (A=$auto$wreduce.cc:460:run$1370 [3], B=1'0, S=$techmap\UART_RX.$or$uart.v:203$429_Y) into $auto$simplemap.cc:420:simplemap_dff$4333 (SB_DFFE).
Merging $auto$simplemap.cc:277:simplemap_mux$4368 (A=$auto$simplemap.cc:309:simplemap_lut$10227, B=1'0, S=$techmap\UART_RX.$or$uart.v:203$429_Y) into $auto$simplemap.cc:420:simplemap_dff$4330 (SB_DFFE).
Merging $auto$simplemap.cc:277:simplemap_mux$4372 (A=$auto$wreduce.cc:460:run$1370 [4], B=1'0, S=$techmap\UART_RX.$or$uart.v:203$429_Y) into $auto$simplemap.cc:420:simplemap_dff$4334 (SB_DFFE).
Merging $auto$simplemap.cc:277:simplemap_mux$3610 (A=\RV32I.DE_rs1Data [10], B=1'0, S=\RV32I.DE_funct3 [2]) into $auto$simplemap.cc:420:simplemap_dff$2325 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$5835 (A=$auto$wreduce.cc:460:run$1372 [1], B=1'0, S=\UART_TX.bclk.reset) into $auto$simplemap.cc:420:simplemap_dff$5828 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$5836 (A=$auto$wreduce.cc:460:run$1372 [2], B=1'0, S=\UART_TX.bclk.reset) into $auto$simplemap.cc:420:simplemap_dff$5829 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$5837 (A=$auto$wreduce.cc:460:run$1372 [3], B=1'0, S=\UART_TX.bclk.reset) into $auto$simplemap.cc:420:simplemap_dff$5830 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$5838 (A=$auto$wreduce.cc:460:run$1372 [4], B=1'0, S=\UART_TX.bclk.reset) into $auto$simplemap.cc:420:simplemap_dff$5831 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$5839 (A=$auto$wreduce.cc:460:run$1372 [5], B=1'0, S=\UART_TX.bclk.reset) into $auto$simplemap.cc:420:simplemap_dff$5832 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$5840 (A=$auto$wreduce.cc:460:run$1372 [6], B=1'0, S=\UART_TX.bclk.reset) into $auto$simplemap.cc:420:simplemap_dff$5833 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$5876 (A=$auto$wreduce.cc:460:run$1371 [1], B=1'0, S=\UART_RX.bclk.reset) into $auto$simplemap.cc:420:simplemap_dff$5869 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$5877 (A=$auto$wreduce.cc:460:run$1371 [2], B=1'0, S=\UART_RX.bclk.reset) into $auto$simplemap.cc:420:simplemap_dff$5870 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$5878 (A=$auto$wreduce.cc:460:run$1371 [3], B=1'0, S=\UART_RX.bclk.reset) into $auto$simplemap.cc:420:simplemap_dff$5871 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$5879 (A=$auto$wreduce.cc:460:run$1371 [4], B=1'0, S=\UART_RX.bclk.reset) into $auto$simplemap.cc:420:simplemap_dff$5872 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$5880 (A=$auto$wreduce.cc:460:run$1371 [5], B=1'0, S=\UART_RX.bclk.reset) into $auto$simplemap.cc:420:simplemap_dff$5873 (SB_DFF).

4.40. Executing ICE40_OPT pass (performing simple optimizations).

4.40.1. Running ICE40 specific optimizations.

4.40.2. Executing OPT_EXPR pass (perform const folding).
Optimizing module SOCnexpo.

4.40.3. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\SOCnexpo'.
Removed a total of 453 cells.

4.40.4. Executing OPT_RMDFF pass (remove dff with constant values).

4.40.5. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \SOCnexpo..
Removed 359 unused cells and 2761 unused wires.

4.40.6. Rerunning OPT passes. (Removed registers in this run.)

4.40.7. Running ICE40 specific optimizations.

4.40.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module SOCnexpo.

4.40.9. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\SOCnexpo'.
Removed a total of 0 cells.

4.40.10. Executing OPT_RMDFF pass (remove dff with constant values).

4.40.11. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \SOCnexpo..

4.40.12. Rerunning OPT passes. (Removed registers in this run.)

4.40.13. Running ICE40 specific optimizations.

4.40.14. Executing OPT_EXPR pass (perform const folding).
Optimizing module SOCnexpo.

4.40.15. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\SOCnexpo'.
Removed a total of 0 cells.

4.40.16. Executing OPT_RMDFF pass (remove dff with constant values).

4.40.17. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \SOCnexpo..

4.40.18. Finished OPT passes. (There is nothing left to do.)

4.41. Executing TECHMAP pass (map to technology primitives).

4.41.1. Executing Verilog-2005 frontend: /home/jfdava/.apio/packages/toolchain-yosys/bin/../share/yosys/ice40/latches_map.v
Parsing Verilog input from `/home/jfdava/.apio/packages/toolchain-yosys/bin/../share/yosys/ice40/latches_map.v' to AST representation.
Generating RTLIL representation for module `\$_DLATCH_N_'.
Generating RTLIL representation for module `\$_DLATCH_P_'.
Successfully finished Verilog frontend.

4.41.2. Continuing TECHMAP pass.
No more expansions possible.

4.42. Executing ABC pass (technology mapping using ABC).

4.42.1. Extracting gate netlist of module `\SOCnexpo' to `<abc-temp-dir>/input.blif'..
Extracted 2385 gates and 3186 wires to a netlist network with 799 inputs and 424 outputs.

4.42.1.1. Executing ABC.
Running ABC command: <yosys-exe-dir>/yosys-abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC:
ABC: + read_blif <abc-temp-dir>/input.blif
ABC: + read_lut <abc-temp-dir>/lutdefs.txt
ABC: + strash
ABC: + ifraig
ABC: + scorr
ABC: Warning: The network is combinational (run "fraig" or "fraig_sweep").
ABC: + dc2
ABC: + dretime
ABC: + retime
ABC: + strash
ABC: + dch -f
ABC: + if
ABC: + mfs2
ABC: + lutpack -S 1
ABC: + dress
ABC: Total number of equiv classes                =     686.
ABC: Participating nodes from both networks       =    1497.
ABC: Participating nodes from the first network   =     719. (  60.07 % of nodes)
ABC: Participating nodes from the second network  =     778. (  65.00 % of nodes)
ABC: Node pairs (any polarity)                    =     719. (  60.07 % of names can be moved)
ABC: Node pairs (same polarity)                   =     525. (  43.86 % of names can be moved)
ABC: Total runtime =     0.44 sec
ABC: + write_blif <abc-temp-dir>/output.blif

4.42.1.2. Re-integrating ABC results.
ABC RESULTS:              $lut cells:     1196
ABC RESULTS:        internal signals:     1963
ABC RESULTS:           input signals:      799
ABC RESULTS:          output signals:      424
Removing temp directory.

4.43. Executing ICE40_WRAPCARRY pass (wrap carries).

4.44. Executing TECHMAP pass (map to technology primitives).

4.44.1. Executing Verilog-2005 frontend: /home/jfdava/.apio/packages/toolchain-yosys/bin/../share/yosys/ice40/cells_map.v
Parsing Verilog input from `/home/jfdava/.apio/packages/toolchain-yosys/bin/../share/yosys/ice40/cells_map.v' to AST representation.
Generating RTLIL representation for module `\$_DFF_N_'.
Generating RTLIL representation for module `\$_DFF_P_'.
Generating RTLIL representation for module `\$_DFFE_NN_'.
Generating RTLIL representation for module `\$_DFFE_PN_'.
Generating RTLIL representation for module `\$_DFFE_NP_'.
Generating RTLIL representation for module `\$_DFFE_PP_'.
Generating RTLIL representation for module `\$_DFF_NN0_'.
Generating RTLIL representation for module `\$_DFF_NN1_'.
Generating RTLIL representation for module `\$_DFF_PN0_'.
Generating RTLIL representation for module `\$_DFF_PN1_'.
Generating RTLIL representation for module `\$_DFF_NP0_'.
Generating RTLIL representation for module `\$_DFF_NP1_'.
Generating RTLIL representation for module `\$_DFF_PP0_'.
Generating RTLIL representation for module `\$_DFF_PP1_'.
Generating RTLIL representation for module `\$__DFFE_NN0'.
Generating RTLIL representation for module `\$__DFFE_NN1'.
Generating RTLIL representation for module `\$__DFFE_PN0'.
Generating RTLIL representation for module `\$__DFFE_PN1'.
Generating RTLIL representation for module `\$__DFFE_NP0'.
Generating RTLIL representation for module `\$__DFFE_NP1'.
Generating RTLIL representation for module `\$__DFFE_PP0'.
Generating RTLIL representation for module `\$__DFFE_PP1'.
Successfully finished Verilog frontend.

4.44.2. Continuing TECHMAP pass.
No more expansions possible.
Removed 27 unused cells and 1499 unused wires.

4.45. Executing OPT_LUT pass (optimize LUTs).
Discovering LUTs.
Number of LUTs:     1490
1-LUT               63
2-LUT              144
3-LUT              719
4-LUT              564
with \SB_CARRY     283

Eliminating LUTs.
Number of LUTs:     1490
1-LUT               63
2-LUT              144
3-LUT              719
4-LUT              564
with \SB_CARRY     283

Combining LUTs.
Number of LUTs:     1467
1-LUT               62
2-LUT              122
3-LUT              697
4-LUT              586
with \SB_CARRY     283

Eliminated 0 LUTs.
Combined 23 LUTs.

4.46. Executing TECHMAP pass (map to technology primitives).

4.46.1. Executing Verilog-2005 frontend: /home/jfdava/.apio/packages/toolchain-yosys/bin/../share/yosys/ice40/cells_map.v
Parsing Verilog input from `/home/jfdava/.apio/packages/toolchain-yosys/bin/../share/yosys/ice40/cells_map.v' to AST representation.
Generating RTLIL representation for module `\$_DFF_N_'.
Generating RTLIL representation for module `\$_DFF_P_'.
Generating RTLIL representation for module `\$_DFFE_NN_'.
Generating RTLIL representation for module `\$_DFFE_PN_'.
Generating RTLIL representation for module `\$_DFFE_NP_'.
Generating RTLIL representation for module `\$_DFFE_PP_'.
Generating RTLIL representation for module `\$_DFF_NN0_'.
Generating RTLIL representation for module `\$_DFF_NN1_'.
Generating RTLIL representation for module `\$_DFF_PN0_'.
Generating RTLIL representation for module `\$_DFF_PN1_'.
Generating RTLIL representation for module `\$_DFF_NP0_'.
Generating RTLIL representation for module `\$_DFF_NP1_'.
Generating RTLIL representation for module `\$_DFF_PP0_'.
Generating RTLIL representation for module `\$_DFF_PP1_'.
Generating RTLIL representation for module `\$__DFFE_NN0'.
Generating RTLIL representation for module `\$__DFFE_NN1'.
Generating RTLIL representation for module `\$__DFFE_PN0'.
Generating RTLIL representation for module `\$__DFFE_PN1'.
Generating RTLIL representation for module `\$__DFFE_NP0'.
Generating RTLIL representation for module `\$__DFFE_NP1'.
Generating RTLIL representation for module `\$__DFFE_PP0'.
Generating RTLIL representation for module `\$__DFFE_PP1'.
Generating RTLIL representation for module `\$lut'.
Successfully finished Verilog frontend.

4.46.2. Continuing TECHMAP pass.
Using template $paramod\$lut\WIDTH=3\LUT=8'00110101 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'11001010 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'01000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'01010011 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'10101100 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0011010100000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000001100000101 for cells of type $lut.
Using template $paramod\$lut\WIDTH=2\LUT=4'0001 for cells of type $lut.
Using template $paramod\$lut\WIDTH=2\LUT=4'1000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1010001100110011 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'11000101 for cells of type $lut.
Using template $paramod\$lut\WIDTH=2\LUT=4'0100 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'00010000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111010000000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1100101000000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000110000001010 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111000000010001 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0011111101010000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111001100000101 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000101100000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0011101000000011 for cells of type $lut.
Using template $paramod\$lut\WIDTH=1\LUT=2'01 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0110100110010110 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'00000001 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'00000111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'00111010 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0001000111110000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0011010101010011 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1010110000000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1100111110100000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111110000000101 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0001000100001111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000010100000011 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0101001100000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1110111000001111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'00001101 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000110100000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'11100000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1100010100000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1011101111110000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000000100000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1000000000000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0100000000000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000000000000001 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000011101110111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0001000000000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0111000000000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111110000001010 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000000000000111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0100111100000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1011000000000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000101110111011 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'10000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000000000001011 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1001011001101001 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'00001011 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'01110000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000000111111111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000101000001100 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1110111011110000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=2\LUT=4'1011 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000000001001111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'10111111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000000010111111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1110110000001110 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'11010000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111000100000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000000000011111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1101000000000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1010110011111111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'10110000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0101110000000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'00001110 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1110111100000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'01110001 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'10100011 for cells of type $lut.
Using template $paramod\$lut\WIDTH=2\LUT=4'0111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'01011100 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1100010111001100 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000000010010110 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111000011101110 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0011010111111111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000011100000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1000111100000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000000011111000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111111110110000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000000011110100 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0100111111110000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0111000001110111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1000100011110000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1010001111001100 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111111000000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000000011101111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1100111101010000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1110111111000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0111011111110000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1011111100000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1110000011101110 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1110111111111111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000000010001111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=2\LUT=4'1110 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'01001111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'10001111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0100000011111111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'11101111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'00011111 for cells of type $lut.
No more expansions possible.
Removed 0 unused cells and 2934 unused wires.

4.47. Executing AUTONAME pass.
Renamed 41384 objects in module SOCnexpo (80 iterations).

4.48. Executing HIERARCHY pass (managing design hierarchy).

4.48.1. Analyzing design hierarchy..
Top module:  \SOCnexpo

4.48.2. Analyzing design hierarchy..
Top module:  \SOCnexpo
Removed 0 unused modules.

4.49. Printing statistics.

=== SOCnexpo ===

Number of wires:               1287
Number of wire bits:           4338
Number of public wires:        1287
Number of public wire bits:    4338
Number of memories:               0
Number of memory bits:            0
Number of processes:              0
Number of cells:               2416
SB_CARRY                      298
SB_DFF                        213
SB_DFFE                        30
SB_DFFESR                      82
SB_DFFESS                       1
SB_DFFSR                      275
SB_DFFSS                       14
SB_LUT4                      1467
SB_RAM40_4K                    32
SB_RAM40_4KNW                   4

4.50. Executing CHECK pass (checking for obvious problems).
checking module SOCnexpo..
found and reported 0 problems.

4.51. Executing JSON backend.

Warnings: 2 unique messages, 2 total
End of script. Logfile hash: 4e5943985b
CPU: user 18.83s system 0.64s, MEM: 414.05 MB total, 410.73 MB resident
Yosys 0.9+932 (git sha1 UNKNOWN, i686-linux-gnu-g++ 7.3.0-16ubuntu3 -O3 -DNDEBUG)
Time spent: 35% 7x techmap (6 sec), 14% 22x opt_expr (2 sec), ...
nextpnr-ice40 --hx8k --package cb132 --json hardware.json --asc hardware.asc --pcf icefun.pcf
Info: Importing module SOCnexpo
Info: Rule checker, verifying imported design
Info: Checksum: 0xfe72844a

Info: constrained 'led[0]' to bel 'X22/Y33/io1'
Info: constrained 'led[1]' to bel 'X25/Y33/io0'
Info: constrained 'led[2]' to bel 'X13/Y33/io1'
Info: constrained 'led[3]' to bel 'X11/Y33/io0'
Info: constrained 'led[4]' to bel 'X17/Y33/io0'
Info: constrained 'led[5]' to bel 'X14/Y33/io1'
Info: constrained 'led[6]' to bel 'X5/Y33/io0'
Info: constrained 'led[7]' to bel 'X4/Y33/io0'
Info: constrained 'lcol[3]' to bel 'X30/Y33/io1'
Info: constrained 'lcol[2]' to bel 'X27/Y33/io0'
Info: constrained 'lcol[1]' to bel 'X16/Y33/io1'
Info: constrained 'lcol[0]' to bel 'X8/Y33/io1'
Warning: unmatched constraint 'spkp' (on line 13)
Warning: unmatched constraint 'spkm' (on line 14)
Info: constrained 'key[0]' to bel 'X28/Y33/io1'
Info: constrained 'key[1]' to bel 'X11/Y33/io1'
Info: constrained 'key[2]' to bel 'X26/Y33/io0'
Info: constrained 'key[3]' to bel 'X10/Y33/io1'
Info: constrained 'clk12MHz' to bel 'X16/Y0/io1'
Info: constrained 'RXD' to bel 'X0/Y4/io1'
Info: constrained 'TXD' to bel 'X0/Y4/io0'

Info: Packing constants..
Info: Packing IOs..
Info: Packing LUT-FFs..
Info:     1100 LCs used as LUT4 only
Info:      367 LCs used as LUT4 and DFF
Info: Packing non-LUT FFs..
Info:      248 LCs used as DFF only
Info: Packing carries..
Info:       26 LCs used as CARRY only
Info: Packing RAMs..
Info: Placing PLLs..
Info: Packing special functions..
Info: Promoting globals..
Info: promoting clk12MHz$SB_IO_IN (fanout 671)
Info: promoting rst [reset] (fanout 269)
Info: promoting RV32I.DE_funct3[2] [reset] (fanout 27)
Info: promoting RV32I.EM_CSRWrite_SB_LUT4_I2_O [cen] (fanout 32)
Info: promoting $PACKER_GND_NET (fanout 16)
Info: Constraining chains...
Info:       14 LCs used to legalise carry chains.
Info: Checksum: 0x36b17baf

Info: Annotating ports with timing budgets for target frequency 12.00 MHz
Info: Checksum: 0x5c9722c0

Info: Device utilisation:
Info: 	         ICESTORM_LC:  1757/ 7680    22%
Info: 	        ICESTORM_RAM:    36/   32   112%
Info: 	               SB_IO:    19/  256     7%
Info: 	               SB_GB:     5/    8    62%
Info: 	        ICESTORM_PLL:     0/    2     0%
Info: 	         SB_WARMBOOT:     0/    1     0%

Info: Placed 19 cells based on constraints.
ERROR: Unable to place cell 'RV32I.reg32.WORKREG.0.0.0_RAM', no Bels remaining of type 'ICESTORM_RAM'
2 warnings, 1 error
scons: *** [hardware.asc] Error 255
/home/jfdava/.apio
[Sun Aug 20 00:15:10 2023] Processing icefun
--------------------------------------------------------------------------------
nextpnr-ice40 --hx8k --package cb132 --json hardware.json --asc hardware.asc --pcf icefun.pcf
Info: Importing module SOCnexpo
Info: Rule checker, verifying imported design
Info: Checksum: 0xfe72844a

Info: constrained 'led[0]' to bel 'X22/Y33/io1'
Info: constrained 'led[1]' to bel 'X25/Y33/io0'
Info: constrained 'led[2]' to bel 'X13/Y33/io1'
Info: constrained 'led[3]' to bel 'X11/Y33/io0'
Info: constrained 'led[4]' to bel 'X17/Y33/io0'
Info: constrained 'led[5]' to bel 'X14/Y33/io1'
Info: constrained 'led[6]' to bel 'X5/Y33/io0'
Info: constrained 'led[7]' to bel 'X4/Y33/io0'
Info: constrained 'lcol[3]' to bel 'X30/Y33/io1'
Info: constrained 'lcol[2]' to bel 'X27/Y33/io0'
Info: constrained 'lcol[1]' to bel 'X16/Y33/io1'
Info: constrained 'lcol[0]' to bel 'X8/Y33/io1'
Warning: unmatched constraint 'spkp' (on line 13)
Warning: unmatched constraint 'spkm' (on line 14)
Info: constrained 'key[0]' to bel 'X28/Y33/io1'
Info: constrained 'key[1]' to bel 'X11/Y33/io1'
Info: constrained 'key[2]' to bel 'X26/Y33/io0'
Info: constrained 'key[3]' to bel 'X10/Y33/io1'
Info: constrained 'clk12MHz' to bel 'X16/Y0/io1'
Info: constrained 'RXD' to bel 'X0/Y4/io1'
Info: constrained 'TXD' to bel 'X0/Y4/io0'

Info: Packing constants..
Info: Packing IOs..
Info: Packing LUT-FFs..
Info:     1100 LCs used as LUT4 only
Info:      367 LCs used as LUT4 and DFF
Info: Packing non-LUT FFs..
Info:      248 LCs used as DFF only
Info: Packing carries..
Info:       26 LCs used as CARRY only
Info: Packing RAMs..
Info: Placing PLLs..
Info: Packing special functions..
Info: Promoting globals..
Info: promoting clk12MHz$SB_IO_IN (fanout 671)
Info: promoting rst [reset] (fanout 269)
Info: promoting RV32I.DE_funct3[2] [reset] (fanout 27)
Info: promoting RV32I.EM_CSRWrite_SB_LUT4_I2_O [cen] (fanout 32)
Info: promoting $PACKER_GND_NET (fanout 16)
Info: Constraining chains...
Info:       14 LCs used to legalise carry chains.
Info: Checksum: 0x36b17baf

Info: Annotating ports with timing budgets for target frequency 12.00 MHz
Info: Checksum: 0x5c9722c0

Info: Device utilisation:
Info: 	         ICESTORM_LC:  1757/ 7680    22%
Info: 	        ICESTORM_RAM:    36/   32   112%
Info: 	               SB_IO:    19/  256     7%
Info: 	               SB_GB:     5/    8    62%
Info: 	        ICESTORM_PLL:     0/    2     0%
Info: 	         SB_WARMBOOT:     0/    1     0%

Info: Placed 19 cells based on constraints.
ERROR: Unable to place cell 'RV32I.reg32.WORKREG.0.0.0_RAM', no Bels remaining of type 'ICESTORM_RAM'
2 warnings, 1 error
scons: *** [hardware.asc] Error 255
/home/jfdava/.apio
[Sun Aug 20 00:15:29 2023] Processing icefun
--------------------------------------------------------------------------------
yosys -p "synth_ice40 -json hardware.json" ControladorMatrizLed.v SOCnexpoV8_.v uart.v

/----------------------------------------------------------------------------\
|                                                                            |
|  yosys -- Yosys Open SYnthesis Suite                                       |
|                                                                            |
|  Copyright (C) 2012 - 2019  Clifford Wolf <clifford@clifford.at>           |
|                                                                            |
|  Permission to use, copy, modify, and/or distribute this software for any  |
|  purpose with or without fee is hereby granted, provided that the above    |
|  copyright notice and this permission notice appear in all copies.         |
|                                                                            |
|  THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES  |
|  WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF          |
|  MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR   |
|  ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES    |
|  WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN     |
|  ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF   |
|  OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.            |
|                                                                            |
\----------------------------------------------------------------------------/

Yosys 0.9+932 (git sha1 UNKNOWN, i686-linux-gnu-g++ 7.3.0-16ubuntu3 -O3 -DNDEBUG)


-- Parsing `ControladorMatrizLed.v' using frontend `verilog' --

1. Executing Verilog-2005 frontend: ControladorMatrizLed.v
Parsing Verilog input from `ControladorMatrizLed.v' to AST representation.
Generating RTLIL representation for module `\ControladorMatrizLed'.
Successfully finished Verilog frontend.

-- Parsing `SOCnexpoV8_.v' using frontend `verilog' --

2. Executing Verilog-2005 frontend: SOCnexpoV8_.v
Parsing Verilog input from `SOCnexpoV8_.v' to AST representation.
Generating RTLIL representation for module `\registros'.
Generating RTLIL representation for module `\ALU'.
Generating RTLIL representation for module `\StoretoMEM'.
Generating RTLIL representation for module `\LoadfromMEM'.
Generating RTLIL representation for module `\RV32nexpo'.
Generating RTLIL representation for module `\SOCnexpo'.
Generating RTLIL representation for module `\memory'.
Successfully finished Verilog frontend.

-- Parsing `uart.v' using frontend `verilog' --

3. Executing Verilog-2005 frontend: uart.v
Parsing Verilog input from `uart.v' to AST representation.
Generating RTLIL representation for module `\BaudClock'.
Generating RTLIL representation for module `\serialTX'.
Generating RTLIL representation for module `\serialRX'.
Successfully finished Verilog frontend.

-- Running command `synth_ice40 -json hardware.json' --

4. Executing SYNTH_ICE40 pass.

4.1. Executing Verilog-2005 frontend: /home/jfdava/.apio/packages/toolchain-yosys/bin/../share/yosys/ice40/cells_sim.v
Parsing Verilog input from `/home/jfdava/.apio/packages/toolchain-yosys/bin/../share/yosys/ice40/cells_sim.v' to AST representation.
Generating RTLIL representation for module `\SB_IO'.
Generating RTLIL representation for module `\SB_GB_IO'.
Generating RTLIL representation for module `\SB_GB'.
Generating RTLIL representation for module `\SB_LUT4'.
Generating RTLIL representation for module `\SB_CARRY'.
Generating RTLIL representation for module `\SB_DFF'.
Generating RTLIL representation for module `\SB_DFFE'.
Generating RTLIL representation for module `\SB_DFFSR'.
Generating RTLIL representation for module `\SB_DFFR'.
Generating RTLIL representation for module `\SB_DFFSS'.
Generating RTLIL representation for module `\SB_DFFS'.
Generating RTLIL representation for module `\SB_DFFESR'.
Generating RTLIL representation for module `\SB_DFFER'.
Generating RTLIL representation for module `\SB_DFFESS'.
Generating RTLIL representation for module `\SB_DFFES'.
Generating RTLIL representation for module `\SB_DFFN'.
Generating RTLIL representation for module `\SB_DFFNE'.
Generating RTLIL representation for module `\SB_DFFNSR'.
Generating RTLIL representation for module `\SB_DFFNR'.
Generating RTLIL representation for module `\SB_DFFNSS'.
Generating RTLIL representation for module `\SB_DFFNS'.
Generating RTLIL representation for module `\SB_DFFNESR'.
Generating RTLIL representation for module `\SB_DFFNER'.
Generating RTLIL representation for module `\SB_DFFNESS'.
Generating RTLIL representation for module `\SB_DFFNES'.
Generating RTLIL representation for module `\SB_RAM40_4K'.
Generating RTLIL representation for module `\SB_RAM40_4KNR'.
Generating RTLIL representation for module `\SB_RAM40_4KNW'.
Generating RTLIL representation for module `\SB_RAM40_4KNRNW'.
Generating RTLIL representation for module `\ICESTORM_LC'.
Generating RTLIL representation for module `\SB_PLL40_CORE'.
Generating RTLIL representation for module `\SB_PLL40_PAD'.
Generating RTLIL representation for module `\SB_PLL40_2_PAD'.
Generating RTLIL representation for module `\SB_PLL40_2F_CORE'.
Generating RTLIL representation for module `\SB_PLL40_2F_PAD'.
Generating RTLIL representation for module `\SB_WARMBOOT'.
Generating RTLIL representation for module `\SB_SPRAM256KA'.
Generating RTLIL representation for module `\SB_HFOSC'.
Generating RTLIL representation for module `\SB_LFOSC'.
Generating RTLIL representation for module `\SB_RGBA_DRV'.
Generating RTLIL representation for module `\SB_LED_DRV_CUR'.
Generating RTLIL representation for module `\SB_RGB_DRV'.
Generating RTLIL representation for module `\SB_I2C'.
Generating RTLIL representation for module `\SB_SPI'.
Generating RTLIL representation for module `\SB_LEDDA_IP'.
Generating RTLIL representation for module `\SB_FILTER_50NS'.
Generating RTLIL representation for module `\SB_IO_I3C'.
Generating RTLIL representation for module `\SB_IO_OD'.
Generating RTLIL representation for module `\SB_MAC16'.
Generating RTLIL representation for module `\ICESTORM_RAM'.
Successfully finished Verilog frontend.

4.2. Executing HIERARCHY pass (managing design hierarchy).

4.2.1. Analyzing design hierarchy..
Top module:  \SOCnexpo
Used module:     \serialRX
Used module:         \BaudClock
Used module:     \serialTX
Used module:     \ControladorMatrizLed
Used module:     \memory
Used module:     \RV32nexpo
Used module:         \LoadfromMEM
Used module:         \StoretoMEM
Used module:         \ALU
Used module:         \registros
Parameter \TAM = 2048

4.2.2. Executing AST frontend in derive mode using pre-parsed AST for module `\memory'.
Parameter \TAM = 2048
Generating RTLIL representation for module `$paramod\memory\TAM=2048'.
Parameter 1 (\BAUD) = 115200

4.2.3. Executing AST frontend in derive mode using pre-parsed AST for module `\BaudClock'.
Parameter 1 (\BAUD) = 115200
Generating RTLIL representation for module `$paramod\BaudClock\BAUD=115200'.
Parameter 1 (\BAUD) = 115200
Found cached RTLIL representation for module `$paramod\BaudClock\BAUD=115200'.

4.2.4. Analyzing design hierarchy..
Top module:  \SOCnexpo
Used module:     \serialRX
Used module:         $paramod\BaudClock\BAUD=115200
Used module:     \serialTX
Used module:     \ControladorMatrizLed
Used module:     $paramod\memory\TAM=2048
Used module:     \RV32nexpo
Used module:         \LoadfromMEM
Used module:         \StoretoMEM
Used module:         \ALU
Used module:         \registros

4.2.5. Analyzing design hierarchy..
Top module:  \SOCnexpo
Used module:     \serialRX
Used module:         $paramod\BaudClock\BAUD=115200
Used module:     \serialTX
Used module:     \ControladorMatrizLed
Used module:     $paramod\memory\TAM=2048
Used module:     \RV32nexpo
Used module:         \LoadfromMEM
Used module:         \StoretoMEM
Used module:         \ALU
Used module:         \registros
Removing unused module `\BaudClock'.
Removing unused module `\memory'.
Removed 2 unused modules.

4.3. Executing PROC pass (convert processes to netlists).

4.3.1. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Removing empty process `$paramod\memory\TAM=2048.$proc$SOCnexpoV8_.v:257$628'.
Removing empty process `SOCnexpo.$proc$SOCnexpoV8_.v:41$389'.
Cleaned up 0 empty switches.

4.3.2. Executing PROC_RMDEAD pass (remove dead branches from decision trees).
Marked 1 switch rules as full_case in process $proc$uart.v:202$456 in module serialRX.
Marked 1 switch rules as full_case in process $proc$uart.v:169$450 in module serialRX.
Marked 1 switch rules as full_case in process $proc$uart.v:156$449 in module serialRX.
Marked 1 switch rules as full_case in process $proc$uart.v:94$434 in module serialTX.
Marked 1 switch rules as full_case in process $proc$uart.v:81$432 in module serialTX.
Marked 1 switch rules as full_case in process $proc$uart.v:72$431 in module serialTX.
Marked 1 switch rules as full_case in process $proc$uart.v:35$631 in module $paramod\BaudClock\BAUD=115200.
Marked 2 switch rules as full_case in process $proc$SOCnexpoV8_.v:209$384 in module SOCnexpo.
Marked 2 switch rules as full_case in process $proc$SOCnexpoV8_.v:187$383 in module SOCnexpo.
Marked 1 switch rules as full_case in process $proc$SOCnexpoV8_.v:150$381 in module SOCnexpo.
Marked 3 switch rules as full_case in process $proc$SOCnexpoV8_.v:129$380 in module SOCnexpo.
Removed 1 dead cases from process $proc$SOCnexpoV8_.v:83$372 in module SOCnexpo.
Marked 1 switch rules as full_case in process $proc$SOCnexpoV8_.v:83$372 in module SOCnexpo.
Marked 1 switch rules as full_case in process $proc$Procesador_V2.0b/RV32nexpo.v:487$348 in module RV32nexpo.
Marked 1 switch rules as full_case in process $proc$Procesador_V2.0b/RV32nexpo.v:478$346 in module RV32nexpo.
Marked 1 switch rules as full_case in process $proc$Procesador_V2.0b/RV32nexpo.v:396$337 in module RV32nexpo.
Marked 1 switch rules as full_case in process $proc$Procesador_V2.0b/RV32nexpo.v:168$294 in module RV32nexpo.
Marked 1 switch rules as full_case in process $proc$Procesador_V2.0b/RV32nexpo.v:104$265 in module RV32nexpo.
Marked 1 switch rules as full_case in process $proc$Procesador_V2.0b/RV32nexpo.v:58$262 in module RV32nexpo.
Marked 2 switch rules as full_case in process $proc$ControladorMatrizLed.v:41$4 in module ControladorMatrizLed.
Marked 1 switch rules as full_case in process $proc$ControladorMatrizLed.v:24$1 in module ControladorMatrizLed.
Removed a total of 1 dead cases.

4.3.3. Executing PROC_PRUNE pass (remove redundant assignments in processes).
Removed 9 redundant assignments.
Promoted 152 assignments to connections.

4.3.4. Executing PROC_INIT pass (extract init attributes).
Found init rule in `\serialRX.$proc$uart.v:226$469'.
Set init value: \rcv = 1'0
Found init rule in `\serialRX.$proc$uart.v:219$468'.
Set init value: \data = 8'00000000
Found init rule in `\serialRX.$proc$uart.v:201$467'.
Set init value: \cont = 5'00000
Found init rule in `\serialRX.$proc$uart.v:190$466'.
Set init value: \sr = 9'000000000
Found init rule in `\serialRX.$proc$uart.v:167$465'.
Set init value: \div2counter = 7'0000000
Found init rule in `\serialRX.$proc$uart.v:154$464'.
Set init value: \state = 1'0
Found init rule in `\serialRX.$proc$uart.v:146$463'.
Set init value: \q_t0 = 1'0
Found init rule in `\serialTX.$proc$uart.v:107$443'.
Set init value: \done = 1'0
Found init rule in `\serialTX.$proc$uart.v:93$442'.
Set init value: \bits = 4'0000
Found init rule in `\serialTX.$proc$uart.v:88$441'.
Set init value: \TX = 1'1
Found init rule in `\serialTX.$proc$uart.v:80$440'.
Set init value: \q = 9'111111111
Found init rule in `\serialTX.$proc$uart.v:64$439'.
Set init value: \q_re = 1'0
Found init rule in `\serialTX.$proc$uart.v:55$438'.
Set init value: \state = 1'0
Found init rule in `$paramod\BaudClock\BAUD=115200.$proc$uart.v:29$634'.
Set init value: \divcounter = 7'0000000
Found init rule in `\SOCnexpo.$proc$SOCnexpoV8_.v:149$390'.
Set init value: \leds_en = 1'1
Found init rule in `\SOCnexpo.$proc$SOCnexpoV8_.v:27$388'.
Set init value: \Espera = 8'00000000
Found init rule in `\SOCnexpo.$proc$SOCnexpoV8_.v:26$387'.
Set init value: \rst = 1'1
Found init rule in `\RV32nexpo.$proc$Procesador_V2.0b/RV32nexpo.v:122$353'.
Set init value: \FD_nop = 1'1
Found init rule in `\RV32nexpo.$proc$Procesador_V2.0b/RV32nexpo.v:96$352'.
Set init value: \F_pc = 0
Set init value: \FD_pc = 0
Found init rule in `\ControladorMatrizLed.$proc$ControladorMatrizLed.v:23$12'.
Set init value: \timer = 12'000000000000

4.3.5. Executing PROC_ARST pass (detect async resets in processes).

4.3.6. Executing PROC_MUX pass (convert decision trees to multiplexers).
Creating decoders for process `\serialRX.$proc$uart.v:226$469'.
Creating decoders for process `\serialRX.$proc$uart.v:219$468'.
Creating decoders for process `\serialRX.$proc$uart.v:201$467'.
Creating decoders for process `\serialRX.$proc$uart.v:190$466'.
Creating decoders for process `\serialRX.$proc$uart.v:167$465'.
Creating decoders for process `\serialRX.$proc$uart.v:154$464'.
Creating decoders for process `\serialRX.$proc$uart.v:146$463'.
Creating decoders for process `\serialRX.$proc$uart.v:227$462'.
Creating decoders for process `\serialRX.$proc$uart.v:221$461'.
1/1: $0\data[7:0]
Creating decoders for process `\serialRX.$proc$uart.v:202$456'.
1/1: $0\cont[4:0]
Creating decoders for process `\serialRX.$proc$uart.v:191$454'.
1/1: $0\sr[8:0]
Creating decoders for process `\serialRX.$proc$uart.v:169$450'.
1/1: $0\div2counter[6:0]
Creating decoders for process `\serialRX.$proc$uart.v:156$449'.
1/1: $0\state[0:0]
Creating decoders for process `\serialRX.$proc$uart.v:147$446'.
Creating decoders for process `\serialRX.$proc$uart.v:142$445'.
Creating decoders for process `\serialRX.$proc$uart.v:139$444'.
Creating decoders for process `\serialTX.$proc$uart.v:107$443'.
Creating decoders for process `\serialTX.$proc$uart.v:93$442'.
Creating decoders for process `\serialTX.$proc$uart.v:88$441'.
Creating decoders for process `\serialTX.$proc$uart.v:80$440'.
Creating decoders for process `\serialTX.$proc$uart.v:64$439'.
Creating decoders for process `\serialTX.$proc$uart.v:55$438'.
Creating decoders for process `\serialTX.$proc$uart.v:108$437'.
Creating decoders for process `\serialTX.$proc$uart.v:94$434'.
1/1: $0\bits[3:0]
Creating decoders for process `\serialTX.$proc$uart.v:89$433'.
Creating decoders for process `\serialTX.$proc$uart.v:81$432'.
1/1: $0\q[8:0]
Creating decoders for process `\serialTX.$proc$uart.v:72$431'.
1/1: $0\state[0:0]
Creating decoders for process `\serialTX.$proc$uart.v:66$428'.
Creating decoders for process `$paramod\BaudClock\BAUD=115200.$proc$uart.v:29$634'.
Creating decoders for process `$paramod\BaudClock\BAUD=115200.$proc$uart.v:35$631'.
1/1: $0\divcounter[6:0]
Creating decoders for process `$paramod\memory\TAM=2048.$proc$SOCnexpoV8_.v:261$609'.
1/12: $0$memwr$\memArray$SOCnexpoV8_.v:263$598_EN[31:0]$612
2/12: $0$memwr$\memArray$SOCnexpoV8_.v:263$598_DATA[31:0]$611
3/12: $0$memwr$\memArray$SOCnexpoV8_.v:263$598_ADDR[10:0]$610
4/12: $0$memwr$\memArray$SOCnexpoV8_.v:264$599_EN[31:0]$615
5/12: $0$memwr$\memArray$SOCnexpoV8_.v:264$599_DATA[31:0]$614
6/12: $0$memwr$\memArray$SOCnexpoV8_.v:264$599_ADDR[10:0]$613
7/12: $0$memwr$\memArray$SOCnexpoV8_.v:265$600_EN[31:0]$618
8/12: $0$memwr$\memArray$SOCnexpoV8_.v:265$600_DATA[31:0]$617
9/12: $0$memwr$\memArray$SOCnexpoV8_.v:265$600_ADDR[10:0]$616
10/12: $0$memwr$\memArray$SOCnexpoV8_.v:266$601_EN[31:0]$621
11/12: $0$memwr$\memArray$SOCnexpoV8_.v:266$601_DATA[31:0]$620
12/12: $0$memwr$\memArray$SOCnexpoV8_.v:266$601_ADDR[10:0]$619
Creating decoders for process `\SOCnexpo.$proc$SOCnexpoV8_.v:149$390'.
Creating decoders for process `\SOCnexpo.$proc$SOCnexpoV8_.v:27$388'.
Creating decoders for process `\SOCnexpo.$proc$SOCnexpoV8_.v:26$387'.
Creating decoders for process `\SOCnexpo.$proc$SOCnexpoV8_.v:209$384'.
1/1: $0\rx_readed[0:0]
Creating decoders for process `\SOCnexpo.$proc$SOCnexpoV8_.v:187$383'.
1/1: $0\tx_ready[0:0]
Creating decoders for process `\SOCnexpo.$proc$SOCnexpoV8_.v:150$381'.
1/1: $0\leds_en[0:0]
Creating decoders for process `\SOCnexpo.$proc$SOCnexpoV8_.v:129$380'.
1/4: $0\leds4[7:0]
2/4: $0\leds1[7:0]
3/4: $0\leds3[7:0]
4/4: $0\leds2[7:0]
Creating decoders for process `\SOCnexpo.$proc$SOCnexpoV8_.v:83$372'.
1/1: $1\palabra[31:0]
Creating decoders for process `\SOCnexpo.$proc$SOCnexpoV8_.v:46$358'.
Creating decoders for process `\SOCnexpo.$proc$SOCnexpoV8_.v:30$356'.
1/1: $0\rst[0:0]
Creating decoders for process `\SOCnexpo.$proc$SOCnexpoV8_.v:28$354'.
Creating decoders for process `\RV32nexpo.$proc$Procesador_V2.0b/RV32nexpo.v:122$353'.
Creating decoders for process `\RV32nexpo.$proc$Procesador_V2.0b/RV32nexpo.v:96$352'.
Creating decoders for process `\RV32nexpo.$proc$Procesador_V2.0b/RV32nexpo.v:487$348'.
1/2: $0\instret[63:0]
2/2: $0\cycle[63:0]
Creating decoders for process `\RV32nexpo.$proc$Procesador_V2.0b/RV32nexpo.v:478$346'.
1/1: $0\PWM_[31:0]
Creating decoders for process `\RV32nexpo.$proc$Procesador_V2.0b/RV32nexpo.v:438$343'.
Creating decoders for process `\RV32nexpo.$proc$Procesador_V2.0b/RV32nexpo.v:396$337'.
1/1: $1\M_CSRData[31:0]
Creating decoders for process `\RV32nexpo.$proc$Procesador_V2.0b/RV32nexpo.v:359$334'.
Creating decoders for process `\RV32nexpo.$proc$Procesador_V2.0b/RV32nexpo.v:288$323'.
Creating decoders for process `\RV32nexpo.$proc$Procesador_V2.0b/RV32nexpo.v:168$294'.
1/1: $1\D_imm[31:0]
Creating decoders for process `\RV32nexpo.$proc$Procesador_V2.0b/RV32nexpo.v:104$265'.
1/3: $0\FD_nop[0:0]
2/3: $0\FD_pc[31:0]
3/3: $0\F_pc[31:0]
Creating decoders for process `\RV32nexpo.$proc$Procesador_V2.0b/RV32nexpo.v:63$263'.
Creating decoders for process `\RV32nexpo.$proc$Procesador_V2.0b/RV32nexpo.v:58$262'.
1/1: $0\state[2:0]
Creating decoders for process `\ALU.$proc$Procesador_V2.0b/ALU.v:22$239'.
Creating decoders for process `\ALU.$proc$Procesador_V2.0b/ALU.v:67$224'.
Creating decoders for process `\ALU.$proc$Procesador_V2.0b/ALU.v:54$195'.
Creating decoders for process `\registros.$proc$Procesador_V2.0b/registros_32.v:28$117'.
Creating decoders for process `\registros.$proc$Procesador_V2.0b/registros_32.v:41$80'.
1/3: $0$memwr$\WORKREG$Procesador_V2.0b/registros_32.v:43$77_EN[31:0]$83
2/3: $0$memwr$\WORKREG$Procesador_V2.0b/registros_32.v:43$77_DATA[31:0]$82
3/3: $0$memwr$\WORKREG$Procesador_V2.0b/registros_32.v:43$77_ADDR[4:0]$81
Creating decoders for process `\ControladorMatrizLed.$proc$ControladorMatrizLed.v:23$12'.
Creating decoders for process `\ControladorMatrizLed.$proc$ControladorMatrizLed.v:21$11'.
Creating decoders for process `\ControladorMatrizLed.$proc$ControladorMatrizLed.v:41$4'.
1/2: $0\row[7:0]
2/2: $0\act_row[3:0]
Creating decoders for process `\ControladorMatrizLed.$proc$ControladorMatrizLed.v:24$1'.
1/1: $1\timer[11:0]

4.3.7. Executing PROC_DLATCH pass (convert process syncs to latches).
No latch inferred for signal `\SOCnexpo.\palabra' from process `\SOCnexpo.$proc$SOCnexpoV8_.v:83$372'.
No latch inferred for signal `\RV32nexpo.\M_CSRData' from process `\RV32nexpo.$proc$Procesador_V2.0b/RV32nexpo.v:396$337'.
No latch inferred for signal `\RV32nexpo.\D_imm' from process `\RV32nexpo.$proc$Procesador_V2.0b/RV32nexpo.v:168$294'.
No latch inferred for signal `\RV32nexpo.\nextState' from process `\RV32nexpo.$proc$Procesador_V2.0b/RV32nexpo.v:63$263'.
No latch inferred for signal `\RV32nexpo.\loadpcNext' from process `\RV32nexpo.$proc$Procesador_V2.0b/RV32nexpo.v:63$263'.
No latch inferred for signal `\ALU.$func$\flip32$Procesador_V2.0b/ALU.v:37$182$\flip32' from process `\ALU.$proc$Procesador_V2.0b/ALU.v:22$239'.
No latch inferred for signal `\ALU.$func$\flip32$Procesador_V2.0b/ALU.v:37$184$\flip32' from process `\ALU.$proc$Procesador_V2.0b/ALU.v:22$239'.
No latch inferred for signal `\ALU.$func$\flip32$Procesador_V2.0b/ALU.v:37$184$\x' from process `\ALU.$proc$Procesador_V2.0b/ALU.v:22$239'.
No latch inferred for signal `\ALU.\branch' from process `\ALU.$proc$Procesador_V2.0b/ALU.v:67$224'.
No latch inferred for signal `\ALU.\ALUout' from process `\ALU.$proc$Procesador_V2.0b/ALU.v:54$195'.
No latch inferred for signal `\ALU.$func$\flip32$Procesador_V2.0b/ALU.v:57$183$\flip32' from process `\ALU.$proc$Procesador_V2.0b/ALU.v:54$195'.
No latch inferred for signal `\ALU.$func$\flip32$Procesador_V2.0b/ALU.v:57$183$\x' from process `\ALU.$proc$Procesador_V2.0b/ALU.v:54$195'.
No latch inferred for signal `\registros.\i' from process `\registros.$proc$Procesador_V2.0b/registros_32.v:28$117'.
No latch inferred for signal `\registros.$memwr$\WORKREG$Procesador_V2.0b/registros_32.v:30$45_ADDR' from process `\registros.$proc$Procesador_V2.0b/registros_32.v:28$117'.
No latch inferred for signal `\registros.$memwr$\WORKREG$Procesador_V2.0b/registros_32.v:30$45_DATA' from process `\registros.$proc$Procesador_V2.0b/registros_32.v:28$117'.
No latch inferred for signal `\registros.$memwr$\WORKREG$Procesador_V2.0b/registros_32.v:30$46_ADDR' from process `\registros.$proc$Procesador_V2.0b/registros_32.v:28$117'.
No latch inferred for signal `\registros.$memwr$\WORKREG$Procesador_V2.0b/registros_32.v:30$46_DATA' from process `\registros.$proc$Procesador_V2.0b/registros_32.v:28$117'.
No latch inferred for signal `\registros.$memwr$\WORKREG$Procesador_V2.0b/registros_32.v:30$47_ADDR' from process `\registros.$proc$Procesador_V2.0b/registros_32.v:28$117'.
No latch inferred for signal `\registros.$memwr$\WORKREG$Procesador_V2.0b/registros_32.v:30$47_DATA' from process `\registros.$proc$Procesador_V2.0b/registros_32.v:28$117'.
No latch inferred for signal `\registros.$memwr$\WORKREG$Procesador_V2.0b/registros_32.v:30$48_ADDR' from process `\registros.$proc$Procesador_V2.0b/registros_32.v:28$117'.
No latch inferred for signal `\registros.$memwr$\WORKREG$Procesador_V2.0b/registros_32.v:30$48_DATA' from process `\registros.$proc$Procesador_V2.0b/registros_32.v:28$117'.
No latch inferred for signal `\registros.$memwr$\WORKREG$Procesador_V2.0b/registros_32.v:30$49_ADDR' from process `\registros.$proc$Procesador_V2.0b/registros_32.v:28$117'.
No latch inferred for signal `\registros.$memwr$\WORKREG$Procesador_V2.0b/registros_32.v:30$49_DATA' from process `\registros.$proc$Procesador_V2.0b/registros_32.v:28$117'.
No latch inferred for signal `\registros.$memwr$\WORKREG$Procesador_V2.0b/registros_32.v:30$50_ADDR' from process `\registros.$proc$Procesador_V2.0b/registros_32.v:28$117'.
No latch inferred for signal `\registros.$memwr$\WORKREG$Procesador_V2.0b/registros_32.v:30$50_DATA' from process `\registros.$proc$Procesador_V2.0b/registros_32.v:28$117'.
No latch inferred for signal `\registros.$memwr$\WORKREG$Procesador_V2.0b/registros_32.v:30$51_ADDR' from process `\registros.$proc$Procesador_V2.0b/registros_32.v:28$117'.
No latch inferred for signal `\registros.$memwr$\WORKREG$Procesador_V2.0b/registros_32.v:30$51_DATA' from process `\registros.$proc$Procesador_V2.0b/registros_32.v:28$117'.
No latch inferred for signal `\registros.$memwr$\WORKREG$Procesador_V2.0b/registros_32.v:30$52_ADDR' from process `\registros.$proc$Procesador_V2.0b/registros_32.v:28$117'.
No latch inferred for signal `\registros.$memwr$\WORKREG$Procesador_V2.0b/registros_32.v:30$52_DATA' from process `\registros.$proc$Procesador_V2.0b/registros_32.v:28$117'.
No latch inferred for signal `\registros.$memwr$\WORKREG$Procesador_V2.0b/registros_32.v:30$53_ADDR' from process `\registros.$proc$Procesador_V2.0b/registros_32.v:28$117'.
No latch inferred for signal `\registros.$memwr$\WORKREG$Procesador_V2.0b/registros_32.v:30$53_DATA' from process `\registros.$proc$Procesador_V2.0b/registros_32.v:28$117'.
No latch inferred for signal `\registros.$memwr$\WORKREG$Procesador_V2.0b/registros_32.v:30$54_ADDR' from process `\registros.$proc$Procesador_V2.0b/registros_32.v:28$117'.
No latch inferred for signal `\registros.$memwr$\WORKREG$Procesador_V2.0b/registros_32.v:30$54_DATA' from process `\registros.$proc$Procesador_V2.0b/registros_32.v:28$117'.
No latch inferred for signal `\registros.$memwr$\WORKREG$Procesador_V2.0b/registros_32.v:30$55_ADDR' from process `\registros.$proc$Procesador_V2.0b/registros_32.v:28$117'.
No latch inferred for signal `\registros.$memwr$\WORKREG$Procesador_V2.0b/registros_32.v:30$55_DATA' from process `\registros.$proc$Procesador_V2.0b/registros_32.v:28$117'.
No latch inferred for signal `\registros.$memwr$\WORKREG$Procesador_V2.0b/registros_32.v:30$56_ADDR' from process `\registros.$proc$Procesador_V2.0b/registros_32.v:28$117'.
No latch inferred for signal `\registros.$memwr$\WORKREG$Procesador_V2.0b/registros_32.v:30$56_DATA' from process `\registros.$proc$Procesador_V2.0b/registros_32.v:28$117'.
No latch inferred for signal `\registros.$memwr$\WORKREG$Procesador_V2.0b/registros_32.v:30$57_ADDR' from process `\registros.$proc$Procesador_V2.0b/registros_32.v:28$117'.
No latch inferred for signal `\registros.$memwr$\WORKREG$Procesador_V2.0b/registros_32.v:30$57_DATA' from process `\registros.$proc$Procesador_V2.0b/registros_32.v:28$117'.
No latch inferred for signal `\registros.$memwr$\WORKREG$Procesador_V2.0b/registros_32.v:30$58_ADDR' from process `\registros.$proc$Procesador_V2.0b/registros_32.v:28$117'.
No latch inferred for signal `\registros.$memwr$\WORKREG$Procesador_V2.0b/registros_32.v:30$58_DATA' from process `\registros.$proc$Procesador_V2.0b/registros_32.v:28$117'.
No latch inferred for signal `\registros.$memwr$\WORKREG$Procesador_V2.0b/registros_32.v:30$59_ADDR' from process `\registros.$proc$Procesador_V2.0b/registros_32.v:28$117'.
No latch inferred for signal `\registros.$memwr$\WORKREG$Procesador_V2.0b/registros_32.v:30$59_DATA' from process `\registros.$proc$Procesador_V2.0b/registros_32.v:28$117'.
No latch inferred for signal `\registros.$memwr$\WORKREG$Procesador_V2.0b/registros_32.v:30$60_ADDR' from process `\registros.$proc$Procesador_V2.0b/registros_32.v:28$117'.
No latch inferred for signal `\registros.$memwr$\WORKREG$Procesador_V2.0b/registros_32.v:30$60_DATA' from process `\registros.$proc$Procesador_V2.0b/registros_32.v:28$117'.
No latch inferred for signal `\registros.$memwr$\WORKREG$Procesador_V2.0b/registros_32.v:30$61_ADDR' from process `\registros.$proc$Procesador_V2.0b/registros_32.v:28$117'.
No latch inferred for signal `\registros.$memwr$\WORKREG$Procesador_V2.0b/registros_32.v:30$61_DATA' from process `\registros.$proc$Procesador_V2.0b/registros_32.v:28$117'.
No latch inferred for signal `\registros.$memwr$\WORKREG$Procesador_V2.0b/registros_32.v:30$62_ADDR' from process `\registros.$proc$Procesador_V2.0b/registros_32.v:28$117'.
No latch inferred for signal `\registros.$memwr$\WORKREG$Procesador_V2.0b/registros_32.v:30$62_DATA' from process `\registros.$proc$Procesador_V2.0b/registros_32.v:28$117'.
No latch inferred for signal `\registros.$memwr$\WORKREG$Procesador_V2.0b/registros_32.v:30$63_ADDR' from process `\registros.$proc$Procesador_V2.0b/registros_32.v:28$117'.
No latch inferred for signal `\registros.$memwr$\WORKREG$Procesador_V2.0b/registros_32.v:30$63_DATA' from process `\registros.$proc$Procesador_V2.0b/registros_32.v:28$117'.
No latch inferred for signal `\registros.$memwr$\WORKREG$Procesador_V2.0b/registros_32.v:30$64_ADDR' from process `\registros.$proc$Procesador_V2.0b/registros_32.v:28$117'.
No latch inferred for signal `\registros.$memwr$\WORKREG$Procesador_V2.0b/registros_32.v:30$64_DATA' from process `\registros.$proc$Procesador_V2.0b/registros_32.v:28$117'.
No latch inferred for signal `\registros.$memwr$\WORKREG$Procesador_V2.0b/registros_32.v:30$65_ADDR' from process `\registros.$proc$Procesador_V2.0b/registros_32.v:28$117'.
No latch inferred for signal `\registros.$memwr$\WORKREG$Procesador_V2.0b/registros_32.v:30$65_DATA' from process `\registros.$proc$Procesador_V2.0b/registros_32.v:28$117'.
No latch inferred for signal `\registros.$memwr$\WORKREG$Procesador_V2.0b/registros_32.v:30$66_ADDR' from process `\registros.$proc$Procesador_V2.0b/registros_32.v:28$117'.
No latch inferred for signal `\registros.$memwr$\WORKREG$Procesador_V2.0b/registros_32.v:30$66_DATA' from process `\registros.$proc$Procesador_V2.0b/registros_32.v:28$117'.
No latch inferred for signal `\registros.$memwr$\WORKREG$Procesador_V2.0b/registros_32.v:30$67_ADDR' from process `\registros.$proc$Procesador_V2.0b/registros_32.v:28$117'.
No latch inferred for signal `\registros.$memwr$\WORKREG$Procesador_V2.0b/registros_32.v:30$67_DATA' from process `\registros.$proc$Procesador_V2.0b/registros_32.v:28$117'.
No latch inferred for signal `\registros.$memwr$\WORKREG$Procesador_V2.0b/registros_32.v:30$68_ADDR' from process `\registros.$proc$Procesador_V2.0b/registros_32.v:28$117'.
No latch inferred for signal `\registros.$memwr$\WORKREG$Procesador_V2.0b/registros_32.v:30$68_DATA' from process `\registros.$proc$Procesador_V2.0b/registros_32.v:28$117'.
No latch inferred for signal `\registros.$memwr$\WORKREG$Procesador_V2.0b/registros_32.v:30$69_ADDR' from process `\registros.$proc$Procesador_V2.0b/registros_32.v:28$117'.
No latch inferred for signal `\registros.$memwr$\WORKREG$Procesador_V2.0b/registros_32.v:30$69_DATA' from process `\registros.$proc$Procesador_V2.0b/registros_32.v:28$117'.
No latch inferred for signal `\registros.$memwr$\WORKREG$Procesador_V2.0b/registros_32.v:30$70_ADDR' from process `\registros.$proc$Procesador_V2.0b/registros_32.v:28$117'.
No latch inferred for signal `\registros.$memwr$\WORKREG$Procesador_V2.0b/registros_32.v:30$70_DATA' from process `\registros.$proc$Procesador_V2.0b/registros_32.v:28$117'.
No latch inferred for signal `\registros.$memwr$\WORKREG$Procesador_V2.0b/registros_32.v:30$71_ADDR' from process `\registros.$proc$Procesador_V2.0b/registros_32.v:28$117'.
No latch inferred for signal `\registros.$memwr$\WORKREG$Procesador_V2.0b/registros_32.v:30$71_DATA' from process `\registros.$proc$Procesador_V2.0b/registros_32.v:28$117'.
No latch inferred for signal `\registros.$memwr$\WORKREG$Procesador_V2.0b/registros_32.v:30$72_ADDR' from process `\registros.$proc$Procesador_V2.0b/registros_32.v:28$117'.
No latch inferred for signal `\registros.$memwr$\WORKREG$Procesador_V2.0b/registros_32.v:30$72_DATA' from process `\registros.$proc$Procesador_V2.0b/registros_32.v:28$117'.
No latch inferred for signal `\registros.$memwr$\WORKREG$Procesador_V2.0b/registros_32.v:30$73_ADDR' from process `\registros.$proc$Procesador_V2.0b/registros_32.v:28$117'.
No latch inferred for signal `\registros.$memwr$\WORKREG$Procesador_V2.0b/registros_32.v:30$73_DATA' from process `\registros.$proc$Procesador_V2.0b/registros_32.v:28$117'.
No latch inferred for signal `\registros.$memwr$\WORKREG$Procesador_V2.0b/registros_32.v:30$74_ADDR' from process `\registros.$proc$Procesador_V2.0b/registros_32.v:28$117'.
No latch inferred for signal `\registros.$memwr$\WORKREG$Procesador_V2.0b/registros_32.v:30$74_DATA' from process `\registros.$proc$Procesador_V2.0b/registros_32.v:28$117'.
No latch inferred for signal `\registros.$memwr$\WORKREG$Procesador_V2.0b/registros_32.v:30$75_ADDR' from process `\registros.$proc$Procesador_V2.0b/registros_32.v:28$117'.
No latch inferred for signal `\registros.$memwr$\WORKREG$Procesador_V2.0b/registros_32.v:30$75_DATA' from process `\registros.$proc$Procesador_V2.0b/registros_32.v:28$117'.
No latch inferred for signal `\registros.$memwr$\WORKREG$Procesador_V2.0b/registros_32.v:30$76_ADDR' from process `\registros.$proc$Procesador_V2.0b/registros_32.v:28$117'.
No latch inferred for signal `\registros.$memwr$\WORKREG$Procesador_V2.0b/registros_32.v:30$76_DATA' from process `\registros.$proc$Procesador_V2.0b/registros_32.v:28$117'.
No latch inferred for signal `\ControladorMatrizLed.\pwm' from process `\ControladorMatrizLed.$proc$ControladorMatrizLed.v:21$11'.

4.3.8. Executing PROC_DFF pass (convert process syncs to FFs).
Creating register for signal `\serialRX.\rcv' using process `\serialRX.$proc$uart.v:227$462'.
created $dff cell `$procdff$874' with positive edge clock.
Creating register for signal `\serialRX.\data' using process `\serialRX.$proc$uart.v:221$461'.
created $dff cell `$procdff$875' with positive edge clock.
Creating register for signal `\serialRX.\cont' using process `\serialRX.$proc$uart.v:202$456'.
created $dff cell `$procdff$876' with positive edge clock.
Creating register for signal `\serialRX.\sr' using process `\serialRX.$proc$uart.v:191$454'.
created $dff cell `$procdff$877' with positive edge clock.
Creating register for signal `\serialRX.\div2counter' using process `\serialRX.$proc$uart.v:169$450'.
created $dff cell `$procdff$878' with positive edge clock.
Creating register for signal `\serialRX.\state' using process `\serialRX.$proc$uart.v:156$449'.
created $dff cell `$procdff$879' with positive edge clock.
Creating register for signal `\serialRX.\q_t0' using process `\serialRX.$proc$uart.v:147$446'.
created $dff cell `$procdff$880' with positive edge clock.
Creating register for signal `\serialRX.\din' using process `\serialRX.$proc$uart.v:142$445'.
created $dff cell `$procdff$881' with positive edge clock.
Creating register for signal `\serialRX.\d1' using process `\serialRX.$proc$uart.v:139$444'.
created $dff cell `$procdff$882' with positive edge clock.
Creating register for signal `\serialTX.\done' using process `\serialTX.$proc$uart.v:108$437'.
created $dff cell `$procdff$883' with positive edge clock.
Creating register for signal `\serialTX.\bits' using process `\serialTX.$proc$uart.v:94$434'.
created $dff cell `$procdff$884' with positive edge clock.
Creating register for signal `\serialTX.\TX' using process `\serialTX.$proc$uart.v:89$433'.
created $dff cell `$procdff$885' with positive edge clock.
Creating register for signal `\serialTX.\q' using process `\serialTX.$proc$uart.v:81$432'.
created $dff cell `$procdff$886' with positive edge clock.
Creating register for signal `\serialTX.\state' using process `\serialTX.$proc$uart.v:72$431'.
created $dff cell `$procdff$887' with positive edge clock.
Creating register for signal `\serialTX.\q_re' using process `\serialTX.$proc$uart.v:66$428'.
created $dff cell `$procdff$888' with positive edge clock.
Creating register for signal `$paramod\BaudClock\BAUD=115200.\divcounter' using process `$paramod\BaudClock\BAUD=115200.$proc$uart.v:35$631'.
created $dff cell `$procdff$889' with positive edge clock.
Creating register for signal `$paramod\memory\TAM=2048.\DataOut' using process `$paramod\memory\TAM=2048.$proc$SOCnexpoV8_.v:261$609'.
created $dff cell `$procdff$890' with positive edge clock.
Creating register for signal `$paramod\memory\TAM=2048.$memwr$\memArray$SOCnexpoV8_.v:263$598_ADDR' using process `$paramod\memory\TAM=2048.$proc$SOCnexpoV8_.v:261$609'.
created $dff cell `$procdff$891' with positive edge clock.
Creating register for signal `$paramod\memory\TAM=2048.$memwr$\memArray$SOCnexpoV8_.v:263$598_DATA' using process `$paramod\memory\TAM=2048.$proc$SOCnexpoV8_.v:261$609'.
created $dff cell `$procdff$892' with positive edge clock.
Creating register for signal `$paramod\memory\TAM=2048.$memwr$\memArray$SOCnexpoV8_.v:263$598_EN' using process `$paramod\memory\TAM=2048.$proc$SOCnexpoV8_.v:261$609'.
created $dff cell `$procdff$893' with positive edge clock.
Creating register for signal `$paramod\memory\TAM=2048.$memwr$\memArray$SOCnexpoV8_.v:264$599_ADDR' using process `$paramod\memory\TAM=2048.$proc$SOCnexpoV8_.v:261$609'.
created $dff cell `$procdff$894' with positive edge clock.
Creating register for signal `$paramod\memory\TAM=2048.$memwr$\memArray$SOCnexpoV8_.v:264$599_DATA' using process `$paramod\memory\TAM=2048.$proc$SOCnexpoV8_.v:261$609'.
created $dff cell `$procdff$895' with positive edge clock.
Creating register for signal `$paramod\memory\TAM=2048.$memwr$\memArray$SOCnexpoV8_.v:264$599_EN' using process `$paramod\memory\TAM=2048.$proc$SOCnexpoV8_.v:261$609'.
created $dff cell `$procdff$896' with positive edge clock.
Creating register for signal `$paramod\memory\TAM=2048.$memwr$\memArray$SOCnexpoV8_.v:265$600_ADDR' using process `$paramod\memory\TAM=2048.$proc$SOCnexpoV8_.v:261$609'.
created $dff cell `$procdff$897' with positive edge clock.
Creating register for signal `$paramod\memory\TAM=2048.$memwr$\memArray$SOCnexpoV8_.v:265$600_DATA' using process `$paramod\memory\TAM=2048.$proc$SOCnexpoV8_.v:261$609'.
created $dff cell `$procdff$898' with positive edge clock.
Creating register for signal `$paramod\memory\TAM=2048.$memwr$\memArray$SOCnexpoV8_.v:265$600_EN' using process `$paramod\memory\TAM=2048.$proc$SOCnexpoV8_.v:261$609'.
created $dff cell `$procdff$899' with positive edge clock.
Creating register for signal `$paramod\memory\TAM=2048.$memwr$\memArray$SOCnexpoV8_.v:266$601_ADDR' using process `$paramod\memory\TAM=2048.$proc$SOCnexpoV8_.v:261$609'.
created $dff cell `$procdff$900' with positive edge clock.
Creating register for signal `$paramod\memory\TAM=2048.$memwr$\memArray$SOCnexpoV8_.v:266$601_DATA' using process `$paramod\memory\TAM=2048.$proc$SOCnexpoV8_.v:261$609'.
created $dff cell `$procdff$901' with positive edge clock.
Creating register for signal `$paramod\memory\TAM=2048.$memwr$\memArray$SOCnexpoV8_.v:266$601_EN' using process `$paramod\memory\TAM=2048.$proc$SOCnexpoV8_.v:261$609'.
created $dff cell `$procdff$902' with positive edge clock.
Creating register for signal `\SOCnexpo.\rx_readed' using process `\SOCnexpo.$proc$SOCnexpoV8_.v:209$384'.
created $dff cell `$procdff$903' with positive edge clock.
Creating register for signal `\SOCnexpo.\tx_ready' using process `\SOCnexpo.$proc$SOCnexpoV8_.v:187$383'.
created $dff cell `$procdff$904' with positive edge clock.
Creating register for signal `\SOCnexpo.\leds_en' using process `\SOCnexpo.$proc$SOCnexpoV8_.v:150$381'.
created $dff cell `$procdff$905' with positive edge clock.
Creating register for signal `\SOCnexpo.\leds1' using process `\SOCnexpo.$proc$SOCnexpoV8_.v:129$380'.
created $dff cell `$procdff$906' with positive edge clock.
Creating register for signal `\SOCnexpo.\leds2' using process `\SOCnexpo.$proc$SOCnexpoV8_.v:129$380'.
created $dff cell `$procdff$907' with positive edge clock.
Creating register for signal `\SOCnexpo.\leds3' using process `\SOCnexpo.$proc$SOCnexpoV8_.v:129$380'.
created $dff cell `$procdff$908' with positive edge clock.
Creating register for signal `\SOCnexpo.\leds4' using process `\SOCnexpo.$proc$SOCnexpoV8_.v:129$380'.
created $dff cell `$procdff$909' with positive edge clock.
Creating register for signal `\SOCnexpo.\instr' using process `\SOCnexpo.$proc$SOCnexpoV8_.v:46$358'.
created $dff cell `$procdff$910' with positive edge clock.
Creating register for signal `\SOCnexpo.\rst' using process `\SOCnexpo.$proc$SOCnexpoV8_.v:30$356'.
created $dff cell `$procdff$911' with positive edge clock.
Creating register for signal `\SOCnexpo.\Espera' using process `\SOCnexpo.$proc$SOCnexpoV8_.v:28$354'.
created $dff cell `$procdff$912' with positive edge clock.
Creating register for signal `\RV32nexpo.\cycle' using process `\RV32nexpo.$proc$Procesador_V2.0b/RV32nexpo.v:487$348'.
created $dff cell `$procdff$913' with positive edge clock.
Creating register for signal `\RV32nexpo.\instret' using process `\RV32nexpo.$proc$Procesador_V2.0b/RV32nexpo.v:487$348'.
created $dff cell `$procdff$914' with positive edge clock.
Creating register for signal `\RV32nexpo.\PWM_' using process `\RV32nexpo.$proc$Procesador_V2.0b/RV32nexpo.v:478$346'.
created $dff cell `$procdff$915' with positive edge clock.
Creating register for signal `\RV32nexpo.\MW_resultado' using process `\RV32nexpo.$proc$Procesador_V2.0b/RV32nexpo.v:438$343'.
created $dff cell `$procdff$916' with positive edge clock.
Creating register for signal `\RV32nexpo.\MW_rd' using process `\RV32nexpo.$proc$Procesador_V2.0b/RV32nexpo.v:438$343'.
created $dff cell `$procdff$917' with positive edge clock.
Creating register for signal `\RV32nexpo.\MW_funct3' using process `\RV32nexpo.$proc$Procesador_V2.0b/RV32nexpo.v:438$343'.
created $dff cell `$procdff$918' with positive edge clock.
Creating register for signal `\RV32nexpo.\MW_address_LSB' using process `\RV32nexpo.$proc$Procesador_V2.0b/RV32nexpo.v:438$343'.
created $dff cell `$procdff$919' with positive edge clock.
Creating register for signal `\RV32nexpo.\MW_nop' using process `\RV32nexpo.$proc$Procesador_V2.0b/RV32nexpo.v:438$343'.
created $dff cell `$procdff$920' with positive edge clock.
Creating register for signal `\RV32nexpo.\MW_MemRead' using process `\RV32nexpo.$proc$Procesador_V2.0b/RV32nexpo.v:438$343'.
created $dff cell `$procdff$921' with positive edge clock.
Creating register for signal `\RV32nexpo.\MW_RegWrite' using process `\RV32nexpo.$proc$Procesador_V2.0b/RV32nexpo.v:438$343'.
created $dff cell `$procdff$922' with positive edge clock.
Creating register for signal `\RV32nexpo.\EM_resultado' using process `\RV32nexpo.$proc$Procesador_V2.0b/RV32nexpo.v:359$334'.
created $dff cell `$procdff$923' with positive edge clock.
Creating register for signal `\RV32nexpo.\EM_rs2Data' using process `\RV32nexpo.$proc$Procesador_V2.0b/RV32nexpo.v:359$334'.
created $dff cell `$procdff$924' with positive edge clock.
Creating register for signal `\RV32nexpo.\EM_csrDataIn' using process `\RV32nexpo.$proc$Procesador_V2.0b/RV32nexpo.v:359$334'.
created $dff cell `$procdff$925' with positive edge clock.
Creating register for signal `\RV32nexpo.\EM_csr' using process `\RV32nexpo.$proc$Procesador_V2.0b/RV32nexpo.v:359$334'.
created $dff cell `$procdff$926' with positive edge clock.
Creating register for signal `\RV32nexpo.\EM_rd' using process `\RV32nexpo.$proc$Procesador_V2.0b/RV32nexpo.v:359$334'.
created $dff cell `$procdff$927' with positive edge clock.
Creating register for signal `\RV32nexpo.\EM_funct3' using process `\RV32nexpo.$proc$Procesador_V2.0b/RV32nexpo.v:359$334'.
created $dff cell `$procdff$928' with positive edge clock.
Creating register for signal `\RV32nexpo.\EM_nop' using process `\RV32nexpo.$proc$Procesador_V2.0b/RV32nexpo.v:359$334'.
created $dff cell `$procdff$929' with positive edge clock.
Creating register for signal `\RV32nexpo.\EM_MemRead' using process `\RV32nexpo.$proc$Procesador_V2.0b/RV32nexpo.v:359$334'.
created $dff cell `$procdff$930' with positive edge clock.
Creating register for signal `\RV32nexpo.\EM_MemWrite' using process `\RV32nexpo.$proc$Procesador_V2.0b/RV32nexpo.v:359$334'.
created $dff cell `$procdff$931' with positive edge clock.
Creating register for signal `\RV32nexpo.\EM_RegWrite' using process `\RV32nexpo.$proc$Procesador_V2.0b/RV32nexpo.v:359$334'.
created $dff cell `$procdff$932' with positive edge clock.
Creating register for signal `\RV32nexpo.\EM_isCSR' using process `\RV32nexpo.$proc$Procesador_V2.0b/RV32nexpo.v:359$334'.
created $dff cell `$procdff$933' with positive edge clock.
Creating register for signal `\RV32nexpo.\EM_CSRRead' using process `\RV32nexpo.$proc$Procesador_V2.0b/RV32nexpo.v:359$334'.
created $dff cell `$procdff$934' with positive edge clock.
Creating register for signal `\RV32nexpo.\EM_CSRWrite' using process `\RV32nexpo.$proc$Procesador_V2.0b/RV32nexpo.v:359$334'.
created $dff cell `$procdff$935' with positive edge clock.
Creating register for signal `\RV32nexpo.\DE_pc' using process `\RV32nexpo.$proc$Procesador_V2.0b/RV32nexpo.v:288$323'.
created $dff cell `$procdff$936' with positive edge clock.
Creating register for signal `\RV32nexpo.\DE_rs1Data' using process `\RV32nexpo.$proc$Procesador_V2.0b/RV32nexpo.v:288$323'.
created $dff cell `$procdff$937' with positive edge clock.
Creating register for signal `\RV32nexpo.\DE_rs2Data' using process `\RV32nexpo.$proc$Procesador_V2.0b/RV32nexpo.v:288$323'.
created $dff cell `$procdff$938' with positive edge clock.
Creating register for signal `\RV32nexpo.\DE_imm' using process `\RV32nexpo.$proc$Procesador_V2.0b/RV32nexpo.v:288$323'.
created $dff cell `$procdff$939' with positive edge clock.
Creating register for signal `\RV32nexpo.\DE_rs1' using process `\RV32nexpo.$proc$Procesador_V2.0b/RV32nexpo.v:288$323'.
created $dff cell `$procdff$940' with positive edge clock.
Creating register for signal `\RV32nexpo.\DE_rs2' using process `\RV32nexpo.$proc$Procesador_V2.0b/RV32nexpo.v:288$323'.
created $dff cell `$procdff$941' with positive edge clock.
Creating register for signal `\RV32nexpo.\DE_rd' using process `\RV32nexpo.$proc$Procesador_V2.0b/RV32nexpo.v:288$323'.
created $dff cell `$procdff$942' with positive edge clock.
Creating register for signal `\RV32nexpo.\DE_ALUCtrl' using process `\RV32nexpo.$proc$Procesador_V2.0b/RV32nexpo.v:288$323'.
created $dff cell `$procdff$943' with positive edge clock.
Creating register for signal `\RV32nexpo.\DE_funct3' using process `\RV32nexpo.$proc$Procesador_V2.0b/RV32nexpo.v:288$323'.
created $dff cell `$procdff$944' with positive edge clock.
Creating register for signal `\RV32nexpo.\DE_nop' using process `\RV32nexpo.$proc$Procesador_V2.0b/RV32nexpo.v:288$323'.
created $dff cell `$procdff$945' with positive edge clock.
Creating register for signal `\RV32nexpo.\DE_MemWrite' using process `\RV32nexpo.$proc$Procesador_V2.0b/RV32nexpo.v:288$323'.
created $dff cell `$procdff$946' with positive edge clock.
Creating register for signal `\RV32nexpo.\DE_RegWrite' using process `\RV32nexpo.$proc$Procesador_V2.0b/RV32nexpo.v:288$323'.
created $dff cell `$procdff$947' with positive edge clock.
Creating register for signal `\RV32nexpo.\DE_MemRead' using process `\RV32nexpo.$proc$Procesador_V2.0b/RV32nexpo.v:288$323'.
created $dff cell `$procdff$948' with positive edge clock.
Creating register for signal `\RV32nexpo.\DE_ALUSrc1' using process `\RV32nexpo.$proc$Procesador_V2.0b/RV32nexpo.v:288$323'.
created $dff cell `$procdff$949' with positive edge clock.
Creating register for signal `\RV32nexpo.\DE_ALUSrc2' using process `\RV32nexpo.$proc$Procesador_V2.0b/RV32nexpo.v:288$323'.
created $dff cell `$procdff$950' with positive edge clock.
Creating register for signal `\RV32nexpo.\DE_isJALR' using process `\RV32nexpo.$proc$Procesador_V2.0b/RV32nexpo.v:288$323'.
created $dff cell `$procdff$951' with positive edge clock.
Creating register for signal `\RV32nexpo.\DE_isJAL' using process `\RV32nexpo.$proc$Procesador_V2.0b/RV32nexpo.v:288$323'.
created $dff cell `$procdff$952' with positive edge clock.
Creating register for signal `\RV32nexpo.\DE_isBRANCH' using process `\RV32nexpo.$proc$Procesador_V2.0b/RV32nexpo.v:288$323'.
created $dff cell `$procdff$953' with positive edge clock.
Creating register for signal `\RV32nexpo.\DE_isCSR' using process `\RV32nexpo.$proc$Procesador_V2.0b/RV32nexpo.v:288$323'.
created $dff cell `$procdff$954' with positive edge clock.
Creating register for signal `\RV32nexpo.\DE_isEBREAK' using process `\RV32nexpo.$proc$Procesador_V2.0b/RV32nexpo.v:288$323'.
created $dff cell `$procdff$955' with positive edge clock.
Creating register for signal `\RV32nexpo.\DE_CSRWrite' using process `\RV32nexpo.$proc$Procesador_V2.0b/RV32nexpo.v:288$323'.
created $dff cell `$procdff$956' with positive edge clock.
Creating register for signal `\RV32nexpo.\DE_CSRRead' using process `\RV32nexpo.$proc$Procesador_V2.0b/RV32nexpo.v:288$323'.
created $dff cell `$procdff$957' with positive edge clock.
Creating register for signal `\RV32nexpo.\F_pc' using process `\RV32nexpo.$proc$Procesador_V2.0b/RV32nexpo.v:104$265'.
created $dff cell `$procdff$958' with positive edge clock.
Creating register for signal `\RV32nexpo.\FD_pc' using process `\RV32nexpo.$proc$Procesador_V2.0b/RV32nexpo.v:104$265'.
created $dff cell `$procdff$959' with positive edge clock.
Creating register for signal `\RV32nexpo.\FD_nop' using process `\RV32nexpo.$proc$Procesador_V2.0b/RV32nexpo.v:104$265'.
created $dff cell `$procdff$960' with positive edge clock.
Creating register for signal `\RV32nexpo.\state' using process `\RV32nexpo.$proc$Procesador_V2.0b/RV32nexpo.v:58$262'.
created $dff cell `$procdff$961' with positive edge clock.
Creating register for signal `\registros.$memwr$\WORKREG$Procesador_V2.0b/registros_32.v:43$77_ADDR' using process `\registros.$proc$Procesador_V2.0b/registros_32.v:41$80'.
created $dff cell `$procdff$962' with negative edge clock.
Creating register for signal `\registros.$memwr$\WORKREG$Procesador_V2.0b/registros_32.v:43$77_DATA' using process `\registros.$proc$Procesador_V2.0b/registros_32.v:41$80'.
created $dff cell `$procdff$963' with negative edge clock.
Creating register for signal `\registros.$memwr$\WORKREG$Procesador_V2.0b/registros_32.v:43$77_EN' using process `\registros.$proc$Procesador_V2.0b/registros_32.v:41$80'.
created $dff cell `$procdff$964' with negative edge clock.
Creating register for signal `\ControladorMatrizLed.\act_row' using process `\ControladorMatrizLed.$proc$ControladorMatrizLed.v:41$4'.
created $dff cell `$procdff$965' with positive edge clock.
Creating register for signal `\ControladorMatrizLed.\row' using process `\ControladorMatrizLed.$proc$ControladorMatrizLed.v:41$4'.
created $dff cell `$procdff$966' with positive edge clock.
Creating register for signal `\ControladorMatrizLed.\timer' using process `\ControladorMatrizLed.$proc$ControladorMatrizLed.v:24$1'.
created $dff cell `$procdff$967' with positive edge clock.

4.3.9. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Removing empty process `serialRX.$proc$uart.v:226$469'.
Removing empty process `serialRX.$proc$uart.v:219$468'.
Removing empty process `serialRX.$proc$uart.v:201$467'.
Removing empty process `serialRX.$proc$uart.v:190$466'.
Removing empty process `serialRX.$proc$uart.v:167$465'.
Removing empty process `serialRX.$proc$uart.v:154$464'.
Removing empty process `serialRX.$proc$uart.v:146$463'.
Removing empty process `serialRX.$proc$uart.v:227$462'.
Found and cleaned up 1 empty switch in `\serialRX.$proc$uart.v:221$461'.
Removing empty process `serialRX.$proc$uart.v:221$461'.
Found and cleaned up 2 empty switches in `\serialRX.$proc$uart.v:202$456'.
Removing empty process `serialRX.$proc$uart.v:202$456'.
Found and cleaned up 1 empty switch in `\serialRX.$proc$uart.v:191$454'.
Removing empty process `serialRX.$proc$uart.v:191$454'.
Found and cleaned up 2 empty switches in `\serialRX.$proc$uart.v:169$450'.
Removing empty process `serialRX.$proc$uart.v:169$450'.
Found and cleaned up 2 empty switches in `\serialRX.$proc$uart.v:156$449'.
Removing empty process `serialRX.$proc$uart.v:156$449'.
Removing empty process `serialRX.$proc$uart.v:147$446'.
Removing empty process `serialRX.$proc$uart.v:142$445'.
Removing empty process `serialRX.$proc$uart.v:139$444'.
Removing empty process `serialTX.$proc$uart.v:107$443'.
Removing empty process `serialTX.$proc$uart.v:93$442'.
Removing empty process `serialTX.$proc$uart.v:88$441'.
Removing empty process `serialTX.$proc$uart.v:80$440'.
Removing empty process `serialTX.$proc$uart.v:64$439'.
Removing empty process `serialTX.$proc$uart.v:55$438'.
Removing empty process `serialTX.$proc$uart.v:108$437'.
Found and cleaned up 2 empty switches in `\serialTX.$proc$uart.v:94$434'.
Removing empty process `serialTX.$proc$uart.v:94$434'.
Removing empty process `serialTX.$proc$uart.v:89$433'.
Found and cleaned up 2 empty switches in `\serialTX.$proc$uart.v:81$432'.
Removing empty process `serialTX.$proc$uart.v:81$432'.
Found and cleaned up 2 empty switches in `\serialTX.$proc$uart.v:72$431'.
Removing empty process `serialTX.$proc$uart.v:72$431'.
Removing empty process `serialTX.$proc$uart.v:66$428'.
Removing empty process `$paramod\BaudClock\BAUD=115200.$proc$uart.v:29$634'.
Found and cleaned up 1 empty switch in `$paramod\BaudClock\BAUD=115200.$proc$uart.v:35$631'.
Removing empty process `$paramod\BaudClock\BAUD=115200.$proc$uart.v:35$631'.
Found and cleaned up 5 empty switches in `$paramod\memory\TAM=2048.$proc$SOCnexpoV8_.v:261$609'.
Removing empty process `$paramod\memory\TAM=2048.$proc$SOCnexpoV8_.v:261$609'.
Removing empty process `SOCnexpo.$proc$SOCnexpoV8_.v:149$390'.
Removing empty process `SOCnexpo.$proc$SOCnexpoV8_.v:27$388'.
Removing empty process `SOCnexpo.$proc$SOCnexpoV8_.v:26$387'.
Found and cleaned up 3 empty switches in `\SOCnexpo.$proc$SOCnexpoV8_.v:209$384'.
Removing empty process `SOCnexpo.$proc$SOCnexpoV8_.v:209$384'.
Found and cleaned up 3 empty switches in `\SOCnexpo.$proc$SOCnexpoV8_.v:187$383'.
Removing empty process `SOCnexpo.$proc$SOCnexpoV8_.v:187$383'.
Found and cleaned up 2 empty switches in `\SOCnexpo.$proc$SOCnexpoV8_.v:150$381'.
Removing empty process `SOCnexpo.$proc$SOCnexpoV8_.v:150$381'.
Found and cleaned up 8 empty switches in `\SOCnexpo.$proc$SOCnexpoV8_.v:129$380'.
Removing empty process `SOCnexpo.$proc$SOCnexpoV8_.v:129$380'.
Found and cleaned up 1 empty switch in `\SOCnexpo.$proc$SOCnexpoV8_.v:83$372'.
Removing empty process `SOCnexpo.$proc$SOCnexpoV8_.v:83$372'.
Removing empty process `SOCnexpo.$proc$SOCnexpoV8_.v:46$358'.
Found and cleaned up 1 empty switch in `\SOCnexpo.$proc$SOCnexpoV8_.v:30$356'.
Removing empty process `SOCnexpo.$proc$SOCnexpoV8_.v:30$356'.
Removing empty process `SOCnexpo.$proc$SOCnexpoV8_.v:28$354'.
Removing empty process `RV32nexpo.$proc$Procesador_V2.0b/RV32nexpo.v:122$353'.
Removing empty process `RV32nexpo.$proc$Procesador_V2.0b/RV32nexpo.v:96$352'.
Found and cleaned up 1 empty switch in `\RV32nexpo.$proc$Procesador_V2.0b/RV32nexpo.v:487$348'.
Removing empty process `RV32nexpo.$proc$Procesador_V2.0b/RV32nexpo.v:487$348'.
Found and cleaned up 3 empty switches in `\RV32nexpo.$proc$Procesador_V2.0b/RV32nexpo.v:478$346'.
Removing empty process `RV32nexpo.$proc$Procesador_V2.0b/RV32nexpo.v:478$346'.
Removing empty process `RV32nexpo.$proc$Procesador_V2.0b/RV32nexpo.v:438$343'.
Found and cleaned up 1 empty switch in `\RV32nexpo.$proc$Procesador_V2.0b/RV32nexpo.v:396$337'.
Removing empty process `RV32nexpo.$proc$Procesador_V2.0b/RV32nexpo.v:396$337'.
Removing empty process `RV32nexpo.$proc$Procesador_V2.0b/RV32nexpo.v:359$334'.
Removing empty process `RV32nexpo.$proc$Procesador_V2.0b/RV32nexpo.v:288$323'.
Found and cleaned up 1 empty switch in `\RV32nexpo.$proc$Procesador_V2.0b/RV32nexpo.v:168$294'.
Removing empty process `RV32nexpo.$proc$Procesador_V2.0b/RV32nexpo.v:168$294'.
Found and cleaned up 2 empty switches in `\RV32nexpo.$proc$Procesador_V2.0b/RV32nexpo.v:104$265'.
Removing empty process `RV32nexpo.$proc$Procesador_V2.0b/RV32nexpo.v:104$265'.
Removing empty process `RV32nexpo.$proc$Procesador_V2.0b/RV32nexpo.v:63$263'.
Found and cleaned up 1 empty switch in `\RV32nexpo.$proc$Procesador_V2.0b/RV32nexpo.v:58$262'.
Removing empty process `RV32nexpo.$proc$Procesador_V2.0b/RV32nexpo.v:58$262'.
Removing empty process `ALU.$proc$Procesador_V2.0b/ALU.v:22$239'.
Removing empty process `ALU.$proc$Procesador_V2.0b/ALU.v:67$224'.
Removing empty process `ALU.$proc$Procesador_V2.0b/ALU.v:54$195'.
Removing empty process `registros.$proc$Procesador_V2.0b/registros_32.v:28$117'.
Found and cleaned up 1 empty switch in `\registros.$proc$Procesador_V2.0b/registros_32.v:41$80'.
Removing empty process `registros.$proc$Procesador_V2.0b/registros_32.v:41$80'.
Removing empty process `ControladorMatrizLed.$proc$ControladorMatrizLed.v:23$12'.
Removing empty process `ControladorMatrizLed.$proc$ControladorMatrizLed.v:21$11'.
Found and cleaned up 2 empty switches in `\ControladorMatrizLed.$proc$ControladorMatrizLed.v:41$4'.
Removing empty process `ControladorMatrizLed.$proc$ControladorMatrizLed.v:41$4'.
Found and cleaned up 1 empty switch in `\ControladorMatrizLed.$proc$ControladorMatrizLed.v:24$1'.
Removing empty process `ControladorMatrizLed.$proc$ControladorMatrizLed.v:24$1'.
Cleaned up 51 empty switches.

4.4. Executing FLATTEN pass (flatten design).
Using template RV32nexpo for cells of type RV32nexpo.
Using template $paramod\memory\TAM=2048 for cells of type $paramod\memory\TAM=2048.
Using template ControladorMatrizLed for cells of type ControladorMatrizLed.
Using template serialTX for cells of type serialTX.
Using template serialRX for cells of type serialRX.
Using template LoadfromMEM for cells of type LoadfromMEM.
Using template StoretoMEM for cells of type StoretoMEM.
Using template ALU for cells of type ALU.
Using template registros for cells of type registros.
Using template $paramod\BaudClock\BAUD=115200 for cells of type $paramod\BaudClock\BAUD=115200.
No more expansions possible.
Deleting now unused module serialRX.
Deleting now unused module serialTX.
Deleting now unused module $paramod\BaudClock\BAUD=115200.
Deleting now unused module $paramod\memory\TAM=2048.
Deleting now unused module RV32nexpo.
Deleting now unused module LoadfromMEM.
Deleting now unused module StoretoMEM.
Deleting now unused module ALU.
Deleting now unused module registros.
Deleting now unused module ControladorMatrizLed.

4.5. Executing TRIBUF pass.

4.6. Executing DEMINOUT pass (demote inout ports to input or output).

4.7. Executing OPT_EXPR pass (perform const folding).
Optimizing module SOCnexpo.

4.8. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \SOCnexpo..
Removed 29 unused cells and 517 unused wires.

4.9. Executing CHECK pass (checking for obvious problems).
checking module SOCnexpo..
Warning: Wire SOCnexpo.\RV32I.error is used but has no driver.
Warning: Wire SOCnexpo.\RV32I.end_prog is used but has no driver.
found and reported 2 problems.

4.10. Executing OPT pass (performing simple optimizations).

4.10.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module SOCnexpo.

4.10.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\SOCnexpo'.
Removed a total of 7 cells.

4.10.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \SOCnexpo..
Creating internal representation of mux trees.
Evaluating internal representation of mux trees.
Analyzing evaluation results.
Removed 0 multiplexer ports.

4.10.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
Optimizing cells in module \SOCnexpo.
New input vector for $reduce_or cell $techmap\RV32I.$reduce_or$Procesador_V2.0b/RV32nexpo.v:206$315: { \RV32I.FD_instr [15] \RV32I.FD_instr [16] \RV32I.FD_instr [17] \RV32I.FD_instr [18] \RV32I.FD_instr [19] }
New input vector for $reduce_or cell $techmap\RV32I.$reduce_or$Procesador_V2.0b/RV32nexpo.v:194$297: { \RV32I.FD_instr [7] \RV32I.FD_instr [8] \RV32I.FD_instr [9] \RV32I.FD_instr [10] \RV32I.FD_instr [11] }
New input vector for $reduce_or cell $techmap\RAM.$reduce_or$SOCnexpoV8_.v:254$603: { \RAM.WRmask [0] \RAM.WRmask [1] \RAM.WRmask [2] \RAM.WRmask [3] }
Consolidated identical input bits for $mux cell $techmap\RAM.$procmux$672:
Old ports: A=0, B=255, Y=$techmap\RAM.$procmux$672_Y
New ports: A=1'0, B=1'1, Y=$techmap\RAM.$procmux$672_Y [0]
New connections: $techmap\RAM.$procmux$672_Y [31:1] = { 24'000000000000000000000000 $techmap\RAM.$procmux$672_Y [0] $techmap\RAM.$procmux$672_Y [0] $techmap\RAM.$procmux$672_Y [0] $techmap\RAM.$procmux$672_Y [0] $techmap\RAM.$procmux$672_Y [0] $techmap\RAM.$procmux$672_Y [0] $techmap\RAM.$procmux$672_Y [0] }
Consolidated identical input bits for $mux cell $techmap\RAM.$procmux$684:
Old ports: A=0, B=65280, Y=$techmap\RAM.$procmux$684_Y
New ports: A=1'0, B=1'1, Y=$techmap\RAM.$procmux$684_Y [8]
New connections: { $techmap\RAM.$procmux$684_Y [31:9] $techmap\RAM.$procmux$684_Y [7:0] } = { 16'0000000000000000 $techmap\RAM.$procmux$684_Y [8] $techmap\RAM.$procmux$684_Y [8] $techmap\RAM.$procmux$684_Y [8] $techmap\RAM.$procmux$684_Y [8] $techmap\RAM.$procmux$684_Y [8] $techmap\RAM.$procmux$684_Y [8] $techmap\RAM.$procmux$684_Y [8] 8'00000000 }
Consolidated identical input bits for $mux cell $techmap\RAM.$procmux$696:
Old ports: A=0, B=16711680, Y=$techmap\RAM.$procmux$696_Y
New ports: A=1'0, B=1'1, Y=$techmap\RAM.$procmux$696_Y [16]
New connections: { $techmap\RAM.$procmux$696_Y [31:17] $techmap\RAM.$procmux$696_Y [15:0] } = { 8'00000000 $techmap\RAM.$procmux$696_Y [16] $techmap\RAM.$procmux$696_Y [16] $techmap\RAM.$procmux$696_Y [16] $techmap\RAM.$procmux$696_Y [16] $techmap\RAM.$procmux$696_Y [16] $techmap\RAM.$procmux$696_Y [16] $techmap\RAM.$procmux$696_Y [16] 16'0000000000000000 }
Consolidated identical input bits for $mux cell $techmap\RAM.$procmux$708:
Old ports: A=0, B=32'11111111000000000000000000000000, Y=$techmap\RAM.$procmux$708_Y
New ports: A=1'0, B=1'1, Y=$techmap\RAM.$procmux$708_Y [24]
New connections: { $techmap\RAM.$procmux$708_Y [31:25] $techmap\RAM.$procmux$708_Y [23:0] } = { $techmap\RAM.$procmux$708_Y [24] $techmap\RAM.$procmux$708_Y [24] $techmap\RAM.$procmux$708_Y [24] $techmap\RAM.$procmux$708_Y [24] $techmap\RAM.$procmux$708_Y [24] $techmap\RAM.$procmux$708_Y [24] $techmap\RAM.$procmux$708_Y [24] 24'000000000000000000000000 }
New ctrl vector for $pmux cell $techmap\RV32I.$procmux$814: { $techmap\RV32I.$eq$Procesador_V2.0b/RV32nexpo.v:482$347_Y $auto$opt_reduce.cc:132:opt_mux$971 $techmap\RV32I.$procmux$818_CMP $auto$opt_reduce.cc:132:opt_mux$969 $techmap\RV32I.$procmux$815_CMP }
Consolidated identical input bits for $mux cell $techmap\RV32I.reg32.$procmux$849:
Old ports: A=0, B=32'11111111111111111111111111111111, Y=$techmap\RV32I.reg32.$0$memwr$\WORKREG$Procesador_V2.0b/registros_32.v:43$77_EN[31:0]$83
New ports: A=1'0, B=1'1, Y=$techmap\RV32I.reg32.$0$memwr$\WORKREG$Procesador_V2.0b/registros_32.v:43$77_EN[31:0]$83 [0]
New connections: $techmap\RV32I.reg32.$0$memwr$\WORKREG$Procesador_V2.0b/registros_32.v:43$77_EN[31:0]$83 [31:1] = { $techmap\RV32I.reg32.$0$memwr$\WORKREG$Procesador_V2.0b/registros_32.v:43$77_EN[31:0]$83 [0] $techmap\RV32I.reg32.$0$memwr$\WORKREG$Procesador_V2.0b/registros_32.v:43$77_EN[31:0]$83 [0] $techmap\RV32I.reg32.$0$memwr$\WORKREG$Procesador_V2.0b/registros_32.v:43$77_EN[31:0]$83 [0] $techmap\RV32I.reg32.$0$memwr$\WORKREG$Procesador_V2.0b/registros_32.v:43$77_EN[31:0]$83 [0] $techmap\RV32I.reg32.$0$memwr$\WORKREG$Procesador_V2.0b/registros_32.v:43$77_EN[31:0]$83 [0] $techmap\RV32I.reg32.$0$memwr$\WORKREG$Procesador_V2.0b/registros_32.v:43$77_EN[31:0]$83 [0] $techmap\RV32I.reg32.$0$memwr$\WORKREG$Procesador_V2.0b/registros_32.v:43$77_EN[31:0]$83 [0] $techmap\RV32I.reg32.$0$memwr$\WORKREG$Procesador_V2.0b/registros_32.v:43$77_EN[31:0]$83 [0] $techmap\RV32I.reg32.$0$memwr$\WORKREG$Procesador_V2.0b/registros_32.v:43$77_EN[31:0]$83 [0] $techmap\RV32I.reg32.$0$memwr$\WORKREG$Procesador_V2.0b/registros_32.v:43$77_EN[31:0]$83 [0] $techmap\RV32I.reg32.$0$memwr$\WORKREG$Procesador_V2.0b/registros_32.v:43$77_EN[31:0]$83 [0] $techmap\RV32I.reg32.$0$memwr$\WORKREG$Procesador_V2.0b/registros_32.v:43$77_EN[31:0]$83 [0] $techmap\RV32I.reg32.$0$memwr$\WORKREG$Procesador_V2.0b/registros_32.v:43$77_EN[31:0]$83 [0] $techmap\RV32I.reg32.$0$memwr$\WORKREG$Procesador_V2.0b/registros_32.v:43$77_EN[31:0]$83 [0] $techmap\RV32I.reg32.$0$memwr$\WORKREG$Procesador_V2.0b/registros_32.v:43$77_EN[31:0]$83 [0] $techmap\RV32I.reg32.$0$memwr$\WORKREG$Procesador_V2.0b/registros_32.v:43$77_EN[31:0]$83 [0] $techmap\RV32I.reg32.$0$memwr$\WORKREG$Procesador_V2.0b/registros_32.v:43$77_EN[31:0]$83 [0] $techmap\RV32I.reg32.$0$memwr$\WORKREG$Procesador_V2.0b/registros_32.v:43$77_EN[31:0]$83 [0] $techmap\RV32I.reg32.$0$memwr$\WORKREG$Procesador_V2.0b/registros_32.v:43$77_EN[31:0]$83 [0] $techmap\RV32I.reg32.$0$memwr$\WORKREG$Procesador_V2.0b/registros_32.v:43$77_EN[31:0]$83 [0] $techmap\RV32I.reg32.$0$memwr$\WORKREG$Procesador_V2.0b/registros_32.v:43$77_EN[31:0]$83 [0] $techmap\RV32I.reg32.$0$memwr$\WORKREG$Procesador_V2.0b/registros_32.v:43$77_EN[31:0]$83 [0] $techmap\RV32I.reg32.$0$memwr$\WORKREG$Procesador_V2.0b/registros_32.v:43$77_EN[31:0]$83 [0] $techmap\RV32I.reg32.$0$memwr$\WORKREG$Procesador_V2.0b/registros_32.v:43$77_EN[31:0]$83 [0] $techmap\RV32I.reg32.$0$memwr$\WORKREG$Procesador_V2.0b/registros_32.v:43$77_EN[31:0]$83 [0] $techmap\RV32I.reg32.$0$memwr$\WORKREG$Procesador_V2.0b/registros_32.v:43$77_EN[31:0]$83 [0] $techmap\RV32I.reg32.$0$memwr$\WORKREG$Procesador_V2.0b/registros_32.v:43$77_EN[31:0]$83 [0] $techmap\RV32I.reg32.$0$memwr$\WORKREG$Procesador_V2.0b/registros_32.v:43$77_EN[31:0]$83 [0] $techmap\RV32I.reg32.$0$memwr$\WORKREG$Procesador_V2.0b/registros_32.v:43$77_EN[31:0]$83 [0] $techmap\RV32I.reg32.$0$memwr$\WORKREG$Procesador_V2.0b/registros_32.v:43$77_EN[31:0]$83 [0] $techmap\RV32I.reg32.$0$memwr$\WORKREG$Procesador_V2.0b/registros_32.v:43$77_EN[31:0]$83 [0] }
Optimizing cells in module \SOCnexpo.
Consolidated identical input bits for $mux cell $techmap\RAM.$procmux$674:
Old ports: A=0, B=$techmap\RAM.$procmux$672_Y, Y=$techmap\RAM.$0$memwr$\memArray$SOCnexpoV8_.v:263$598_EN[31:0]$612
New ports: A=1'0, B=$techmap\RAM.$procmux$672_Y [0], Y=$techmap\RAM.$0$memwr$\memArray$SOCnexpoV8_.v:263$598_EN[31:0]$612 [0]
New connections: $techmap\RAM.$0$memwr$\memArray$SOCnexpoV8_.v:263$598_EN[31:0]$612 [31:1] = { 24'000000000000000000000000 $techmap\RAM.$0$memwr$\memArray$SOCnexpoV8_.v:263$598_EN[31:0]$612 [0] $techmap\RAM.$0$memwr$\memArray$SOCnexpoV8_.v:263$598_EN[31:0]$612 [0] $techmap\RAM.$0$memwr$\memArray$SOCnexpoV8_.v:263$598_EN[31:0]$612 [0] $techmap\RAM.$0$memwr$\memArray$SOCnexpoV8_.v:263$598_EN[31:0]$612 [0] $techmap\RAM.$0$memwr$\memArray$SOCnexpoV8_.v:263$598_EN[31:0]$612 [0] $techmap\RAM.$0$memwr$\memArray$SOCnexpoV8_.v:263$598_EN[31:0]$612 [0] $techmap\RAM.$0$memwr$\memArray$SOCnexpoV8_.v:263$598_EN[31:0]$612 [0] }
Consolidated identical input bits for $mux cell $techmap\RAM.$procmux$686:
Old ports: A=0, B=$techmap\RAM.$procmux$684_Y, Y=$techmap\RAM.$0$memwr$\memArray$SOCnexpoV8_.v:264$599_EN[31:0]$615
New ports: A=1'0, B=$techmap\RAM.$procmux$684_Y [8], Y=$techmap\RAM.$0$memwr$\memArray$SOCnexpoV8_.v:264$599_EN[31:0]$615 [8]
New connections: { $techmap\RAM.$0$memwr$\memArray$SOCnexpoV8_.v:264$599_EN[31:0]$615 [31:9] $techmap\RAM.$0$memwr$\memArray$SOCnexpoV8_.v:264$599_EN[31:0]$615 [7:0] } = { 16'0000000000000000 $techmap\RAM.$0$memwr$\memArray$SOCnexpoV8_.v:264$599_EN[31:0]$615 [8] $techmap\RAM.$0$memwr$\memArray$SOCnexpoV8_.v:264$599_EN[31:0]$615 [8] $techmap\RAM.$0$memwr$\memArray$SOCnexpoV8_.v:264$599_EN[31:0]$615 [8] $techmap\RAM.$0$memwr$\memArray$SOCnexpoV8_.v:264$599_EN[31:0]$615 [8] $techmap\RAM.$0$memwr$\memArray$SOCnexpoV8_.v:264$599_EN[31:0]$615 [8] $techmap\RAM.$0$memwr$\memArray$SOCnexpoV8_.v:264$599_EN[31:0]$615 [8] $techmap\RAM.$0$memwr$\memArray$SOCnexpoV8_.v:264$599_EN[31:0]$615 [8] 8'00000000 }
Consolidated identical input bits for $mux cell $techmap\RAM.$procmux$698:
Old ports: A=0, B=$techmap\RAM.$procmux$696_Y, Y=$techmap\RAM.$0$memwr$\memArray$SOCnexpoV8_.v:265$600_EN[31:0]$618
New ports: A=1'0, B=$techmap\RAM.$procmux$696_Y [16], Y=$techmap\RAM.$0$memwr$\memArray$SOCnexpoV8_.v:265$600_EN[31:0]$618 [16]
New connections: { $techmap\RAM.$0$memwr$\memArray$SOCnexpoV8_.v:265$600_EN[31:0]$618 [31:17] $techmap\RAM.$0$memwr$\memArray$SOCnexpoV8_.v:265$600_EN[31:0]$618 [15:0] } = { 8'00000000 $techmap\RAM.$0$memwr$\memArray$SOCnexpoV8_.v:265$600_EN[31:0]$618 [16] $techmap\RAM.$0$memwr$\memArray$SOCnexpoV8_.v:265$600_EN[31:0]$618 [16] $techmap\RAM.$0$memwr$\memArray$SOCnexpoV8_.v:265$600_EN[31:0]$618 [16] $techmap\RAM.$0$memwr$\memArray$SOCnexpoV8_.v:265$600_EN[31:0]$618 [16] $techmap\RAM.$0$memwr$\memArray$SOCnexpoV8_.v:265$600_EN[31:0]$618 [16] $techmap\RAM.$0$memwr$\memArray$SOCnexpoV8_.v:265$600_EN[31:0]$618 [16] $techmap\RAM.$0$memwr$\memArray$SOCnexpoV8_.v:265$600_EN[31:0]$618 [16] 16'0000000000000000 }
Consolidated identical input bits for $mux cell $techmap\RAM.$procmux$710:
Old ports: A=0, B=$techmap\RAM.$procmux$708_Y, Y=$techmap\RAM.$0$memwr$\memArray$SOCnexpoV8_.v:266$601_EN[31:0]$621
New ports: A=1'0, B=$techmap\RAM.$procmux$708_Y [24], Y=$techmap\RAM.$0$memwr$\memArray$SOCnexpoV8_.v:266$601_EN[31:0]$621 [24]
New connections: { $techmap\RAM.$0$memwr$\memArray$SOCnexpoV8_.v:266$601_EN[31:0]$621 [31:25] $techmap\RAM.$0$memwr$\memArray$SOCnexpoV8_.v:266$601_EN[31:0]$621 [23:0] } = { $techmap\RAM.$0$memwr$\memArray$SOCnexpoV8_.v:266$601_EN[31:0]$621 [24] $techmap\RAM.$0$memwr$\memArray$SOCnexpoV8_.v:266$601_EN[31:0]$621 [24] $techmap\RAM.$0$memwr$\memArray$SOCnexpoV8_.v:266$601_EN[31:0]$621 [24] $techmap\RAM.$0$memwr$\memArray$SOCnexpoV8_.v:266$601_EN[31:0]$621 [24] $techmap\RAM.$0$memwr$\memArray$SOCnexpoV8_.v:266$601_EN[31:0]$621 [24] $techmap\RAM.$0$memwr$\memArray$SOCnexpoV8_.v:266$601_EN[31:0]$621 [24] $techmap\RAM.$0$memwr$\memArray$SOCnexpoV8_.v:266$601_EN[31:0]$621 [24] 24'000000000000000000000000 }
Optimizing cells in module \SOCnexpo.
Performed a total of 13 changes.

4.10.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\SOCnexpo'.
Removed a total of 0 cells.

4.10.6. Executing OPT_RMDFF pass (remove dff with constant values).
Promoting init spec \UART_RX.rcv = 1'0 to constant driver in module SOCnexpo.
Promoted 1 init specs to constant drivers.

4.10.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \SOCnexpo..
Removed 0 unused cells and 9 unused wires.

4.10.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module SOCnexpo.

4.10.9. Rerunning OPT passes. (Maybe there is more to do..)

4.10.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \SOCnexpo..
Creating internal representation of mux trees.
Evaluating internal representation of mux trees.
Analyzing evaluation results.
Removed 0 multiplexer ports.

4.10.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
Optimizing cells in module \SOCnexpo.
Performed a total of 0 changes.

4.10.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\SOCnexpo'.
Removed a total of 0 cells.

4.10.13. Executing OPT_RMDFF pass (remove dff with constant values).

4.10.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \SOCnexpo..

4.10.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module SOCnexpo.

4.10.16. Finished OPT passes. (There is nothing left to do.)

4.11. Executing WREDUCE pass (reducing word size of cells).
Removed top 21 address bits (of 32) from memory init port SOCnexpo.$meminit$\MEMROM$SOCnexpoV8_.v:42$386 (MEMROM).
Removed top 21 address bits (of 32) from memory init port SOCnexpo.$techmap\RAM.$meminit$\memArray$SOCnexpoV8_.v:258$623 (RAM.memArray).
Removed top 27 address bits (of 32) from memory init port SOCnexpo.$techmap\RV32I.reg32.$meminit$\WORKREG$Procesador_V2.0b/registros_32.v:30$100 (RV32I.reg32.WORKREG).
Removed top 27 address bits (of 32) from memory init port SOCnexpo.$techmap\RV32I.reg32.$meminit$\WORKREG$Procesador_V2.0b/registros_32.v:30$101 (RV32I.reg32.WORKREG).
Removed top 27 address bits (of 32) from memory init port SOCnexpo.$techmap\RV32I.reg32.$meminit$\WORKREG$Procesador_V2.0b/registros_32.v:30$102 (RV32I.reg32.WORKREG).
Removed top 27 address bits (of 32) from memory init port SOCnexpo.$techmap\RV32I.reg32.$meminit$\WORKREG$Procesador_V2.0b/registros_32.v:30$103 (RV32I.reg32.WORKREG).
Removed top 27 address bits (of 32) from memory init port SOCnexpo.$techmap\RV32I.reg32.$meminit$\WORKREG$Procesador_V2.0b/registros_32.v:30$104 (RV32I.reg32.WORKREG).
Removed top 27 address bits (of 32) from memory init port SOCnexpo.$techmap\RV32I.reg32.$meminit$\WORKREG$Procesador_V2.0b/registros_32.v:30$105 (RV32I.reg32.WORKREG).
Removed top 27 address bits (of 32) from memory init port SOCnexpo.$techmap\RV32I.reg32.$meminit$\WORKREG$Procesador_V2.0b/registros_32.v:30$106 (RV32I.reg32.WORKREG).
Removed top 27 address bits (of 32) from memory init port SOCnexpo.$techmap\RV32I.reg32.$meminit$\WORKREG$Procesador_V2.0b/registros_32.v:30$107 (RV32I.reg32.WORKREG).
Removed top 27 address bits (of 32) from memory init port SOCnexpo.$techmap\RV32I.reg32.$meminit$\WORKREG$Procesador_V2.0b/registros_32.v:30$108 (RV32I.reg32.WORKREG).
Removed top 27 address bits (of 32) from memory init port SOCnexpo.$techmap\RV32I.reg32.$meminit$\WORKREG$Procesador_V2.0b/registros_32.v:30$109 (RV32I.reg32.WORKREG).
Removed top 27 address bits (of 32) from memory init port SOCnexpo.$techmap\RV32I.reg32.$meminit$\WORKREG$Procesador_V2.0b/registros_32.v:30$110 (RV32I.reg32.WORKREG).
Removed top 27 address bits (of 32) from memory init port SOCnexpo.$techmap\RV32I.reg32.$meminit$\WORKREG$Procesador_V2.0b/registros_32.v:30$111 (RV32I.reg32.WORKREG).
Removed top 27 address bits (of 32) from memory init port SOCnexpo.$techmap\RV32I.reg32.$meminit$\WORKREG$Procesador_V2.0b/registros_32.v:30$112 (RV32I.reg32.WORKREG).
Removed top 27 address bits (of 32) from memory init port SOCnexpo.$techmap\RV32I.reg32.$meminit$\WORKREG$Procesador_V2.0b/registros_32.v:30$113 (RV32I.reg32.WORKREG).
Removed top 27 address bits (of 32) from memory init port SOCnexpo.$techmap\RV32I.reg32.$meminit$\WORKREG$Procesador_V2.0b/registros_32.v:30$114 (RV32I.reg32.WORKREG).
Removed top 27 address bits (of 32) from memory init port SOCnexpo.$techmap\RV32I.reg32.$meminit$\WORKREG$Procesador_V2.0b/registros_32.v:30$115 (RV32I.reg32.WORKREG).
Removed top 27 address bits (of 32) from memory init port SOCnexpo.$techmap\RV32I.reg32.$meminit$\WORKREG$Procesador_V2.0b/registros_32.v:30$84 (RV32I.reg32.WORKREG).
Removed top 27 address bits (of 32) from memory init port SOCnexpo.$techmap\RV32I.reg32.$meminit$\WORKREG$Procesador_V2.0b/registros_32.v:30$85 (RV32I.reg32.WORKREG).
Removed top 27 address bits (of 32) from memory init port SOCnexpo.$techmap\RV32I.reg32.$meminit$\WORKREG$Procesador_V2.0b/registros_32.v:30$86 (RV32I.reg32.WORKREG).
Removed top 27 address bits (of 32) from memory init port SOCnexpo.$techmap\RV32I.reg32.$meminit$\WORKREG$Procesador_V2.0b/registros_32.v:30$87 (RV32I.reg32.WORKREG).
Removed top 27 address bits (of 32) from memory init port SOCnexpo.$techmap\RV32I.reg32.$meminit$\WORKREG$Procesador_V2.0b/registros_32.v:30$88 (RV32I.reg32.WORKREG).
Removed top 27 address bits (of 32) from memory init port SOCnexpo.$techmap\RV32I.reg32.$meminit$\WORKREG$Procesador_V2.0b/registros_32.v:30$89 (RV32I.reg32.WORKREG).
Removed top 27 address bits (of 32) from memory init port SOCnexpo.$techmap\RV32I.reg32.$meminit$\WORKREG$Procesador_V2.0b/registros_32.v:30$90 (RV32I.reg32.WORKREG).
Removed top 27 address bits (of 32) from memory init port SOCnexpo.$techmap\RV32I.reg32.$meminit$\WORKREG$Procesador_V2.0b/registros_32.v:30$91 (RV32I.reg32.WORKREG).
Removed top 27 address bits (of 32) from memory init port SOCnexpo.$techmap\RV32I.reg32.$meminit$\WORKREG$Procesador_V2.0b/registros_32.v:30$92 (RV32I.reg32.WORKREG).
Removed top 27 address bits (of 32) from memory init port SOCnexpo.$techmap\RV32I.reg32.$meminit$\WORKREG$Procesador_V2.0b/registros_32.v:30$93 (RV32I.reg32.WORKREG).
Removed top 27 address bits (of 32) from memory init port SOCnexpo.$techmap\RV32I.reg32.$meminit$\WORKREG$Procesador_V2.0b/registros_32.v:30$94 (RV32I.reg32.WORKREG).
Removed top 27 address bits (of 32) from memory init port SOCnexpo.$techmap\RV32I.reg32.$meminit$\WORKREG$Procesador_V2.0b/registros_32.v:30$95 (RV32I.reg32.WORKREG).
Removed top 27 address bits (of 32) from memory init port SOCnexpo.$techmap\RV32I.reg32.$meminit$\WORKREG$Procesador_V2.0b/registros_32.v:30$96 (RV32I.reg32.WORKREG).
Removed top 27 address bits (of 32) from memory init port SOCnexpo.$techmap\RV32I.reg32.$meminit$\WORKREG$Procesador_V2.0b/registros_32.v:30$97 (RV32I.reg32.WORKREG).
Removed top 27 address bits (of 32) from memory init port SOCnexpo.$techmap\RV32I.reg32.$meminit$\WORKREG$Procesador_V2.0b/registros_32.v:30$98 (RV32I.reg32.WORKREG).
Removed top 27 address bits (of 32) from memory init port SOCnexpo.$techmap\RV32I.reg32.$meminit$\WORKREG$Procesador_V2.0b/registros_32.v:30$99 (RV32I.reg32.WORKREG).
Removed top 31 bits (of 32) from port B of cell SOCnexpo.$add$SOCnexpoV8_.v:28$355 ($add).
Removed top 24 bits (of 32) from port Y of cell SOCnexpo.$add$SOCnexpoV8_.v:28$355 ($add).
Removed top 17 bits (of 18) from port B of cell SOCnexpo.$eq$SOCnexpoV8_.v:74$360 ($eq).
Removed top 2 bits (of 3) from port B of cell SOCnexpo.$eq$SOCnexpoV8_.v:77$364 ($eq).
Removed top 1 bits (of 3) from port B of cell SOCnexpo.$eq$SOCnexpoV8_.v:78$366 ($eq).
Removed top 1 bits (of 3) from port B of cell SOCnexpo.$eq$SOCnexpoV8_.v:79$368 ($eq).
Removed top 1 bits (of 32) from mux cell SOCnexpo.$procmux$793 ($pmux).
Removed top 1 bits (of 2) from port B of cell SOCnexpo.$procmux$796_CMP0 ($eq).
Removed top 12 bits (of 32) from mux cell SOCnexpo.$techmap\RV32I.$procmux$823 ($mux).
Removed top 63 bits (of 64) from port B of cell SOCnexpo.$techmap\RV32I.$add$Procesador_V2.0b/RV32nexpo.v:493$351 ($add).
Removed top 31 bits (of 32) from port B of cell SOCnexpo.$techmap\RV32I.$add$Procesador_V2.0b/RV32nexpo.v:492$349 ($add).
Removed top 31 bits (of 32) from mux cell SOCnexpo.$techmap\RV32I.$ternary$Procesador_V2.0b/RV32nexpo.v:206$317 ($mux).
Removed top 1 bits (of 2) from port B of cell SOCnexpo.$techmap\RV32I.$eq$Procesador_V2.0b/RV32nexpo.v:204$306 ($eq).
Removed top 1 bits (of 7) from port B of cell SOCnexpo.$techmap\RV32I.$eq$Procesador_V2.0b/RV32nexpo.v:149$274 ($eq).
Removed top 1 bits (of 7) from port B of cell SOCnexpo.$techmap\RV32I.$eq$Procesador_V2.0b/RV32nexpo.v:148$273 ($eq).
Removed top 1 bits (of 7) from port B of cell SOCnexpo.$techmap\RV32I.$eq$Procesador_V2.0b/RV32nexpo.v:147$272 ($eq).
Removed top 2 bits (of 7) from port B of cell SOCnexpo.$techmap\RV32I.$eq$Procesador_V2.0b/RV32nexpo.v:146$271 ($eq).
Removed top 2 bits (of 7) from port B of cell SOCnexpo.$techmap\RV32I.$eq$Procesador_V2.0b/RV32nexpo.v:145$270 ($eq).
Removed top 3 bits (of 7) from port B of cell SOCnexpo.$techmap\RV32I.$eq$Procesador_V2.0b/RV32nexpo.v:144$269 ($eq).
Removed top 5 bits (of 7) from port B of cell SOCnexpo.$techmap\RV32I.$eq$Procesador_V2.0b/RV32nexpo.v:143$268 ($eq).
Removed top 29 bits (of 32) from port B of cell SOCnexpo.$techmap\RV32I.$add$Procesador_V2.0b/RV32nexpo.v:100$264 ($add).
Removed top 7 bits (of 32) from FF cell SOCnexpo.$techmap\RAM.$procdff$902 ($dff).
Removed top 8 bits (of 32) from FF cell SOCnexpo.$techmap\RAM.$procdff$899 ($dff).
Removed top 16 bits (of 32) from FF cell SOCnexpo.$techmap\RAM.$procdff$896 ($dff).
Removed top 24 bits (of 32) from FF cell SOCnexpo.$techmap\RAM.$procdff$893 ($dff).
Removed cell SOCnexpo.$techmap\RAM.$procmux$718 ($mux).
Removed cell SOCnexpo.$techmap\RAM.$procmux$716 ($mux).
Removed cell SOCnexpo.$techmap\RAM.$procmux$714 ($mux).
Removed cell SOCnexpo.$techmap\RAM.$procmux$712 ($mux).
Removed cell SOCnexpo.$techmap\RAM.$procmux$706 ($mux).
Removed cell SOCnexpo.$techmap\RAM.$procmux$704 ($mux).
Removed cell SOCnexpo.$techmap\RAM.$procmux$702 ($mux).
Removed cell SOCnexpo.$techmap\RAM.$procmux$700 ($mux).
Removed cell SOCnexpo.$techmap\RAM.$procmux$694 ($mux).
Removed cell SOCnexpo.$techmap\RAM.$procmux$692 ($mux).
Removed cell SOCnexpo.$techmap\RAM.$procmux$690 ($mux).
Removed cell SOCnexpo.$techmap\RAM.$procmux$688 ($mux).
Removed cell SOCnexpo.$techmap\RAM.$procmux$682 ($mux).
Removed cell SOCnexpo.$techmap\RAM.$procmux$680 ($mux).
Removed cell SOCnexpo.$techmap\RAM.$procmux$678 ($mux).
Removed cell SOCnexpo.$techmap\RAM.$procmux$676 ($mux).
Removed top 1 bits (of 2) from port B of cell SOCnexpo.$techmap\LEDS8_4.$procmux$859_CMP0 ($eq).
Removed top 3 bits (of 10) from port B of cell SOCnexpo.$techmap\LEDS8_4.$le$ControladorMatrizLed.v:38$3 ($le).
Removed top 31 bits (of 32) from port B of cell SOCnexpo.$techmap\LEDS8_4.$add$ControladorMatrizLed.v:28$2 ($add).
Removed top 20 bits (of 32) from port Y of cell SOCnexpo.$techmap\LEDS8_4.$add$ControladorMatrizLed.v:28$2 ($add).
Removed top 31 bits (of 32) from port B of cell SOCnexpo.$techmap\UART_TX.$add$uart.v:98$435 ($add).
Removed top 28 bits (of 32) from port Y of cell SOCnexpo.$techmap\UART_TX.$add$uart.v:98$435 ($add).
Removed top 1 bits (of 5) from port B of cell SOCnexpo.$techmap\UART_RX.$eq$uart.v:210$460 ($eq).
Removed top 31 bits (of 32) from port B of cell SOCnexpo.$techmap\UART_RX.$add$uart.v:207$459 ($add).
Removed top 27 bits (of 32) from port Y of cell SOCnexpo.$techmap\UART_RX.$add$uart.v:207$459 ($add).
Removed top 1 bits (of 7) from port B of cell SOCnexpo.$techmap\UART_RX.$eq$uart.v:176$453 ($eq).
Removed top 31 bits (of 32) from port B of cell SOCnexpo.$techmap\UART_RX.$add$uart.v:172$452 ($add).
Removed top 25 bits (of 32) from port Y of cell SOCnexpo.$techmap\UART_RX.$add$uart.v:172$452 ($add).
Removed top 26 bits (of 32) from port B of cell SOCnexpo.$techmap\UART_RX.$lt$uart.v:171$451 ($lt).
Removed top 31 bits (of 32) from mux cell SOCnexpo.$techmap\RV32I.load.$ternary$Procesador_V2.0b/interfaz_mem.v:61$259 ($mux).
Removed top 31 bits (of 32) from mux cell SOCnexpo.$techmap\RV32I.load.$ternary$Procesador_V2.0b/interfaz_mem.v:60$257 ($mux).
Removed top 2 bits (of 4) from mux cell SOCnexpo.$techmap\RV32I.store.$ternary$Procesador_V2.0b/interfaz_mem.v:35$250 ($mux).
Removed top 1 bits (of 33) from port Y of cell SOCnexpo.$techmap\RV32I.alu.$or$Procesador_V2.0b/ALU.v:63$223 ($or).
Removed top 1 bits (of 33) from port A of cell SOCnexpo.$techmap\RV32I.alu.$or$Procesador_V2.0b/ALU.v:63$223 ($or).
Removed top 1 bits (of 33) from port B of cell SOCnexpo.$techmap\RV32I.alu.$or$Procesador_V2.0b/ALU.v:63$223 ($or).
Removed top 1 bits (of 33) from mux cell SOCnexpo.$techmap\RV32I.alu.$ternary$Procesador_V2.0b/ALU.v:63$222 ($mux).
Removed top 1 bits (of 33) from port Y of cell SOCnexpo.$techmap\RV32I.alu.$and$Procesador_V2.0b/ALU.v:63$220 ($and).
Removed top 1 bits (of 33) from port Y of cell SOCnexpo.$techmap\RV32I.alu.$or$Procesador_V2.0b/ALU.v:62$219 ($or).
Removed top 1 bits (of 33) from port A of cell SOCnexpo.$techmap\RV32I.alu.$or$Procesador_V2.0b/ALU.v:62$219 ($or).
Removed top 1 bits (of 33) from port B of cell SOCnexpo.$techmap\RV32I.alu.$or$Procesador_V2.0b/ALU.v:62$219 ($or).
Removed top 1 bits (of 33) from mux cell SOCnexpo.$techmap\RV32I.alu.$ternary$Procesador_V2.0b/ALU.v:62$218 ($mux).
Removed top 1 bits (of 33) from port Y of cell SOCnexpo.$techmap\RV32I.alu.$or$Procesador_V2.0b/ALU.v:62$216 ($or).
Removed top 1 bits (of 33) from port B of cell SOCnexpo.$techmap\RV32I.alu.$or$Procesador_V2.0b/ALU.v:61$215 ($or).
Removed top 1 bits (of 33) from port Y of cell SOCnexpo.$techmap\RV32I.alu.$or$Procesador_V2.0b/ALU.v:61$215 ($or).
Removed top 1 bits (of 33) from port A of cell SOCnexpo.$techmap\RV32I.alu.$or$Procesador_V2.0b/ALU.v:61$215 ($or).
Removed top 1 bits (of 33) from port Y of cell SOCnexpo.$techmap\RV32I.alu.$or$Procesador_V2.0b/ALU.v:60$213 ($or).
Removed top 1 bits (of 33) from port A of cell SOCnexpo.$techmap\RV32I.alu.$or$Procesador_V2.0b/ALU.v:60$213 ($or).
Removed top 1 bits (of 33) from port B of cell SOCnexpo.$techmap\RV32I.alu.$or$Procesador_V2.0b/ALU.v:60$213 ($or).
Removed top 1 bits (of 33) from mux cell SOCnexpo.$techmap\RV32I.alu.$ternary$Procesador_V2.0b/ALU.v:60$212 ($mux).
Removed top 1 bits (of 33) from port Y of cell SOCnexpo.$techmap\RV32I.alu.$xor$Procesador_V2.0b/ALU.v:60$210 ($xor).
Removed top 1 bits (of 33) from port Y of cell SOCnexpo.$techmap\RV32I.alu.$or$Procesador_V2.0b/ALU.v:59$209 ($or).
Removed top 1 bits (of 33) from port A of cell SOCnexpo.$techmap\RV32I.alu.$or$Procesador_V2.0b/ALU.v:59$209 ($or).
Removed top 1 bits (of 33) from port B of cell SOCnexpo.$techmap\RV32I.alu.$or$Procesador_V2.0b/ALU.v:59$209 ($or).
Removed top 32 bits (of 33) from mux cell SOCnexpo.$techmap\RV32I.alu.$ternary$Procesador_V2.0b/ALU.v:59$208 ($mux).
Removed top 1 bits (of 33) from port Y of cell SOCnexpo.$techmap\RV32I.alu.$or$Procesador_V2.0b/ALU.v:58$206 ($or).
Removed top 1 bits (of 33) from port A of cell SOCnexpo.$techmap\RV32I.alu.$or$Procesador_V2.0b/ALU.v:58$206 ($or).
Removed top 1 bits (of 33) from port B of cell SOCnexpo.$techmap\RV32I.alu.$or$Procesador_V2.0b/ALU.v:58$206 ($or).
Removed top 32 bits (of 33) from mux cell SOCnexpo.$techmap\RV32I.alu.$ternary$Procesador_V2.0b/ALU.v:58$205 ($mux).
Removed top 1 bits (of 33) from port B of cell SOCnexpo.$techmap\RV32I.alu.$or$Procesador_V2.0b/ALU.v:57$203 ($or).
Removed top 1 bits (of 33) from port Y of cell SOCnexpo.$techmap\RV32I.alu.$or$Procesador_V2.0b/ALU.v:57$203 ($or).
Removed top 1 bits (of 33) from port A of cell SOCnexpo.$techmap\RV32I.alu.$or$Procesador_V2.0b/ALU.v:57$203 ($or).
Removed top 1 bits (of 33) from mux cell SOCnexpo.$techmap\RV32I.alu.$ternary$Procesador_V2.0b/ALU.v:56$201 ($mux).
Removed top 1 bits (of 33) from mux cell SOCnexpo.$techmap\RV32I.alu.$ternary$Procesador_V2.0b/ALU.v:56$199 ($mux).
Removed top 1 bits (of 33) from port Y of cell SOCnexpo.$techmap\RV32I.alu.$add$Procesador_V2.0b/ALU.v:56$198 ($add).
Removed top 1 bits (of 33) from port A of cell SOCnexpo.$techmap\RV32I.alu.$add$Procesador_V2.0b/ALU.v:47$191 ($add).
Removed top 32 bits (of 33) from port B of cell SOCnexpo.$techmap\RV32I.alu.$add$Procesador_V2.0b/ALU.v:47$190 ($add).
Removed top 1 bits (of 33) from port Y of cell SOCnexpo.$techmap\RV32I.alu.$sshr$Procesador_V2.0b/ALU.v:38$188 ($sshr).
Removed top 7 bits (of 8) from port A of cell SOCnexpo.$techmap\RV32I.alu.$shl$Procesador_V2.0b/ALU.v:31$185 ($shl).
Removed top 31 bits (of 32) from FF cell SOCnexpo.$techmap\RV32I.reg32.$procdff$964 ($dff).
Removed cell SOCnexpo.$techmap\RV32I.reg32.$procmux$853 ($mux).
Removed cell SOCnexpo.$techmap\RV32I.reg32.$procmux$851 ($mux).
Removed top 31 bits (of 32) from port B of cell SOCnexpo.$techmap\UART_TX.bclk.$add$uart.v:39$632 ($add).
Removed top 25 bits (of 32) from port Y of cell SOCnexpo.$techmap\UART_TX.bclk.$add$uart.v:39$632 ($add).
Removed top 31 bits (of 32) from port B of cell SOCnexpo.$techmap\UART_RX.bclk.$add$uart.v:39$632 ($add).
Removed top 25 bits (of 32) from port Y of cell SOCnexpo.$techmap\UART_RX.bclk.$add$uart.v:39$632 ($add).
Removed top 12 bits (of 32) from mux cell SOCnexpo.$techmap\RV32I.$procmux$825 ($mux).
Removed top 7 bits (of 24) from FF cell SOCnexpo.$techmap\RAM.$procdff$899 ($dff).
Removed top 7 bits (of 16) from FF cell SOCnexpo.$techmap\RAM.$procdff$896 ($dff).
Removed top 7 bits (of 8) from FF cell SOCnexpo.$techmap\RAM.$procdff$893 ($dff).
Removed top 12 bits (of 32) from mux cell SOCnexpo.$techmap\RV32I.$procmux$827 ($mux).
Removed top 1 bits (of 32) from mux cell SOCnexpo.$techmap\RV32I.$procmux$829 ($mux).
Removed top 1 bits (of 32) from mux cell SOCnexpo.$techmap\RV32I.$procmux$831 ($mux).
Removed top 20 bits (of 32) from wire SOCnexpo.$techmap\LEDS8_4.$add$ControladorMatrizLed.v:28$2_Y.
Removed top 24 bits (of 32) from wire SOCnexpo.$techmap\RAM.$0$memwr$\memArray$SOCnexpoV8_.v:263$598_EN[31:0]$612.
Removed top 16 bits (of 32) from wire SOCnexpo.$techmap\RAM.$0$memwr$\memArray$SOCnexpoV8_.v:264$599_DATA[31:0]$614.
Removed top 16 bits (of 32) from wire SOCnexpo.$techmap\RAM.$0$memwr$\memArray$SOCnexpoV8_.v:264$599_EN[31:0]$615.
Removed top 8 bits (of 32) from wire SOCnexpo.$techmap\RAM.$0$memwr$\memArray$SOCnexpoV8_.v:265$600_DATA[31:0]$617.
Removed top 8 bits (of 32) from wire SOCnexpo.$techmap\RAM.$0$memwr$\memArray$SOCnexpoV8_.v:265$600_EN[31:0]$618.
Removed top 24 bits (of 32) from wire SOCnexpo.$techmap\RAM.$procmux$672_Y.
Removed top 16 bits (of 32) from wire SOCnexpo.$techmap\RAM.$procmux$684_Y.
Removed top 16 bits (of 32) from wire SOCnexpo.$techmap\RAM.$procmux$688_Y.
Removed top 8 bits (of 32) from wire SOCnexpo.$techmap\RAM.$procmux$696_Y.
Removed top 8 bits (of 32) from wire SOCnexpo.$techmap\RAM.$procmux$700_Y.
Removed top 31 bits (of 32) from wire SOCnexpo.$techmap\RV32I.$logic_not$Procesador_V2.0b/RV32nexpo.v:206$316_Y.
Removed top 63 bits (of 64) from wire SOCnexpo.$techmap\RV32I.$logic_not$Procesador_V2.0b/RV32nexpo.v:493$350_Y.
Removed top 31 bits (of 32) from wire SOCnexpo.$techmap\RV32I.$ternary$Procesador_V2.0b/RV32nexpo.v:206$317_Y.
Removed top 1 bits (of 33) from wire SOCnexpo.$techmap\RV32I.alu.$add$Procesador_V2.0b/ALU.v:56$198_Y.
Removed top 1 bits (of 33) from wire SOCnexpo.$techmap\RV32I.alu.$and$Procesador_V2.0b/ALU.v:63$220_Y.
Removed top 1 bits (of 33) from wire SOCnexpo.$techmap\RV32I.alu.$or$Procesador_V2.0b/ALU.v:57$203_Y.
Removed top 25 bits (of 33) from wire SOCnexpo.$techmap\RV32I.alu.$or$Procesador_V2.0b/ALU.v:61$215_Y.
Removed top 1 bits (of 33) from wire SOCnexpo.$techmap\RV32I.alu.$or$Procesador_V2.0b/ALU.v:62$216_Y.
Removed top 1 bits (of 33) from wire SOCnexpo.$techmap\RV32I.alu.$or$Procesador_V2.0b/ALU.v:62$219_Y.
Removed top 10 bits (of 33) from wire SOCnexpo.$techmap\RV32I.alu.$ternary$Procesador_V2.0b/ALU.v:56$199_Y.
Removed top 9 bits (of 33) from wire SOCnexpo.$techmap\RV32I.alu.$ternary$Procesador_V2.0b/ALU.v:56$201_Y.
Removed top 8 bits (of 32) from wire SOCnexpo.$techmap\RV32I.alu.$ternary$Procesador_V2.0b/ALU.v:57$202_Y.
Removed top 9 bits (of 33) from wire SOCnexpo.$techmap\RV32I.alu.$ternary$Procesador_V2.0b/ALU.v:62$218_Y.
Removed top 25 bits (of 32) from wire SOCnexpo.$techmap\UART_RX.$add$uart.v:172$452_Y.
Removed top 27 bits (of 32) from wire SOCnexpo.$techmap\UART_RX.$add$uart.v:207$459_Y.
Removed top 25 bits (of 32) from wire SOCnexpo.$techmap\UART_RX.bclk.$add$uart.v:39$632_Y.
Removed top 31 bits (of 32) from wire SOCnexpo.$techmap\UART_TX.bclk.$add$uart.v:39$632_Y.
Removed top 1 bits (of 8) from wire SOCnexpo.RV32I.D_funct7.
Removed top 1 bits (of 8) from wire SOCnexpo.RV32I.D_opcode.
Removed top 23 bits (of 32) from wire SOCnexpo.UART_data.
Removed top 1 bits (of 32) from wire SOCnexpo.palabra.

4.12. Executing PEEPOPT pass (run peephole optimizers).

4.13. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \SOCnexpo..
Removed 0 unused cells and 55 unused wires.

4.14. Executing SHARE pass (SAT-based resource sharing).
Found 2 cells in module SOCnexpo that may be considered for resource sharing.
Analyzing resource sharing options for $techmap\RV32I.alu.$sshr$Procesador_V2.0b/ALU.v:38$188 ($sshr):
Found 4 activation_patterns using ctrl signal { \RV32I.alu.funcionIs [5] \RV32I.alu.funcionIs [1] \RV32I.DE_isJALR \RV32I.E_Jump \RV32I.E_JumpOrBranch \rst }.
No candidates found.
Analyzing resource sharing options for $techmap\RV32I.alu.$shl$Procesador_V2.0b/ALU.v:31$185 ($shl):
Found 7 activation_patterns using ctrl signal { \RV32I.alu.funcionIs [5] \RV32I.alu.funcionIs [1] \RV32I.DE_isJALR \RV32I.E_Jump \RV32I.E_JumpOrBranch \rst }.
No candidates found.

4.15. Executing TECHMAP pass (map to technology primitives).

4.15.1. Executing Verilog-2005 frontend: /home/jfdava/.apio/packages/toolchain-yosys/bin/../share/yosys/cmp2lut.v
Parsing Verilog input from `/home/jfdava/.apio/packages/toolchain-yosys/bin/../share/yosys/cmp2lut.v' to AST representation.
Generating RTLIL representation for module `\_90_lut_cmp_'.
Successfully finished Verilog frontend.

4.15.2. Continuing TECHMAP pass.
No more expansions possible.

4.16. Executing OPT_EXPR pass (perform const folding).
Optimizing module SOCnexpo.

4.17. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \SOCnexpo..

4.18. Executing ALUMACC pass (create $alu and $macc cells).
Extracting $alu and $macc cells in module SOCnexpo:
creating $macc model for $add$SOCnexpoV8_.v:28$355 ($add).
creating $macc model for $techmap\LEDS8_4.$add$ControladorMatrizLed.v:28$2 ($add).
creating $macc model for $techmap\RV32I.$add$Procesador_V2.0b/RV32nexpo.v:100$264 ($add).
creating $macc model for $techmap\RV32I.$add$Procesador_V2.0b/RV32nexpo.v:347$328 ($add).
creating $macc model for $techmap\RV32I.$add$Procesador_V2.0b/RV32nexpo.v:492$349 ($add).
creating $macc model for $techmap\RV32I.$add$Procesador_V2.0b/RV32nexpo.v:493$351 ($add).
creating $macc model for $techmap\RV32I.alu.$add$Procesador_V2.0b/ALU.v:47$190 ($add).
creating $macc model for $techmap\RV32I.alu.$add$Procesador_V2.0b/ALU.v:47$191 ($add).
creating $macc model for $techmap\RV32I.alu.$add$Procesador_V2.0b/ALU.v:56$198 ($add).
creating $macc model for $techmap\UART_RX.$add$uart.v:172$452 ($add).
creating $macc model for $techmap\UART_RX.$add$uart.v:207$459 ($add).
creating $macc model for $techmap\UART_RX.bclk.$add$uart.v:39$632 ($add).
creating $macc model for $techmap\UART_TX.$add$uart.v:98$435 ($add).
creating $macc model for $techmap\UART_TX.bclk.$add$uart.v:39$632 ($add).
merging $macc model for $techmap\RV32I.alu.$add$Procesador_V2.0b/ALU.v:47$190 into $techmap\RV32I.alu.$add$Procesador_V2.0b/ALU.v:47$191.
creating $alu model for $macc $techmap\UART_TX.$add$uart.v:98$435.
creating $alu model for $macc $techmap\UART_RX.bclk.$add$uart.v:39$632.
creating $alu model for $macc $techmap\UART_RX.$add$uart.v:207$459.
creating $alu model for $macc $techmap\UART_RX.$add$uart.v:172$452.
creating $alu model for $macc $techmap\RV32I.alu.$add$Procesador_V2.0b/ALU.v:56$198.
creating $alu model for $macc $techmap\RV32I.alu.$add$Procesador_V2.0b/ALU.v:47$191.
creating $alu model for $macc $techmap\UART_TX.bclk.$add$uart.v:39$632.
creating $alu model for $macc $techmap\RV32I.$add$Procesador_V2.0b/RV32nexpo.v:493$351.
creating $alu model for $macc $techmap\RV32I.$add$Procesador_V2.0b/RV32nexpo.v:492$349.
creating $alu model for $macc $techmap\RV32I.$add$Procesador_V2.0b/RV32nexpo.v:347$328.
creating $alu model for $macc $techmap\RV32I.$add$Procesador_V2.0b/RV32nexpo.v:100$264.
creating $alu model for $macc $techmap\LEDS8_4.$add$ControladorMatrizLed.v:28$2.
creating $alu model for $macc $add$SOCnexpoV8_.v:28$355.
creating $alu model for $techmap\LEDS8_4.$le$ControladorMatrizLed.v:38$3 ($le): new $alu
creating $alu model for $techmap\UART_RX.$lt$uart.v:171$451 ($lt): new $alu
creating $alu model for $techmap\UART_RX.$eq$uart.v:176$453 ($eq): merged with $techmap\UART_RX.$lt$uart.v:171$451.
creating $alu cell for $techmap\UART_RX.$lt$uart.v:171$451, $techmap\UART_RX.$eq$uart.v:176$453: $auto$alumacc.cc:485:replace_alu$1006
creating $alu cell for $techmap\LEDS8_4.$le$ControladorMatrizLed.v:38$3: $auto$alumacc.cc:485:replace_alu$1017
creating $alu cell for $add$SOCnexpoV8_.v:28$355: $auto$alumacc.cc:485:replace_alu$1030
creating $alu cell for $techmap\LEDS8_4.$add$ControladorMatrizLed.v:28$2: $auto$alumacc.cc:485:replace_alu$1033
creating $alu cell for $techmap\RV32I.$add$Procesador_V2.0b/RV32nexpo.v:100$264: $auto$alumacc.cc:485:replace_alu$1036
creating $alu cell for $techmap\RV32I.$add$Procesador_V2.0b/RV32nexpo.v:347$328: $auto$alumacc.cc:485:replace_alu$1039
creating $alu cell for $techmap\RV32I.$add$Procesador_V2.0b/RV32nexpo.v:492$349: $auto$alumacc.cc:485:replace_alu$1042
creating $alu cell for $techmap\RV32I.$add$Procesador_V2.0b/RV32nexpo.v:493$351: $auto$alumacc.cc:485:replace_alu$1045
creating $alu cell for $techmap\UART_TX.bclk.$add$uart.v:39$632: $auto$alumacc.cc:485:replace_alu$1048
creating $alu cell for $techmap\RV32I.alu.$add$Procesador_V2.0b/ALU.v:47$191: $auto$alumacc.cc:485:replace_alu$1051
creating $alu cell for $techmap\RV32I.alu.$add$Procesador_V2.0b/ALU.v:56$198: $auto$alumacc.cc:485:replace_alu$1054
creating $alu cell for $techmap\UART_RX.$add$uart.v:172$452: $auto$alumacc.cc:485:replace_alu$1057
creating $alu cell for $techmap\UART_RX.$add$uart.v:207$459: $auto$alumacc.cc:485:replace_alu$1060
creating $alu cell for $techmap\UART_RX.bclk.$add$uart.v:39$632: $auto$alumacc.cc:485:replace_alu$1063
creating $alu cell for $techmap\UART_TX.$add$uart.v:98$435: $auto$alumacc.cc:485:replace_alu$1066
created 15 $alu and 0 $macc cells.

4.19. Executing OPT pass (performing simple optimizations).

4.19.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module SOCnexpo.

4.19.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\SOCnexpo'.
Removed a total of 3 cells.

4.19.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \SOCnexpo..
Creating internal representation of mux trees.
Evaluating internal representation of mux trees.
Analyzing evaluation results.
Removed 0 multiplexer ports.

4.19.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
Optimizing cells in module \SOCnexpo.
New input vector for $reduce_or cell $auto$alumacc.cc:520:replace_alu$1028: { $auto$rtlil.cc:1862:Not$1027 $auto$rtlil.cc:1865:ReduceAnd$1023 }
New input vector for $reduce_and cell $auto$alumacc.cc:75:get_eq$1022: { $auto$alumacc.cc:501:replace_alu$1018 [0] $auto$alumacc.cc:501:replace_alu$1018 [1] $auto$alumacc.cc:501:replace_alu$1018 [2] $auto$alumacc.cc:501:replace_alu$1018 [3] $auto$alumacc.cc:501:replace_alu$1018 [4] $auto$alumacc.cc:501:replace_alu$1018 [5] $auto$alumacc.cc:501:replace_alu$1018 [6] $auto$alumacc.cc:501:replace_alu$1018 [7] $auto$alumacc.cc:501:replace_alu$1018 [8] $auto$alumacc.cc:501:replace_alu$1018 [9] }
New input vector for $reduce_and cell $auto$alumacc.cc:75:get_eq$1011: { $auto$alumacc.cc:501:replace_alu$1007 [0] $auto$alumacc.cc:501:replace_alu$1007 [1] $auto$alumacc.cc:501:replace_alu$1007 [2] $auto$alumacc.cc:501:replace_alu$1007 [3] $auto$alumacc.cc:501:replace_alu$1007 [4] $auto$alumacc.cc:501:replace_alu$1007 [5] $auto$alumacc.cc:501:replace_alu$1007 [6] }
Optimizing cells in module \SOCnexpo.
Performed a total of 3 changes.

4.19.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\SOCnexpo'.
Removed a total of 0 cells.

4.19.6. Executing OPT_RMDFF pass (remove dff with constant values).

4.19.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \SOCnexpo..
Removed 2 unused cells and 8 unused wires.

4.19.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module SOCnexpo.

4.19.9. Rerunning OPT passes. (Maybe there is more to do..)

4.19.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \SOCnexpo..
Creating internal representation of mux trees.
Evaluating internal representation of mux trees.
Analyzing evaluation results.
Removed 0 multiplexer ports.

4.19.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
Optimizing cells in module \SOCnexpo.
Performed a total of 0 changes.

4.19.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\SOCnexpo'.
Removed a total of 0 cells.

4.19.13. Executing OPT_RMDFF pass (remove dff with constant values).

4.19.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \SOCnexpo..

4.19.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module SOCnexpo.

4.19.16. Finished OPT passes. (There is nothing left to do.)

4.20. Executing FSM pass (extract and optimize FSM).

4.20.1. Executing FSM_DETECT pass (finding FSMs in design).
Not marking SOCnexpo.LEDS8_4.act_row as FSM state register:
Register is connected to module port.
Users of register don't seem to benefit from recoding.

4.20.2. Executing FSM_EXTRACT pass (extracting FSM from design).

4.20.3. Executing FSM_OPT pass (simple optimizations of FSMs).

4.20.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \SOCnexpo..

4.20.5. Executing FSM_OPT pass (simple optimizations of FSMs).

4.20.6. Executing FSM_RECODE pass (re-assigning FSM state encoding).

4.20.7. Executing FSM_INFO pass (dumping all available information on FSM cells).

4.20.8. Executing FSM_MAP pass (mapping FSMs to basic logic).

4.21. Executing OPT pass (performing simple optimizations).

4.21.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module SOCnexpo.

4.21.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\SOCnexpo'.
Removed a total of 0 cells.

4.21.3. Executing OPT_RMDFF pass (remove dff with constant values).

4.21.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \SOCnexpo..

4.21.5. Finished fast OPT passes.

4.22. Executing MEMORY pass.

4.22.1. Executing OPT_MEM pass (optimize memories).
Performed a total of 0 transformations.

4.22.2. Executing MEMORY_DFF pass (merging $dff cells to $memrd and $memwr).
Checking cell `$techmap\RAM.$memwr$\memArray$SOCnexpoV8_.v:263$624' in module `\SOCnexpo': merged $dff to cell.
Checking cell `$techmap\RAM.$memwr$\memArray$SOCnexpoV8_.v:264$625' in module `\SOCnexpo': merged $dff to cell.
Checking cell `$techmap\RAM.$memwr$\memArray$SOCnexpoV8_.v:265$626' in module `\SOCnexpo': merged $dff to cell.
Checking cell `$techmap\RAM.$memwr$\memArray$SOCnexpoV8_.v:266$627' in module `\SOCnexpo': merged $dff to cell.
Checking cell `$techmap\RV32I.reg32.$memwr$\WORKREG$Procesador_V2.0b/registros_32.v:43$116' in module `\SOCnexpo': merged $dff to cell.
Checking cell `$memrd$\MEMROM$SOCnexpoV8_.v:47$359' in module `\SOCnexpo': merged data $dff to cell.
Checking cell `$techmap\RAM.$memrd$\memArray$SOCnexpoV8_.v:268$622' in module `\SOCnexpo': merged data $dff to cell.
Checking cell `$techmap\RV32I.reg32.$memrd$\WORKREG$Procesador_V2.0b/registros_32.v:35$78' in module `\SOCnexpo': merged data $dff to cell.
Checking cell `$techmap\RV32I.reg32.$memrd$\WORKREG$Procesador_V2.0b/registros_32.v:38$79' in module `\SOCnexpo': merged data $dff to cell.

4.22.3. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \SOCnexpo..
Removed 16 unused cells and 22 unused wires.

4.22.4. Executing MEMORY_SHARE pass (consolidating $memrd/$memwr cells).
Consolidating write ports of memory SOCnexpo.RAM.memArray by address:
New clock domain: posedge \clk12MHz
Port 0 ($techmap\RAM.$memwr$\memArray$SOCnexpoV8_.v:263$624) has addr \RV32I.EM_resultado [12:2].
Active bits: 00000000000000000000000011111111
Port 1 ($techmap\RAM.$memwr$\memArray$SOCnexpoV8_.v:264$625) has addr \RV32I.EM_resultado [12:2].
Active bits: 00000000000000001111111100000000
Merging port 0 into this one.
Active bits: 00000000000000001111111111111111
Port 2 ($techmap\RAM.$memwr$\memArray$SOCnexpoV8_.v:265$626) has addr \RV32I.EM_resultado [12:2].
Active bits: 00000000111111110000000000000000
Merging port 1 into this one.
Active bits: 00000000111111111111111111111111
Port 3 ($techmap\RAM.$memwr$\memArray$SOCnexpoV8_.v:266$627) has addr \RV32I.EM_resultado [12:2].
Active bits: 11111111000000000000000000000000
Merging port 2 into this one.
Active bits: 11111111111111111111111111111111

4.22.5. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \SOCnexpo..

4.22.6. Executing MEMORY_COLLECT pass (generating $mem cells).
Collecting $memrd, $memwr and $meminit for memory `\MEMROM' in module `\SOCnexpo':
$meminit$\MEMROM$SOCnexpoV8_.v:42$386 ($meminit)
$memrd$\MEMROM$SOCnexpoV8_.v:47$359 ($memrd)
Collecting $memrd, $memwr and $meminit for memory `\RAM.memArray' in module `\SOCnexpo':
$techmap\RAM.$meminit$\memArray$SOCnexpoV8_.v:258$623 ($meminit)
$techmap\RAM.$memwr$\memArray$SOCnexpoV8_.v:266$627 ($memwr)
$techmap\RAM.$memrd$\memArray$SOCnexpoV8_.v:268$622 ($memrd)
Collecting $memrd, $memwr and $meminit for memory `\RV32I.reg32.WORKREG' in module `\SOCnexpo':
$techmap\RV32I.reg32.$meminit$\WORKREG$Procesador_V2.0b/registros_32.v:30$84 ($meminit)
$techmap\RV32I.reg32.$meminit$\WORKREG$Procesador_V2.0b/registros_32.v:30$85 ($meminit)
$techmap\RV32I.reg32.$meminit$\WORKREG$Procesador_V2.0b/registros_32.v:30$86 ($meminit)
$techmap\RV32I.reg32.$meminit$\WORKREG$Procesador_V2.0b/registros_32.v:30$87 ($meminit)
$techmap\RV32I.reg32.$meminit$\WORKREG$Procesador_V2.0b/registros_32.v:30$88 ($meminit)
$techmap\RV32I.reg32.$meminit$\WORKREG$Procesador_V2.0b/registros_32.v:30$89 ($meminit)
$techmap\RV32I.reg32.$meminit$\WORKREG$Procesador_V2.0b/registros_32.v:30$90 ($meminit)
$techmap\RV32I.reg32.$meminit$\WORKREG$Procesador_V2.0b/registros_32.v:30$91 ($meminit)
$techmap\RV32I.reg32.$meminit$\WORKREG$Procesador_V2.0b/registros_32.v:30$92 ($meminit)
$techmap\RV32I.reg32.$meminit$\WORKREG$Procesador_V2.0b/registros_32.v:30$93 ($meminit)
$techmap\RV32I.reg32.$meminit$\WORKREG$Procesador_V2.0b/registros_32.v:30$94 ($meminit)
$techmap\RV32I.reg32.$meminit$\WORKREG$Procesador_V2.0b/registros_32.v:30$95 ($meminit)
$techmap\RV32I.reg32.$meminit$\WORKREG$Procesador_V2.0b/registros_32.v:30$96 ($meminit)
$techmap\RV32I.reg32.$meminit$\WORKREG$Procesador_V2.0b/registros_32.v:30$97 ($meminit)
$techmap\RV32I.reg32.$meminit$\WORKREG$Procesador_V2.0b/registros_32.v:30$98 ($meminit)
$techmap\RV32I.reg32.$meminit$\WORKREG$Procesador_V2.0b/registros_32.v:30$99 ($meminit)
$techmap\RV32I.reg32.$meminit$\WORKREG$Procesador_V2.0b/registros_32.v:30$100 ($meminit)
$techmap\RV32I.reg32.$meminit$\WORKREG$Procesador_V2.0b/registros_32.v:30$101 ($meminit)
$techmap\RV32I.reg32.$meminit$\WORKREG$Procesador_V2.0b/registros_32.v:30$102 ($meminit)
$techmap\RV32I.reg32.$meminit$\WORKREG$Procesador_V2.0b/registros_32.v:30$103 ($meminit)
$techmap\RV32I.reg32.$meminit$\WORKREG$Procesador_V2.0b/registros_32.v:30$104 ($meminit)
$techmap\RV32I.reg32.$meminit$\WORKREG$Procesador_V2.0b/registros_32.v:30$105 ($meminit)
$techmap\RV32I.reg32.$meminit$\WORKREG$Procesador_V2.0b/registros_32.v:30$106 ($meminit)
$techmap\RV32I.reg32.$meminit$\WORKREG$Procesador_V2.0b/registros_32.v:30$107 ($meminit)
$techmap\RV32I.reg32.$meminit$\WORKREG$Procesador_V2.0b/registros_32.v:30$108 ($meminit)
$techmap\RV32I.reg32.$meminit$\WORKREG$Procesador_V2.0b/registros_32.v:30$109 ($meminit)
$techmap\RV32I.reg32.$meminit$\WORKREG$Procesador_V2.0b/registros_32.v:30$110 ($meminit)
$techmap\RV32I.reg32.$meminit$\WORKREG$Procesador_V2.0b/registros_32.v:30$111 ($meminit)
$techmap\RV32I.reg32.$meminit$\WORKREG$Procesador_V2.0b/registros_32.v:30$112 ($meminit)
$techmap\RV32I.reg32.$meminit$\WORKREG$Procesador_V2.0b/registros_32.v:30$113 ($meminit)
$techmap\RV32I.reg32.$meminit$\WORKREG$Procesador_V2.0b/registros_32.v:30$114 ($meminit)
$techmap\RV32I.reg32.$meminit$\WORKREG$Procesador_V2.0b/registros_32.v:30$115 ($meminit)
$techmap\RV32I.reg32.$memwr$\WORKREG$Procesador_V2.0b/registros_32.v:43$116 ($memwr)
$techmap\RV32I.reg32.$memrd$\WORKREG$Procesador_V2.0b/registros_32.v:38$79 ($memrd)
$techmap\RV32I.reg32.$memrd$\WORKREG$Procesador_V2.0b/registros_32.v:35$78 ($memrd)

4.23. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \SOCnexpo..

4.24. Executing MEMORY_BRAM pass (mapping $mem cells to block memories).
Processing SOCnexpo.MEMROM:
Properties: ports=1 bits=65536 rports=1 wports=0 dbits=32 abits=11 words=2048
Checking rule #1 for bram type $__ICE40_RAM4K_M0 (variant 1):
Bram geometry: abits=8 dbits=16 wports=0 rports=0
Estimated number of duplicates for more read ports: dups=1
Metrics for $__ICE40_RAM4K_M0: awaste=0 dwaste=0 bwaste=0 waste=0 efficiency=100
Rule #1 for bram type $__ICE40_RAM4K_M0 (variant 1) accepted.
Mapping to bram type $__ICE40_RAM4K_M0 (variant 1):
Read port #0 is in clock domain \clk12MHz.
Mapped to bram port A1.1.
Updated properties: dups=1 waste=0 efficiency=100
Storing for later selection.
Checking rule #2 for bram type $__ICE40_RAM4K_M123 (variant 1):
Bram geometry: abits=9 dbits=8 wports=0 rports=0
Estimated number of duplicates for more read ports: dups=1
Metrics for $__ICE40_RAM4K_M123: awaste=0 dwaste=0 bwaste=0 waste=0 efficiency=100
Rule #2 for bram type $__ICE40_RAM4K_M123 (variant 1) accepted.
Mapping to bram type $__ICE40_RAM4K_M123 (variant 1):
Read port #0 is in clock domain \clk12MHz.
Mapped to bram port A1.1.
Updated properties: dups=1 waste=0 efficiency=100
Storing for later selection.
Checking rule #2 for bram type $__ICE40_RAM4K_M123 (variant 2):
Bram geometry: abits=10 dbits=4 wports=0 rports=0
Estimated number of duplicates for more read ports: dups=1
Metrics for $__ICE40_RAM4K_M123: awaste=0 dwaste=0 bwaste=0 waste=0 efficiency=100
Rule #2 for bram type $__ICE40_RAM4K_M123 (variant 2) accepted.
Mapping to bram type $__ICE40_RAM4K_M123 (variant 2):
Read port #0 is in clock domain \clk12MHz.
Mapped to bram port A1.1.
Updated properties: dups=1 waste=0 efficiency=100
Storing for later selection.
Checking rule #2 for bram type $__ICE40_RAM4K_M123 (variant 3):
Bram geometry: abits=11 dbits=2 wports=0 rports=0
Estimated number of duplicates for more read ports: dups=1
Metrics for $__ICE40_RAM4K_M123: awaste=0 dwaste=0 bwaste=0 waste=0 efficiency=100
Rule #2 for bram type $__ICE40_RAM4K_M123 (variant 3) accepted.
Mapping to bram type $__ICE40_RAM4K_M123 (variant 3):
Read port #0 is in clock domain \clk12MHz.
Mapped to bram port A1.1.
Updated properties: dups=1 waste=0 efficiency=100
Storing for later selection.
Selecting best of 4 rules:
Efficiency for rule 2.3: efficiency=100, cells=16, acells=1
Efficiency for rule 2.2: efficiency=100, cells=16, acells=2
Efficiency for rule 2.1: efficiency=100, cells=16, acells=4
Efficiency for rule 1.1: efficiency=100, cells=16, acells=8
Selected rule 2.3 with efficiency 100.
Mapping to bram type $__ICE40_RAM4K_M123 (variant 3):
Read port #0 is in clock domain \clk12MHz.
Mapped to bram port A1.1.
Creating $__ICE40_RAM4K_M123 cell at grid position <0 0 0>: MEMROM.0.0.0
Creating $__ICE40_RAM4K_M123 cell at grid position <1 0 0>: MEMROM.1.0.0
Creating $__ICE40_RAM4K_M123 cell at grid position <2 0 0>: MEMROM.2.0.0
Creating $__ICE40_RAM4K_M123 cell at grid position <3 0 0>: MEMROM.3.0.0
Creating $__ICE40_RAM4K_M123 cell at grid position <4 0 0>: MEMROM.4.0.0
Creating $__ICE40_RAM4K_M123 cell at grid position <5 0 0>: MEMROM.5.0.0
Creating $__ICE40_RAM4K_M123 cell at grid position <6 0 0>: MEMROM.6.0.0
Creating $__ICE40_RAM4K_M123 cell at grid position <7 0 0>: MEMROM.7.0.0
Creating $__ICE40_RAM4K_M123 cell at grid position <8 0 0>: MEMROM.8.0.0
Creating $__ICE40_RAM4K_M123 cell at grid position <9 0 0>: MEMROM.9.0.0
Creating $__ICE40_RAM4K_M123 cell at grid position <10 0 0>: MEMROM.10.0.0
Creating $__ICE40_RAM4K_M123 cell at grid position <11 0 0>: MEMROM.11.0.0
Creating $__ICE40_RAM4K_M123 cell at grid position <12 0 0>: MEMROM.12.0.0
Creating $__ICE40_RAM4K_M123 cell at grid position <13 0 0>: MEMROM.13.0.0
Creating $__ICE40_RAM4K_M123 cell at grid position <14 0 0>: MEMROM.14.0.0
Creating $__ICE40_RAM4K_M123 cell at grid position <15 0 0>: MEMROM.15.0.0
Processing SOCnexpo.RAM.memArray:
Properties: ports=2 bits=65536 rports=1 wports=1 dbits=32 abits=11 words=2048
Checking rule #1 for bram type $__ICE40_RAM4K_M0 (variant 1):
Bram geometry: abits=8 dbits=16 wports=0 rports=0
Estimated number of duplicates for more read ports: dups=1
Metrics for $__ICE40_RAM4K_M0: awaste=0 dwaste=0 bwaste=0 waste=0 efficiency=100
Rule #1 for bram type $__ICE40_RAM4K_M0 (variant 1) accepted.
Mapping to bram type $__ICE40_RAM4K_M0 (variant 1):
Write port #0 is in clock domain \clk12MHz.
Mapped to bram port B1.
Read port #0 is in clock domain \clk12MHz.
Mapped to bram port A1.1.
Updated properties: dups=1 waste=0 efficiency=100
Storing for later selection.
Checking rule #2 for bram type $__ICE40_RAM4K_M123 (variant 1):
Bram geometry: abits=9 dbits=8 wports=0 rports=0
Estimated number of duplicates for more read ports: dups=1
Metrics for $__ICE40_RAM4K_M123: awaste=0 dwaste=0 bwaste=0 waste=0 efficiency=100
Rule #2 for bram type $__ICE40_RAM4K_M123 (variant 1) accepted.
Mapping to bram type $__ICE40_RAM4K_M123 (variant 1):
Write port #0 is in clock domain \clk12MHz.
Mapped to bram port B1.
Read port #0 is in clock domain \clk12MHz.
Mapped to bram port A1.1.
Updated properties: dups=1 waste=0 efficiency=100
Storing for later selection.
Checking rule #2 for bram type $__ICE40_RAM4K_M123 (variant 2):
Bram geometry: abits=10 dbits=4 wports=0 rports=0
Estimated number of duplicates for more read ports: dups=1
Metrics for $__ICE40_RAM4K_M123: awaste=0 dwaste=0 bwaste=0 waste=0 efficiency=100
Rule #2 for bram type $__ICE40_RAM4K_M123 (variant 2) accepted.
Mapping to bram type $__ICE40_RAM4K_M123 (variant 2):
Write port #0 is in clock domain \clk12MHz.
Mapped to bram port B1.
Read port #0 is in clock domain \clk12MHz.
Mapped to bram port A1.1.
Updated properties: dups=1 waste=0 efficiency=100
Storing for later selection.
Checking rule #2 for bram type $__ICE40_RAM4K_M123 (variant 3):
Bram geometry: abits=11 dbits=2 wports=0 rports=0
Estimated number of duplicates for more read ports: dups=1
Metrics for $__ICE40_RAM4K_M123: awaste=0 dwaste=0 bwaste=0 waste=0 efficiency=100
Rule #2 for bram type $__ICE40_RAM4K_M123 (variant 3) accepted.
Mapping to bram type $__ICE40_RAM4K_M123 (variant 3):
Write port #0 is in clock domain \clk12MHz.
Mapped to bram port B1.
Read port #0 is in clock domain \clk12MHz.
Mapped to bram port A1.1.
Updated properties: dups=1 waste=0 efficiency=100
Storing for later selection.
Selecting best of 4 rules:
Efficiency for rule 2.3: efficiency=100, cells=16, acells=1
Efficiency for rule 2.2: efficiency=100, cells=16, acells=2
Efficiency for rule 2.1: efficiency=100, cells=16, acells=4
Efficiency for rule 1.1: efficiency=100, cells=16, acells=8
Selected rule 2.3 with efficiency 100.
Mapping to bram type $__ICE40_RAM4K_M123 (variant 3):
Write port #0 is in clock domain \clk12MHz.
Mapped to bram port B1.
Read port #0 is in clock domain \clk12MHz.
Mapped to bram port A1.1.
Creating $__ICE40_RAM4K_M123 cell at grid position <0 0 0>: RAM.memArray.0.0.0
Creating $__ICE40_RAM4K_M123 cell at grid position <1 0 0>: RAM.memArray.1.0.0
Creating $__ICE40_RAM4K_M123 cell at grid position <2 0 0>: RAM.memArray.2.0.0
Creating $__ICE40_RAM4K_M123 cell at grid position <3 0 0>: RAM.memArray.3.0.0
Creating $__ICE40_RAM4K_M123 cell at grid position <4 0 0>: RAM.memArray.4.0.0
Creating $__ICE40_RAM4K_M123 cell at grid position <5 0 0>: RAM.memArray.5.0.0
Creating $__ICE40_RAM4K_M123 cell at grid position <6 0 0>: RAM.memArray.6.0.0
Creating $__ICE40_RAM4K_M123 cell at grid position <7 0 0>: RAM.memArray.7.0.0
Creating $__ICE40_RAM4K_M123 cell at grid position <8 0 0>: RAM.memArray.8.0.0
Creating $__ICE40_RAM4K_M123 cell at grid position <9 0 0>: RAM.memArray.9.0.0
Creating $__ICE40_RAM4K_M123 cell at grid position <10 0 0>: RAM.memArray.10.0.0
Creating $__ICE40_RAM4K_M123 cell at grid position <11 0 0>: RAM.memArray.11.0.0
Creating $__ICE40_RAM4K_M123 cell at grid position <12 0 0>: RAM.memArray.12.0.0
Creating $__ICE40_RAM4K_M123 cell at grid position <13 0 0>: RAM.memArray.13.0.0
Creating $__ICE40_RAM4K_M123 cell at grid position <14 0 0>: RAM.memArray.14.0.0
Creating $__ICE40_RAM4K_M123 cell at grid position <15 0 0>: RAM.memArray.15.0.0
Processing SOCnexpo.RV32I.reg32.WORKREG:
Properties: ports=3 bits=1024 rports=2 wports=1 dbits=32 abits=5 words=32
Checking rule #1 for bram type $__ICE40_RAM4K_M0 (variant 1):
Bram geometry: abits=8 dbits=16 wports=0 rports=0
Estimated number of duplicates for more read ports: dups=1
Metrics for $__ICE40_RAM4K_M0: awaste=224 dwaste=0 bwaste=3584 waste=3584 efficiency=12
Rule #1 for bram type $__ICE40_RAM4K_M0 (variant 1) accepted.
Mapping to bram type $__ICE40_RAM4K_M0 (variant 1):
Write port #0 is in clock domain !\clk12MHz.
Mapped to bram port B1.
Read port #0 is in clock domain \clk12MHz.
Mapped to bram port A1.1.
Read port #1 is in clock domain \clk12MHz.
Failed to map read port #1.
Growing more read ports by duplicating bram cells.
Read port #0 is in clock domain \clk12MHz.
Mapped to bram port A1.1.
Read port #1 is in clock domain \clk12MHz.
Mapped to bram port A1.2.
Updated properties: dups=2 waste=7168 efficiency=6
Storing for later selection.
Checking rule #2 for bram type $__ICE40_RAM4K_M123 (variant 1):
Bram geometry: abits=9 dbits=8 wports=0 rports=0
Estimated number of duplicates for more read ports: dups=1
Metrics for $__ICE40_RAM4K_M123: awaste=480 dwaste=0 bwaste=3840 waste=3840 efficiency=6
Rule #2 for bram type $__ICE40_RAM4K_M123 (variant 1) accepted.
Mapping to bram type $__ICE40_RAM4K_M123 (variant 1):
Write port #0 is in clock domain !\clk12MHz.
Mapped to bram port B1.
Read port #0 is in clock domain \clk12MHz.
Mapped to bram port A1.1.
Read port #1 is in clock domain \clk12MHz.
Failed to map read port #1.
Growing more read ports by duplicating bram cells.
Read port #0 is in clock domain \clk12MHz.
Mapped to bram port A1.1.
Read port #1 is in clock domain \clk12MHz.
Mapped to bram port A1.2.
Updated properties: dups=2 waste=7680 efficiency=3
Storing for later selection.
Checking rule #2 for bram type $__ICE40_RAM4K_M123 (variant 2):
Bram geometry: abits=10 dbits=4 wports=0 rports=0
Estimated number of duplicates for more read ports: dups=1
Metrics for $__ICE40_RAM4K_M123: awaste=992 dwaste=0 bwaste=3968 waste=3968 efficiency=3
Rule #2 for bram type $__ICE40_RAM4K_M123 (variant 2) accepted.
Mapping to bram type $__ICE40_RAM4K_M123 (variant 2):
Write port #0 is in clock domain !\clk12MHz.
Mapped to bram port B1.
Read port #0 is in clock domain \clk12MHz.
Mapped to bram port A1.1.
Read port #1 is in clock domain \clk12MHz.
Failed to map read port #1.
Growing more read ports by duplicating bram cells.
Read port #0 is in clock domain \clk12MHz.
Mapped to bram port A1.1.
Read port #1 is in clock domain \clk12MHz.
Mapped to bram port A1.2.
Updated properties: dups=2 waste=7936 efficiency=1
Rule for bram type $__ICE40_RAM4K_M123 rejected: requirement 'min efficiency 2' not met.
Mapping to bram type $__ICE40_RAM4K_M123 failed.
Checking rule #2 for bram type $__ICE40_RAM4K_M123 (variant 3):
Bram geometry: abits=11 dbits=2 wports=0 rports=0
Estimated number of duplicates for more read ports: dups=1
Metrics for $__ICE40_RAM4K_M123: awaste=2016 dwaste=0 bwaste=4032 waste=4032 efficiency=1
Rule #2 for bram type $__ICE40_RAM4K_M123 (variant 3) rejected: requirement 'min efficiency 2' not met.
Selecting best of 2 rules:
Efficiency for rule 2.1: efficiency=3, cells=8, acells=1
Efficiency for rule 1.1: efficiency=6, cells=4, acells=1
Selected rule 1.1 with efficiency 6.
Mapping to bram type $__ICE40_RAM4K_M0 (variant 1):
Write port #0 is in clock domain !\clk12MHz.
Mapped to bram port B1.
Read port #0 is in clock domain \clk12MHz.
Mapped to bram port A1.1.
Read port #1 is in clock domain \clk12MHz.
Failed to map read port #1.
Growing more read ports by duplicating bram cells.
Read port #0 is in clock domain \clk12MHz.
Mapped to bram port A1.1.
Read port #1 is in clock domain \clk12MHz.
Mapped to bram port A1.2.
Creating $__ICE40_RAM4K_M0 cell at grid position <0 0 0>: RV32I.reg32.WORKREG.0.0.0
Creating $__ICE40_RAM4K_M0 cell at grid position <0 0 1>: RV32I.reg32.WORKREG.0.0.1
Creating $__ICE40_RAM4K_M0 cell at grid position <1 0 0>: RV32I.reg32.WORKREG.1.0.0
Creating $__ICE40_RAM4K_M0 cell at grid position <1 0 1>: RV32I.reg32.WORKREG.1.0.1

4.25. Executing TECHMAP pass (map to technology primitives).

4.25.1. Executing Verilog-2005 frontend: /home/jfdava/.apio/packages/toolchain-yosys/bin/../share/yosys/ice40/brams_map.v
Parsing Verilog input from `/home/jfdava/.apio/packages/toolchain-yosys/bin/../share/yosys/ice40/brams_map.v' to AST representation.
Generating RTLIL representation for module `\$__ICE40_RAM4K'.
Generating RTLIL representation for module `\$__ICE40_RAM4K_M0'.
Generating RTLIL representation for module `\$__ICE40_RAM4K_M123'.
Successfully finished Verilog frontend.

4.25.2. Continuing TECHMAP pass.
Using template $paramod$49da78f14376c226e3f73898b86349d2523b6092\$__ICE40_RAM4K_M123 for cells of type $__ICE40_RAM4K_M123.
Using template $paramod$a8aa7d12844ac8b0d870ac804d4149ae6f078986\$__ICE40_RAM4K_M123 for cells of type $__ICE40_RAM4K_M123.
Using template $paramod$e7da016e61eb174bc4a157898a70972884970ec1\$__ICE40_RAM4K_M123 for cells of type $__ICE40_RAM4K_M123.
Using template $paramod$6848f3359059f5598f1765e6b527c876a18fe714\$__ICE40_RAM4K_M0 for cells of type $__ICE40_RAM4K_M0.
Using template $paramod$8c9caa9c316a640b79d653050021d5a2b518ca58\$__ICE40_RAM4K_M123 for cells of type $__ICE40_RAM4K_M123.
Using template $paramod$8065e31cc199b6cff6b083f1ad4bbb23eb7038da\$__ICE40_RAM4K_M123 for cells of type $__ICE40_RAM4K_M123.
Using template $paramod$43e316d8c83333e77d3cda6acbe2e82aee4ba905\$__ICE40_RAM4K_M123 for cells of type $__ICE40_RAM4K_M123.
Using template $paramod$0e44341c6359cd699a4f2624e0c6abd2aaa97866\$__ICE40_RAM4K_M123 for cells of type $__ICE40_RAM4K_M123.
Using template $paramod$253ec975b63a5a47e1562e71285c7fdecc505f28\$__ICE40_RAM4K_M123 for cells of type $__ICE40_RAM4K_M123.
Using template $paramod$d39ff6d1e4c8175799ee3dc79aed312674933750\$__ICE40_RAM4K_M123 for cells of type $__ICE40_RAM4K_M123.
Using template $paramod$d7dc27f0be80a639292a2b7c5f939f4b572c8541\$__ICE40_RAM4K_M123 for cells of type $__ICE40_RAM4K_M123.
Using template $paramod$ef3795b17e30aa643d5036c6dfc722da236e6e25\$__ICE40_RAM4K_M123 for cells of type $__ICE40_RAM4K_M123.
Using template $paramod$04a91933b7c4f704d0da0f1a9143463ab94e1526\$__ICE40_RAM4K_M123 for cells of type $__ICE40_RAM4K_M123.
Using template $paramod$ef61f3b15c1b8a8796d63c7c136e0deeb92ae25a\$__ICE40_RAM4K_M123 for cells of type $__ICE40_RAM4K_M123.
Using template $paramod$1ea0f20111d0936fdb52ae728dd91e890aab8f17\$__ICE40_RAM4K_M123 for cells of type $__ICE40_RAM4K_M123.
Using template $paramod$e316530381baf3e4177deadcaaf0acb6f41e4f8d\$__ICE40_RAM4K_M123 for cells of type $__ICE40_RAM4K_M123.
Using template $paramod$b4fa3dd6f6d32c6c412d9a1a8f9680eb73d43084\$__ICE40_RAM4K_M123 for cells of type $__ICE40_RAM4K_M123.
Using template $paramod$5b3a546462178891c10942a5739f8be9ea8c9310\$__ICE40_RAM4K_M123 for cells of type $__ICE40_RAM4K_M123.
Using template $paramod$9efb18edb8de02bad1a7094f5e96d3699b439d6d\$__ICE40_RAM4K_M123 for cells of type $__ICE40_RAM4K_M123.
Using template $paramod$9c3de4fde3caf232a36174b45213ceae29494249\$__ICE40_RAM4K_M123 for cells of type $__ICE40_RAM4K_M123.
Using template $paramod$ad71a841cb7560dd185296d03b6e23729c25ddb1\$__ICE40_RAM4K_M123 for cells of type $__ICE40_RAM4K_M123.
Using template $paramod$c968b0013a165f3634e5c92d29081f0d392b5770\$__ICE40_RAM4K_M123 for cells of type $__ICE40_RAM4K_M123.
Using template $paramod$97cde197a967de7b4af14f3d3b27b3b7f2ff1eb3\$__ICE40_RAM4K_M123 for cells of type $__ICE40_RAM4K_M123.
Using template $paramod$c299441b407b39a3eed06ffb52e1d5f8b024d123\$__ICE40_RAM4K_M123 for cells of type $__ICE40_RAM4K_M123.
Using template $paramod$631aa3d8085982bec08e3c6462eb04a92cf6ea98\$__ICE40_RAM4K_M123 for cells of type $__ICE40_RAM4K_M123.
Using template $paramod$3cac6450a894b4e9da8ffe19af6571a02c73b999\$__ICE40_RAM4K_M123 for cells of type $__ICE40_RAM4K_M123.
Using template $paramod$bbe8445093f44dd5346ea54bfbfffb984fe06ac1\$__ICE40_RAM4K_M123 for cells of type $__ICE40_RAM4K_M123.
Using template $paramod$11e971eef5d171a268adb0d67074bada7e5847c6\$__ICE40_RAM4K_M123 for cells of type $__ICE40_RAM4K_M123.
Using template $paramod$d05de495dde6bb70860f9129064bfff9f6763c10\$__ICE40_RAM4K for cells of type $__ICE40_RAM4K.
Using template $paramod$fe63ec2ab6634e93d6eb73a2d422aa8c63752778\$__ICE40_RAM4K for cells of type $__ICE40_RAM4K.
Using template $paramod$44870a8530cb3ab4e7642ea0523cbc6664165311\$__ICE40_RAM4K for cells of type $__ICE40_RAM4K.
Using template $paramod$dabb5c3961102dbebaf39564c774caa0adba5d45\$__ICE40_RAM4K for cells of type $__ICE40_RAM4K.
Using template $paramod$622fc6a661b18ed5b926d36c52950e5152072fad\$__ICE40_RAM4K for cells of type $__ICE40_RAM4K.
Using template $paramod$a99a0694763cb9c4bfe6aef49cb7fd96bc2d56a2\$__ICE40_RAM4K for cells of type $__ICE40_RAM4K.
Using template $paramod$bd5ae792e284658ab9479e6718256c6e5cbe74bd\$__ICE40_RAM4K for cells of type $__ICE40_RAM4K.
Using template $paramod$d9f430b26a8f802b8897ed6d8702c74f582ca96b\$__ICE40_RAM4K for cells of type $__ICE40_RAM4K.
Using template $paramod$6583422058d296b054b8f17a5973c9c276116928\$__ICE40_RAM4K for cells of type $__ICE40_RAM4K.
Using template $paramod$0f1abeea0452129e2da1b5b4af3205daf6f62996\$__ICE40_RAM4K for cells of type $__ICE40_RAM4K.
Using template $paramod$3f99c3a72696703ff7cfa334b2933aba4c8d0425\$__ICE40_RAM4K for cells of type $__ICE40_RAM4K.
Using template $paramod$44c3ede37ee5e397586e794c35ae8d78d8c226d5\$__ICE40_RAM4K for cells of type $__ICE40_RAM4K.
Using template $paramod$8fc1ea870b69862a705dbd6f2c96f45ccc7f768c\$__ICE40_RAM4K for cells of type $__ICE40_RAM4K.
Using template $paramod$48a496dfb2a3148cf50ade5fd1c59eda856af1e7\$__ICE40_RAM4K for cells of type $__ICE40_RAM4K.
Using template $paramod$54aab2e17318fee33c9f5f74decaf5df4782f578\$__ICE40_RAM4K for cells of type $__ICE40_RAM4K.
Using template $paramod$64e33e362b91afce25de47c67eff862b2a9b9eec\$__ICE40_RAM4K for cells of type $__ICE40_RAM4K.
Using template $paramod$3b62b2558518b799c357a045fad41a9b4cc26cca\$__ICE40_RAM4K for cells of type $__ICE40_RAM4K.
Using template $paramod$d58b47ffcfc063077771eab072f3ca381b742177\$__ICE40_RAM4K for cells of type $__ICE40_RAM4K.
Using template $paramod$1e99678737b2cd4ee98a7e5b173390505a9d3fc4\$__ICE40_RAM4K for cells of type $__ICE40_RAM4K.
Using template $paramod$19c8f5c5865cd3db63daf576d0474b888e1da522\$__ICE40_RAM4K for cells of type $__ICE40_RAM4K.
Using template $paramod$902085627fd59a6b268dff8bd9ce895169f304f6\$__ICE40_RAM4K for cells of type $__ICE40_RAM4K.
Using template $paramod$8d1dd2c7d7f45163b6190bc987af418ed338ad34\$__ICE40_RAM4K for cells of type $__ICE40_RAM4K.
Using template $paramod$b03cd6bb204a56f8104ccd8441ff4f1d11137e7a\$__ICE40_RAM4K for cells of type $__ICE40_RAM4K.
Using template $paramod$84b3f69eba997ca69281cdead1cfd0c79b03fdd3\$__ICE40_RAM4K for cells of type $__ICE40_RAM4K.
Using template $paramod$2d99f85ef83aa950a288ec9b60ddf3213e3287b1\$__ICE40_RAM4K for cells of type $__ICE40_RAM4K.
Using template $paramod$2a28e4b01580b8da3604211d655b7a30cfba2b78\$__ICE40_RAM4K for cells of type $__ICE40_RAM4K.
Using template $paramod$a39408acb3a0fc515cdfe0eb701254c4be50fda9\$__ICE40_RAM4K for cells of type $__ICE40_RAM4K.
Using template $paramod$019ddcf982d74081f554bd2465497fdf78ee4917\$__ICE40_RAM4K for cells of type $__ICE40_RAM4K.
No more expansions possible.

4.26. Executing ICE40_BRAMINIT pass.

4.27. Executing OPT pass (performing simple optimizations).

4.27.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module SOCnexpo.

4.27.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\SOCnexpo'.
Removed a total of 3 cells.

4.27.3. Executing OPT_RMDFF pass (remove dff with constant values).

4.27.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \SOCnexpo..
Removed 2 unused cells and 886 unused wires.

4.27.5. Finished fast OPT passes.

4.28. Executing MEMORY_MAP pass (converting $mem cells to logic and flip-flops).

4.29. Executing OPT pass (performing simple optimizations).

4.29.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module SOCnexpo.

4.29.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\SOCnexpo'.
Removed a total of 0 cells.

4.29.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \SOCnexpo..
Creating internal representation of mux trees.
Evaluating internal representation of mux trees.
Analyzing evaluation results.
Removed 0 multiplexer ports.

4.29.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
Optimizing cells in module \SOCnexpo.
Consolidated identical input bits for $pmux cell $procmux$793:
Old ports: A=31'1100001011011000110111101001000, B=93'110111001110101010011010010000001000000010000001101111011001000000000000000000000000000000000, Y=\palabra
New ports: A=7'1011010, B=21'111010000111010000000, Y={ \palabra [18] \palabra [16] \palabra [8] \palabra [6:5] \palabra [3:2] }
New connections: { \palabra [30:19] \palabra [17] \palabra [15:9] \palabra [7] \palabra [4] \palabra [1:0] } = { \palabra [18] \palabra [8] 1'0 \palabra [16] \palabra [16] \palabra [16] \palabra [3] 1'0 \palabra [18] \palabra [8] \palabra [16] \palabra [3] 2'00 \palabra [8] \palabra [6] 1'0 \palabra [8] \palabra [8] \palabra [6] 4'0000 }
Consolidated identical input bits for $mux cell $techmap\RV32I.$procmux$823:
Old ports: A={ \RV32I.FD_instr [31] \RV32I.FD_instr [31] \RV32I.FD_instr [31] \RV32I.FD_instr [31] \RV32I.FD_instr [31] \RV32I.FD_instr [31] \RV32I.FD_instr [31] \RV32I.FD_instr [31] \RV32I.FD_instr [31:20] }, B={ \RV32I.FD_instr [19:12] \RV32I.FD_instr [20] \RV32I.FD_instr [30:21] 1'0 }, Y=$techmap\RV32I.$procmux$823_Y [19:0]
New ports: A={ \RV32I.FD_instr [31] \RV32I.FD_instr [31] \RV32I.FD_instr [31] \RV32I.FD_instr [31] \RV32I.FD_instr [31] \RV32I.FD_instr [31] \RV32I.FD_instr [31] \RV32I.FD_instr [31] \RV32I.FD_instr [31] \RV32I.FD_instr [20] }, B={ \RV32I.FD_instr [19:12] \RV32I.FD_instr [20] 1'0 }, Y={ $techmap\RV32I.$procmux$823_Y [19:11] $techmap\RV32I.$procmux$823_Y [0] }
New connections: $techmap\RV32I.$procmux$823_Y [10:1] = \RV32I.FD_instr [30:21]
Consolidated identical input bits for $mux cell $techmap\RV32I.load.$ternary$Procesador_V2.0b/interfaz_mem.v:67$260:
Old ports: A={ \RV32I.load.signo_byte \RV32I.load.signo_byte \RV32I.load.signo_byte \RV32I.load.signo_byte \RV32I.load.signo_byte \RV32I.load.signo_byte \RV32I.load.signo_byte \RV32I.load.signo_byte \RV32I.load.signo_byte \RV32I.load.signo_byte \RV32I.load.signo_byte \RV32I.load.signo_byte \RV32I.load.signo_byte \RV32I.load.signo_byte \RV32I.load.signo_byte \RV32I.load.signo_byte \RV32I.load.signo_byte \RV32I.load.signo_byte \RV32I.load.signo_byte \RV32I.load.signo_byte \RV32I.load.signo_byte \RV32I.load.signo_byte \RV32I.load.signo_byte \RV32I.load.signo_byte \RV32I.load.data_byte }, B={ \RV32I.load.signo_half \RV32I.load.signo_half \RV32I.load.signo_half \RV32I.load.signo_half \RV32I.load.signo_half \RV32I.load.signo_half \RV32I.load.signo_half \RV32I.load.signo_half \RV32I.load.signo_half \RV32I.load.signo_half \RV32I.load.signo_half \RV32I.load.signo_half \RV32I.load.signo_half \RV32I.load.signo_half \RV32I.load.signo_half \RV32I.load.signo_half \RV32I.load.data_half }, Y=$techmap\RV32I.load.$ternary$Procesador_V2.0b/interfaz_mem.v:67$260_Y
New ports: A={ \RV32I.load.signo_byte \RV32I.load.signo_byte \RV32I.load.signo_byte \RV32I.load.signo_byte \RV32I.load.signo_byte \RV32I.load.signo_byte \RV32I.load.signo_byte \RV32I.load.signo_byte \RV32I.load.signo_byte \RV32I.load.data_byte }, B={ \RV32I.load.signo_half \RV32I.load.data_half }, Y=$techmap\RV32I.load.$ternary$Procesador_V2.0b/interfaz_mem.v:67$260_Y [16:0]
New connections: $techmap\RV32I.load.$ternary$Procesador_V2.0b/interfaz_mem.v:67$260_Y [31:17] = { $techmap\RV32I.load.$ternary$Procesador_V2.0b/interfaz_mem.v:67$260_Y [16] $techmap\RV32I.load.$ternary$Procesador_V2.0b/interfaz_mem.v:67$260_Y [16] $techmap\RV32I.load.$ternary$Procesador_V2.0b/interfaz_mem.v:67$260_Y [16] $techmap\RV32I.load.$ternary$Procesador_V2.0b/interfaz_mem.v:67$260_Y [16] $techmap\RV32I.load.$ternary$Procesador_V2.0b/interfaz_mem.v:67$260_Y [16] $techmap\RV32I.load.$ternary$Procesador_V2.0b/interfaz_mem.v:67$260_Y [16] $techmap\RV32I.load.$ternary$Procesador_V2.0b/interfaz_mem.v:67$260_Y [16] $techmap\RV32I.load.$ternary$Procesador_V2.0b/interfaz_mem.v:67$260_Y [16] $techmap\RV32I.load.$ternary$Procesador_V2.0b/interfaz_mem.v:67$260_Y [16] $techmap\RV32I.load.$ternary$Procesador_V2.0b/interfaz_mem.v:67$260_Y [16] $techmap\RV32I.load.$ternary$Procesador_V2.0b/interfaz_mem.v:67$260_Y [16] $techmap\RV32I.load.$ternary$Procesador_V2.0b/interfaz_mem.v:67$260_Y [16] $techmap\RV32I.load.$ternary$Procesador_V2.0b/interfaz_mem.v:67$260_Y [16] $techmap\RV32I.load.$ternary$Procesador_V2.0b/interfaz_mem.v:67$260_Y [16] $techmap\RV32I.load.$ternary$Procesador_V2.0b/interfaz_mem.v:67$260_Y [16] }
Consolidated identical input bits for $mux cell $techmap\RV32I.store.$ternary$Procesador_V2.0b/interfaz_mem.v:33$248:
Old ports: A=4'0011, B=4'1100, Y=$techmap\RV32I.store.$ternary$Procesador_V2.0b/interfaz_mem.v:33$248_Y
New ports: A=2'01, B=2'10, Y={ $techmap\RV32I.store.$ternary$Procesador_V2.0b/interfaz_mem.v:33$248_Y [2] $techmap\RV32I.store.$ternary$Procesador_V2.0b/interfaz_mem.v:33$248_Y [0] }
New connections: { $techmap\RV32I.store.$ternary$Procesador_V2.0b/interfaz_mem.v:33$248_Y [3] $techmap\RV32I.store.$ternary$Procesador_V2.0b/interfaz_mem.v:33$248_Y [1] } = { $techmap\RV32I.store.$ternary$Procesador_V2.0b/interfaz_mem.v:33$248_Y [2] $techmap\RV32I.store.$ternary$Procesador_V2.0b/interfaz_mem.v:33$248_Y [0] }
Consolidated identical input bits for $mux cell $techmap\RV32I.store.$ternary$Procesador_V2.0b/interfaz_mem.v:34$249:
Old ports: A=4'0100, B=4'1000, Y=$techmap\RV32I.store.$ternary$Procesador_V2.0b/interfaz_mem.v:34$249_Y
New ports: A=2'01, B=2'10, Y=$techmap\RV32I.store.$ternary$Procesador_V2.0b/interfaz_mem.v:34$249_Y [3:2]
New connections: $techmap\RV32I.store.$ternary$Procesador_V2.0b/interfaz_mem.v:34$249_Y [1:0] = 2'00
Consolidated identical input bits for $mux cell $ternary$SOCnexpoV8_.v:101$374:
Old ports: A=0, B={ 1'0 \palabra }, Y=$ternary$SOCnexpoV8_.v:101$374_Y
New ports: A=31'0000000000000000000000000000000, B=\palabra, Y=$ternary$SOCnexpoV8_.v:101$374_Y [30:0]
New connections: $ternary$SOCnexpoV8_.v:101$374_Y [31] = 1'0
Optimizing cells in module \SOCnexpo.
Consolidated identical input bits for $mux cell $techmap\RV32I.$procmux$825:
Old ports: A=$techmap\RV32I.$procmux$823_Y [19:0], B={ \RV32I.FD_instr [31] \RV32I.FD_instr [31] \RV32I.FD_instr [31] \RV32I.FD_instr [31] \RV32I.FD_instr [31] \RV32I.FD_instr [31] \RV32I.FD_instr [31] \RV32I.FD_instr [31] \RV32I.FD_instr [31:25] \RV32I.FD_instr [11:7] }, Y=$techmap\RV32I.$procmux$825_Y [19:0]
New ports: A={ $techmap\RV32I.$procmux$823_Y [19:11] \RV32I.FD_instr [24:21] $techmap\RV32I.$procmux$823_Y [0] }, B={ \RV32I.FD_instr [31] \RV32I.FD_instr [31] \RV32I.FD_instr [31] \RV32I.FD_instr [31] \RV32I.FD_instr [31] \RV32I.FD_instr [31] \RV32I.FD_instr [31] \RV32I.FD_instr [31] \RV32I.FD_instr [31] \RV32I.FD_instr [11:7] }, Y={ $techmap\RV32I.$procmux$825_Y [19:11] $techmap\RV32I.$procmux$825_Y [4:0] }
New connections: $techmap\RV32I.$procmux$825_Y [10:5] = \RV32I.FD_instr [30:25]
Consolidated identical input bits for $mux cell $ternary$SOCnexpoV8_.v:101$374:
Old ports: A=31'0000000000000000000000000000000, B=\palabra, Y=$ternary$SOCnexpoV8_.v:101$374_Y [30:0]
New ports: A=7'0000000, B={ \palabra [18] \palabra [16] \palabra [8] \palabra [6:5] \palabra [3:2] }, Y={ $ternary$SOCnexpoV8_.v:101$374_Y [18] $ternary$SOCnexpoV8_.v:101$374_Y [16] $ternary$SOCnexpoV8_.v:101$374_Y [8] $ternary$SOCnexpoV8_.v:101$374_Y [6:5] $ternary$SOCnexpoV8_.v:101$374_Y [3:2] }
New connections: { $ternary$SOCnexpoV8_.v:101$374_Y [30:19] $ternary$SOCnexpoV8_.v:101$374_Y [17] $ternary$SOCnexpoV8_.v:101$374_Y [15:9] $ternary$SOCnexpoV8_.v:101$374_Y [7] $ternary$SOCnexpoV8_.v:101$374_Y [4] $ternary$SOCnexpoV8_.v:101$374_Y [1:0] } = { $ternary$SOCnexpoV8_.v:101$374_Y [18] $ternary$SOCnexpoV8_.v:101$374_Y [8] 1'0 $ternary$SOCnexpoV8_.v:101$374_Y [16] $ternary$SOCnexpoV8_.v:101$374_Y [16] $ternary$SOCnexpoV8_.v:101$374_Y [16] $ternary$SOCnexpoV8_.v:101$374_Y [3] 1'0 $ternary$SOCnexpoV8_.v:101$374_Y [18] $ternary$SOCnexpoV8_.v:101$374_Y [8] $ternary$SOCnexpoV8_.v:101$374_Y [16] $ternary$SOCnexpoV8_.v:101$374_Y [3] 2'00 $ternary$SOCnexpoV8_.v:101$374_Y [8] $ternary$SOCnexpoV8_.v:101$374_Y [6] 1'0 $ternary$SOCnexpoV8_.v:101$374_Y [8] $ternary$SOCnexpoV8_.v:101$374_Y [8] $ternary$SOCnexpoV8_.v:101$374_Y [6] 4'0000 }
Consolidated identical input bits for $mux cell $ternary$SOCnexpoV8_.v:101$375:
Old ports: A=$ternary$SOCnexpoV8_.v:101$374_Y, B={ 23'00000000000000000000000 \tx_ready \UART_RX.data }, Y=$ternary$SOCnexpoV8_.v:101$375_Y
New ports: A=$ternary$SOCnexpoV8_.v:101$374_Y [30:0], B={ 22'0000000000000000000000 \tx_ready \UART_RX.data }, Y=$ternary$SOCnexpoV8_.v:101$375_Y [30:0]
New connections: $ternary$SOCnexpoV8_.v:101$375_Y [31] = 1'0
Optimizing cells in module \SOCnexpo.
Consolidated identical input bits for $mux cell $techmap\RV32I.$procmux$827:
Old ports: A=$techmap\RV32I.$procmux$825_Y [19:0], B={ \RV32I.FD_instr [31] \RV32I.FD_instr [31] \RV32I.FD_instr [31] \RV32I.FD_instr [31] \RV32I.FD_instr [31] \RV32I.FD_instr [31] \RV32I.FD_instr [31] \RV32I.FD_instr [31] \RV32I.FD_instr [7] \RV32I.FD_instr [30:25] \RV32I.FD_instr [11:8] 1'0 }, Y=$techmap\RV32I.$procmux$827_Y [19:0]
New ports: A={ $techmap\RV32I.$procmux$825_Y [19:11] $techmap\RV32I.$procmux$825_Y [4:0] }, B={ \RV32I.FD_instr [31] \RV32I.FD_instr [31] \RV32I.FD_instr [31] \RV32I.FD_instr [31] \RV32I.FD_instr [31] \RV32I.FD_instr [31] \RV32I.FD_instr [31] \RV32I.FD_instr [31] \RV32I.FD_instr [7] \RV32I.FD_instr [11:8] 1'0 }, Y={ $techmap\RV32I.$procmux$827_Y [19:11] $techmap\RV32I.$procmux$827_Y [4:0] }
New connections: $techmap\RV32I.$procmux$827_Y [10:5] = \RV32I.FD_instr [30:25]
Consolidated identical input bits for $mux cell $ternary$SOCnexpoV8_.v:101$375:
Old ports: A=$ternary$SOCnexpoV8_.v:101$374_Y [30:0], B={ 22'0000000000000000000000 \tx_ready \UART_RX.data }, Y=$ternary$SOCnexpoV8_.v:101$375_Y [30:0]
New ports: A={ $ternary$SOCnexpoV8_.v:101$374_Y [3] $ternary$SOCnexpoV8_.v:101$374_Y [18] $ternary$SOCnexpoV8_.v:101$374_Y [16] $ternary$SOCnexpoV8_.v:101$374_Y [8] $ternary$SOCnexpoV8_.v:101$374_Y [6] $ternary$SOCnexpoV8_.v:101$374_Y [8] 1'0 $ternary$SOCnexpoV8_.v:101$374_Y [6:5] 1'0 $ternary$SOCnexpoV8_.v:101$374_Y [3:2] 2'00 }, B={ 5'00000 \tx_ready \UART_RX.data }, Y={ $ternary$SOCnexpoV8_.v:101$375_Y [19:18] $ternary$SOCnexpoV8_.v:101$375_Y [16] $ternary$SOCnexpoV8_.v:101$375_Y [10:0] }
New connections: { $ternary$SOCnexpoV8_.v:101$375_Y [30:20] $ternary$SOCnexpoV8_.v:101$375_Y [17] $ternary$SOCnexpoV8_.v:101$375_Y [15:11] } = { $ternary$SOCnexpoV8_.v:101$375_Y [18] $ternary$SOCnexpoV8_.v:101$375_Y [10] 1'0 $ternary$SOCnexpoV8_.v:101$375_Y [16] $ternary$SOCnexpoV8_.v:101$375_Y [16] $ternary$SOCnexpoV8_.v:101$375_Y [16] $ternary$SOCnexpoV8_.v:101$375_Y [19] 1'0 $ternary$SOCnexpoV8_.v:101$375_Y [18] $ternary$SOCnexpoV8_.v:101$375_Y [10] $ternary$SOCnexpoV8_.v:101$375_Y [16] 2'00 $ternary$SOCnexpoV8_.v:101$375_Y [10:9] 1'0 $ternary$SOCnexpoV8_.v:101$375_Y [10] }
Consolidated identical input bits for $mux cell $ternary$SOCnexpoV8_.v:101$376:
Old ports: A=$ternary$SOCnexpoV8_.v:101$375_Y, B={ 31'0000000000000000000000000000000 \leds_en }, Y=$ternary$SOCnexpoV8_.v:101$376_Y
New ports: A=$ternary$SOCnexpoV8_.v:101$375_Y [30:0], B={ 30'000000000000000000000000000000 \leds_en }, Y=$ternary$SOCnexpoV8_.v:101$376_Y [30:0]
New connections: $ternary$SOCnexpoV8_.v:101$376_Y [31] = 1'0
Optimizing cells in module \SOCnexpo.
Consolidated identical input bits for $mux cell $ternary$SOCnexpoV8_.v:101$376:
Old ports: A=$ternary$SOCnexpoV8_.v:101$375_Y [30:0], B={ 30'000000000000000000000000000000 \leds_en }, Y=$ternary$SOCnexpoV8_.v:101$376_Y [30:0]
New ports: A={ $ternary$SOCnexpoV8_.v:101$375_Y [19:18] $ternary$SOCnexpoV8_.v:101$375_Y [16] $ternary$SOCnexpoV8_.v:101$375_Y [10:0] }, B={ 13'0000000000000 \leds_en }, Y={ $ternary$SOCnexpoV8_.v:101$376_Y [19:18] $ternary$SOCnexpoV8_.v:101$376_Y [16] $ternary$SOCnexpoV8_.v:101$376_Y [10:0] }
New connections: { $ternary$SOCnexpoV8_.v:101$376_Y [30:20] $ternary$SOCnexpoV8_.v:101$376_Y [17] $ternary$SOCnexpoV8_.v:101$376_Y [15:11] } = { $ternary$SOCnexpoV8_.v:101$376_Y [18] $ternary$SOCnexpoV8_.v:101$376_Y [10] 1'0 $ternary$SOCnexpoV8_.v:101$376_Y [16] $ternary$SOCnexpoV8_.v:101$376_Y [16] $ternary$SOCnexpoV8_.v:101$376_Y [16] $ternary$SOCnexpoV8_.v:101$376_Y [19] 1'0 $ternary$SOCnexpoV8_.v:101$376_Y [18] $ternary$SOCnexpoV8_.v:101$376_Y [10] $ternary$SOCnexpoV8_.v:101$376_Y [16] 2'00 $ternary$SOCnexpoV8_.v:101$376_Y [10:9] 1'0 $ternary$SOCnexpoV8_.v:101$376_Y [10] }
Optimizing cells in module \SOCnexpo.
Performed a total of 13 changes.

4.29.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\SOCnexpo'.
Removed a total of 1 cells.

4.29.6. Executing OPT_RMDFF pass (remove dff with constant values).

4.29.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \SOCnexpo..
Removed 0 unused cells and 1 unused wires.

4.29.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module SOCnexpo.

4.29.9. Rerunning OPT passes. (Maybe there is more to do..)

4.29.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \SOCnexpo..
Creating internal representation of mux trees.
Evaluating internal representation of mux trees.
Analyzing evaluation results.
Removed 0 multiplexer ports.

4.29.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
Optimizing cells in module \SOCnexpo.
Performed a total of 0 changes.

4.29.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\SOCnexpo'.
Removed a total of 0 cells.

4.29.13. Executing OPT_RMDFF pass (remove dff with constant values).

4.29.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \SOCnexpo..

4.29.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module SOCnexpo.

4.29.16. Finished OPT passes. (There is nothing left to do.)

4.30. Executing ICE40_WRAPCARRY pass (wrap carries).

4.31. Executing TECHMAP pass (map to technology primitives).

4.31.1. Executing Verilog-2005 frontend: /home/jfdava/.apio/packages/toolchain-yosys/bin/../share/yosys/techmap.v
Parsing Verilog input from `/home/jfdava/.apio/packages/toolchain-yosys/bin/../share/yosys/techmap.v' to AST representation.
Generating RTLIL representation for module `\_90_simplemap_bool_ops'.
Generating RTLIL representation for module `\_90_simplemap_reduce_ops'.
Generating RTLIL representation for module `\_90_simplemap_logic_ops'.
Generating RTLIL representation for module `\_90_simplemap_compare_ops'.
Generating RTLIL representation for module `\_90_simplemap_various'.
Generating RTLIL representation for module `\_90_simplemap_registers'.
Generating RTLIL representation for module `\_90_shift_ops_shr_shl_sshl_sshr'.
Generating RTLIL representation for module `\_90_shift_shiftx'.
Generating RTLIL representation for module `\_90_fa'.
Generating RTLIL representation for module `\_90_lcu'.
Generating RTLIL representation for module `\_90_alu'.
Generating RTLIL representation for module `\_90_macc'.
Generating RTLIL representation for module `\_90_alumacc'.
Generating RTLIL representation for module `\$__div_mod_u'.
Generating RTLIL representation for module `\$__div_mod'.
Generating RTLIL representation for module `\_90_div'.
Generating RTLIL representation for module `\_90_mod'.
Generating RTLIL representation for module `\_90_pow'.
Generating RTLIL representation for module `\_90_pmux'.
Generating RTLIL representation for module `\_90_lut'.
Successfully finished Verilog frontend.

4.31.2. Executing Verilog-2005 frontend: /home/jfdava/.apio/packages/toolchain-yosys/bin/../share/yosys/ice40/arith_map.v
Parsing Verilog input from `/home/jfdava/.apio/packages/toolchain-yosys/bin/../share/yosys/ice40/arith_map.v' to AST representation.
Generating RTLIL representation for module `\_80_ice40_alu'.
Successfully finished Verilog frontend.

4.31.3. Continuing TECHMAP pass.
Using template $paramod\_80_ice40_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=1\B_WIDTH=12\Y_WIDTH=12 for cells of type $alu.
Using extmapper simplemap for cells of type $eq.
Using extmapper simplemap for cells of type $logic_not.
Using extmapper simplemap for cells of type $and.
Using extmapper simplemap for cells of type $not.
Using extmapper simplemap for cells of type $mux.
Using template $paramod\_90_pmux\WIDTH=7\S_WIDTH=3 for cells of type $pmux.
Using extmapper simplemap for cells of type $dff.
Using extmapper simplemap for cells of type $or.
Using extmapper simplemap for cells of type $reduce_or.
Using template $paramod\_90_pmux\WIDTH=32\S_WIDTH=5 for cells of type $pmux.
Using template $paramod\_80_ice40_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=1\B_WIDTH=7\Y_WIDTH=7 for cells of type $alu.
Using template $paramod\_80_ice40_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=1\B_WIDTH=64\Y_WIDTH=64 for cells of type $alu.
Using extmapper simplemap for cells of type $logic_or.
Using extmapper simplemap for cells of type $logic_and.
Using template $paramod\_80_ice40_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=32\B_WIDTH=32\Y_WIDTH=32 for cells of type $alu.
Using extmapper simplemap for cells of type $reduce_and.
Using template $paramod\_80_ice40_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=6\B_WIDTH=7\Y_WIDTH=7 for cells of type $alu.
Using template $paramod\_90_pmux\WIDTH=4\S_WIDTH=3 for cells of type $pmux.
Using template $paramod\_90_pmux\WIDTH=8\S_WIDTH=3 for cells of type $pmux.
Using template $paramod\_80_ice40_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=1\B_WIDTH=8\Y_WIDTH=8 for cells of type $alu.
Using template $paramod\_80_ice40_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=1\B_WIDTH=30\Y_WIDTH=30 for cells of type $alu.
Using template $paramod\_80_ice40_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=7\B_WIDTH=10\Y_WIDTH=10 for cells of type $alu.
Using template $paramod\_80_ice40_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=1\B_WIDTH=5\Y_WIDTH=5 for cells of type $alu.
Using extmapper simplemap for cells of type $xor.
Using template $paramod$constmap:87f69c0bea22f84de4bcd0314b57cb19e61b5eb7$paramod$88abf4b792300efa328894e6936be740fdc22f6d\_90_shift_ops_shr_shl_sshl_sshr for cells of type $sshr.
Using template $paramod$constmap:1b6115d36d46c0296d0024e3e3623593810ba834$paramod$2c522b46cc21505f45a595eaa4706e490799228e\_90_shift_ops_shr_shl_sshl_sshr for cells of type $shl.
Using template $paramod\_80_ice40_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=32\B_WIDTH=33\Y_WIDTH=33 for cells of type $alu.
Using template $paramod\_80_ice40_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=1\B_WIDTH=4\Y_WIDTH=4 for cells of type $alu.
Using extmapper simplemap for cells of type $pos.
No more expansions possible.

4.32. Executing ICE40_OPT pass (performing simple optimizations).

4.32.1. Running ICE40 specific optimizations.

4.32.2. Executing OPT_EXPR pass (perform const folding).
Optimizing module SOCnexpo.

4.32.3. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\SOCnexpo'.
Removed a total of 241 cells.

4.32.4. Executing OPT_RMDFF pass (remove dff with constant values).

4.32.5. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \SOCnexpo..
Removed 294 unused cells and 486 unused wires.

4.32.6. Rerunning OPT passes. (Removed registers in this run.)

4.32.7. Running ICE40 specific optimizations.
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) SOCnexpo.$auto$alumacc.cc:485:replace_alu$1006.slice[0].carry: CO=$auto$alumacc.cc:485:replace_alu$1006.BB [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) SOCnexpo.$auto$alumacc.cc:485:replace_alu$1017.slice[0].carry: CO=$auto$alumacc.cc:485:replace_alu$1017.BB [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) SOCnexpo.$auto$alumacc.cc:485:replace_alu$1030.slice[0].carry: CO=\Espera [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) SOCnexpo.$auto$alumacc.cc:485:replace_alu$1033.slice[0].carry: CO=\LEDS8_4.timer [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) SOCnexpo.$auto$alumacc.cc:485:replace_alu$1036.slice[0].carry: CO=\RV32I.F_pc [2]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) SOCnexpo.$auto$alumacc.cc:485:replace_alu$1042.slice[0].carry: CO=\RV32I.cycle [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) SOCnexpo.$auto$alumacc.cc:485:replace_alu$1048.slice[0].carry: CO=\UART_TX.bclk.divcounter [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) SOCnexpo.$auto$alumacc.cc:485:replace_alu$1051.slice[32].carry: CO=$auto$alumacc.cc:485:replace_alu$1051.C [32]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) SOCnexpo.$auto$alumacc.cc:485:replace_alu$1057.slice[0].carry: CO=\UART_RX.div2counter [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) SOCnexpo.$auto$alumacc.cc:485:replace_alu$1060.slice[0].carry: CO=\UART_RX.cont [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) SOCnexpo.$auto$alumacc.cc:485:replace_alu$1063.slice[0].carry: CO=\UART_RX.bclk.divcounter [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) SOCnexpo.$auto$alumacc.cc:485:replace_alu$1066.slice[0].carry: CO=\UART_TX.bits [0]

4.32.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module SOCnexpo.

4.32.9. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\SOCnexpo'.
Removed a total of 0 cells.

4.32.10. Executing OPT_RMDFF pass (remove dff with constant values).

4.32.11. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \SOCnexpo..
Removed 2 unused cells and 1 unused wires.

4.32.12. Rerunning OPT passes. (Removed registers in this run.)

4.32.13. Running ICE40 specific optimizations.

4.32.14. Executing OPT_EXPR pass (perform const folding).
Optimizing module SOCnexpo.

4.32.15. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\SOCnexpo'.
Removed a total of 0 cells.

4.32.16. Executing OPT_RMDFF pass (remove dff with constant values).

4.32.17. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \SOCnexpo..

4.32.18. Finished OPT passes. (There is nothing left to do.)

4.33. Executing DFFSR2DFF pass (mapping DFFSR cells to simpler FFs).

4.34. Executing DFF2DFFE pass (transform $dff to $dffe where applicable).
Selected cell types for direct conversion:
$_DFF_PP1_ -> $__DFFE_PP1
$_DFF_PP0_ -> $__DFFE_PP0
$_DFF_PN1_ -> $__DFFE_PN1
$_DFF_PN0_ -> $__DFFE_PN0
$_DFF_NP1_ -> $__DFFE_NP1
$_DFF_NP0_ -> $__DFFE_NP0
$_DFF_NN1_ -> $__DFFE_NN1
$_DFF_NN0_ -> $__DFFE_NN0
$_DFF_N_ -> $_DFFE_NP_
$_DFF_P_ -> $_DFFE_PP_
Transforming FF to FF+Enable cells in module SOCnexpo:
converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$1711 to $_DFFE_PP_ for $0\tx_ready[0:0] -> \tx_ready.
converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$1712 to $_DFFE_PP_ for $0\leds_en[0:0] -> \leds_en.
converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$1713 to $_DFFE_PP_ for $0\leds1[7:0] [0] -> \leds1 [0].
converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$1714 to $_DFFE_PP_ for $0\leds1[7:0] [1] -> \leds1 [1].
converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$1715 to $_DFFE_PP_ for $0\leds1[7:0] [2] -> \leds1 [2].
converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$1716 to $_DFFE_PP_ for $0\leds1[7:0] [3] -> \leds1 [3].
converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$1717 to $_DFFE_PP_ for $0\leds1[7:0] [4] -> \leds1 [4].
converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$1718 to $_DFFE_PP_ for $0\leds1[7:0] [5] -> \leds1 [5].
converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$1719 to $_DFFE_PP_ for $0\leds1[7:0] [6] -> \leds1 [6].
converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$1720 to $_DFFE_PP_ for $0\leds1[7:0] [7] -> \leds1 [7].
converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$1721 to $_DFFE_PP_ for $0\leds2[7:0] [0] -> \leds2 [0].
converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$1722 to $_DFFE_PP_ for $0\leds2[7:0] [1] -> \leds2 [1].
converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$1723 to $_DFFE_PP_ for $0\leds2[7:0] [2] -> \leds2 [2].
converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$1724 to $_DFFE_PP_ for $0\leds2[7:0] [3] -> \leds2 [3].
converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$1725 to $_DFFE_PP_ for $0\leds2[7:0] [4] -> \leds2 [4].
converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$1726 to $_DFFE_PP_ for $0\leds2[7:0] [5] -> \leds2 [5].
converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$1727 to $_DFFE_PP_ for $0\leds2[7:0] [6] -> \leds2 [6].
converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$1728 to $_DFFE_PP_ for $0\leds2[7:0] [7] -> \leds2 [7].
converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$1729 to $_DFFE_PP_ for $0\leds3[7:0] [0] -> \leds3 [0].
converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$1730 to $_DFFE_PP_ for $0\leds3[7:0] [1] -> \leds3 [1].
converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$1731 to $_DFFE_PP_ for $0\leds3[7:0] [2] -> \leds3 [2].
converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$1732 to $_DFFE_PP_ for $0\leds3[7:0] [3] -> \leds3 [3].
converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$1733 to $_DFFE_PP_ for $0\leds3[7:0] [4] -> \leds3 [4].
converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$1734 to $_DFFE_PP_ for $0\leds3[7:0] [5] -> \leds3 [5].
converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$1735 to $_DFFE_PP_ for $0\leds3[7:0] [6] -> \leds3 [6].
converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$1736 to $_DFFE_PP_ for $0\leds3[7:0] [7] -> \leds3 [7].
converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$1737 to $_DFFE_PP_ for $0\leds4[7:0] [0] -> \leds4 [0].
converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$1738 to $_DFFE_PP_ for $0\leds4[7:0] [1] -> \leds4 [1].
converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$1739 to $_DFFE_PP_ for $0\leds4[7:0] [2] -> \leds4 [2].
converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$1740 to $_DFFE_PP_ for $0\leds4[7:0] [3] -> \leds4 [3].
converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$1741 to $_DFFE_PP_ for $0\leds4[7:0] [4] -> \leds4 [4].
converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$1742 to $_DFFE_PP_ for $0\leds4[7:0] [5] -> \leds4 [5].
converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$1743 to $_DFFE_PP_ for $0\leds4[7:0] [6] -> \leds4 [6].
converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$1744 to $_DFFE_PP_ for $0\leds4[7:0] [7] -> \leds4 [7].
converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$1745 to $_DFFE_PP_ for $0\rst[0:0] -> \rst.
converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$1790 to $_DFFE_PP_ for $techmap\RV32I.$0\F_pc[31:0] [0] -> \RV32I.F_pc [0].
converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$1791 to $_DFFE_PP_ for $techmap\RV32I.$0\F_pc[31:0] [1] -> \RV32I.F_pc [1].
converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2081 to $_DFFE_PP_ for $techmap\RV32I.$0\PWM_[31:0] [0] -> \RV32I.PWM_ [0].
converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2082 to $_DFFE_PP_ for $techmap\RV32I.$0\PWM_[31:0] [1] -> \RV32I.PWM_ [1].
converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2083 to $_DFFE_PP_ for $techmap\RV32I.$0\PWM_[31:0] [2] -> \RV32I.PWM_ [2].
converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2084 to $_DFFE_PP_ for $techmap\RV32I.$0\PWM_[31:0] [3] -> \RV32I.PWM_ [3].
converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2085 to $_DFFE_PP_ for $techmap\RV32I.$0\PWM_[31:0] [4] -> \RV32I.PWM_ [4].
converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2086 to $_DFFE_PP_ for $techmap\RV32I.$0\PWM_[31:0] [5] -> \RV32I.PWM_ [5].
converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2087 to $_DFFE_PP_ for $techmap\RV32I.$0\PWM_[31:0] [6] -> \RV32I.PWM_ [6].
converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2088 to $_DFFE_PP_ for $techmap\RV32I.$0\PWM_[31:0] [7] -> \RV32I.PWM_ [7].
converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2089 to $_DFFE_PP_ for $techmap\RV32I.$0\PWM_[31:0] [8] -> \RV32I.PWM_ [8].
converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2090 to $_DFFE_PP_ for $techmap\RV32I.$0\PWM_[31:0] [9] -> \RV32I.PWM_ [9].
converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2091 to $_DFFE_PP_ for $techmap\RV32I.$0\PWM_[31:0] [10] -> \RV32I.PWM_ [10].
converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2092 to $_DFFE_PP_ for $techmap\RV32I.$0\PWM_[31:0] [11] -> \RV32I.PWM_ [11].
converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2093 to $_DFFE_PP_ for $techmap\RV32I.$0\PWM_[31:0] [12] -> \RV32I.PWM_ [12].
converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2094 to $_DFFE_PP_ for $techmap\RV32I.$0\PWM_[31:0] [13] -> \RV32I.PWM_ [13].
converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2095 to $_DFFE_PP_ for $techmap\RV32I.$0\PWM_[31:0] [14] -> \RV32I.PWM_ [14].
converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2096 to $_DFFE_PP_ for $techmap\RV32I.$0\PWM_[31:0] [15] -> \RV32I.PWM_ [15].
converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2097 to $_DFFE_PP_ for $techmap\RV32I.$0\PWM_[31:0] [16] -> \RV32I.PWM_ [16].
converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2098 to $_DFFE_PP_ for $techmap\RV32I.$0\PWM_[31:0] [17] -> \RV32I.PWM_ [17].
converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2099 to $_DFFE_PP_ for $techmap\RV32I.$0\PWM_[31:0] [18] -> \RV32I.PWM_ [18].
converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2100 to $_DFFE_PP_ for $techmap\RV32I.$0\PWM_[31:0] [19] -> \RV32I.PWM_ [19].
converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2101 to $_DFFE_PP_ for $techmap\RV32I.$0\PWM_[31:0] [20] -> \RV32I.PWM_ [20].
converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2102 to $_DFFE_PP_ for $techmap\RV32I.$0\PWM_[31:0] [21] -> \RV32I.PWM_ [21].
converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2103 to $_DFFE_PP_ for $techmap\RV32I.$0\PWM_[31:0] [22] -> \RV32I.PWM_ [22].
converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2104 to $_DFFE_PP_ for $techmap\RV32I.$0\PWM_[31:0] [23] -> \RV32I.PWM_ [23].
converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2105 to $_DFFE_PP_ for $techmap\RV32I.$0\PWM_[31:0] [24] -> \RV32I.PWM_ [24].
converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2106 to $_DFFE_PP_ for $techmap\RV32I.$0\PWM_[31:0] [25] -> \RV32I.PWM_ [25].
converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2107 to $_DFFE_PP_ for $techmap\RV32I.$0\PWM_[31:0] [26] -> \RV32I.PWM_ [26].
converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2108 to $_DFFE_PP_ for $techmap\RV32I.$0\PWM_[31:0] [27] -> \RV32I.PWM_ [27].
converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2109 to $_DFFE_PP_ for $techmap\RV32I.$0\PWM_[31:0] [28] -> \RV32I.PWM_ [28].
converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2110 to $_DFFE_PP_ for $techmap\RV32I.$0\PWM_[31:0] [29] -> \RV32I.PWM_ [29].
converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2111 to $_DFFE_PP_ for $techmap\RV32I.$0\PWM_[31:0] [30] -> \RV32I.PWM_ [30].
converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2112 to $_DFFE_PP_ for $techmap\RV32I.$0\PWM_[31:0] [31] -> \RV32I.PWM_ [31].
converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3844 to $_DFFE_PP_ for $techmap\UART_TX.$0\state[0:0] -> \UART_TX.state.
converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3845 to $_DFFE_PP_ for $techmap\UART_TX.$0\q[8:0] [0] -> \UART_TX.q [0].
converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3846 to $_DFFE_PP_ for $techmap\UART_TX.$0\q[8:0] [1] -> \UART_TX.q [1].
converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3847 to $_DFFE_PP_ for $techmap\UART_TX.$0\q[8:0] [2] -> \UART_TX.q [2].
converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3848 to $_DFFE_PP_ for $techmap\UART_TX.$0\q[8:0] [3] -> \UART_TX.q [3].
converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3849 to $_DFFE_PP_ for $techmap\UART_TX.$0\q[8:0] [4] -> \UART_TX.q [4].
converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3850 to $_DFFE_PP_ for $techmap\UART_TX.$0\q[8:0] [5] -> \UART_TX.q [5].
converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3851 to $_DFFE_PP_ for $techmap\UART_TX.$0\q[8:0] [6] -> \UART_TX.q [6].
converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3852 to $_DFFE_PP_ for $techmap\UART_TX.$0\q[8:0] [7] -> \UART_TX.q [7].
converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3853 to $_DFFE_PP_ for $techmap\UART_TX.$0\q[8:0] [8] -> \UART_TX.q [8].
converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3855 to $_DFFE_PP_ for $techmap\UART_TX.$0\bits[3:0] [0] -> \UART_TX.bits [0].
converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3856 to $_DFFE_PP_ for $techmap\UART_TX.$0\bits[3:0] [1] -> \UART_TX.bits [1].
converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3857 to $_DFFE_PP_ for $techmap\UART_TX.$0\bits[3:0] [2] -> \UART_TX.bits [2].
converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3858 to $_DFFE_PP_ for $techmap\UART_TX.$0\bits[3:0] [3] -> \UART_TX.bits [3].
converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3908 to $_DFFE_PP_ for $techmap\UART_RX.$0\state[0:0] -> \UART_RX.state.
converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3909 to $_DFFE_PP_ for $techmap\UART_RX.$0\div2counter[6:0] [0] -> \UART_RX.div2counter [0].
converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3910 to $_DFFE_PP_ for $techmap\UART_RX.$0\div2counter[6:0] [1] -> \UART_RX.div2counter [1].
converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3911 to $_DFFE_PP_ for $techmap\UART_RX.$0\div2counter[6:0] [2] -> \UART_RX.div2counter [2].
converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3912 to $_DFFE_PP_ for $techmap\UART_RX.$0\div2counter[6:0] [3] -> \UART_RX.div2counter [3].
converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3913 to $_DFFE_PP_ for $techmap\UART_RX.$0\div2counter[6:0] [4] -> \UART_RX.div2counter [4].
converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3914 to $_DFFE_PP_ for $techmap\UART_RX.$0\div2counter[6:0] [5] -> \UART_RX.div2counter [5].
converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3915 to $_DFFE_PP_ for $techmap\UART_RX.$0\div2counter[6:0] [6] -> \UART_RX.div2counter [6].
converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3916 to $_DFFE_PP_ for $techmap\UART_RX.$0\sr[8:0] [0] -> \UART_RX.sr [0].
converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3917 to $_DFFE_PP_ for $techmap\UART_RX.$0\sr[8:0] [1] -> \UART_RX.sr [1].
converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3918 to $_DFFE_PP_ for $techmap\UART_RX.$0\sr[8:0] [2] -> \UART_RX.sr [2].
converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3919 to $_DFFE_PP_ for $techmap\UART_RX.$0\sr[8:0] [3] -> \UART_RX.sr [3].
converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3920 to $_DFFE_PP_ for $techmap\UART_RX.$0\sr[8:0] [4] -> \UART_RX.sr [4].
converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3921 to $_DFFE_PP_ for $techmap\UART_RX.$0\sr[8:0] [5] -> \UART_RX.sr [5].
converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3922 to $_DFFE_PP_ for $techmap\UART_RX.$0\sr[8:0] [6] -> \UART_RX.sr [6].
converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3923 to $_DFFE_PP_ for $techmap\UART_RX.$0\sr[8:0] [7] -> \UART_RX.sr [7].
converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3924 to $_DFFE_PP_ for $techmap\UART_RX.$0\sr[8:0] [8] -> \UART_RX.sr [8].
converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3925 to $_DFFE_PP_ for $techmap\UART_RX.$0\cont[4:0] [0] -> \UART_RX.cont [0].
converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3926 to $_DFFE_PP_ for $techmap\UART_RX.$0\cont[4:0] [1] -> \UART_RX.cont [1].
converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3927 to $_DFFE_PP_ for $techmap\UART_RX.$0\cont[4:0] [2] -> \UART_RX.cont [2].
converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3928 to $_DFFE_PP_ for $techmap\UART_RX.$0\cont[4:0] [3] -> \UART_RX.cont [3].
converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3929 to $_DFFE_PP_ for $techmap\UART_RX.$0\cont[4:0] [4] -> \UART_RX.cont [4].
converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3930 to $_DFFE_PP_ for $techmap\UART_RX.$0\data[7:0] [0] -> \UART_RX.data [0].
converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3931 to $_DFFE_PP_ for $techmap\UART_RX.$0\data[7:0] [1] -> \UART_RX.data [1].
converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3932 to $_DFFE_PP_ for $techmap\UART_RX.$0\data[7:0] [2] -> \UART_RX.data [2].
converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3933 to $_DFFE_PP_ for $techmap\UART_RX.$0\data[7:0] [3] -> \UART_RX.data [3].
converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3934 to $_DFFE_PP_ for $techmap\UART_RX.$0\data[7:0] [4] -> \UART_RX.data [4].
converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3935 to $_DFFE_PP_ for $techmap\UART_RX.$0\data[7:0] [5] -> \UART_RX.data [5].
converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3936 to $_DFFE_PP_ for $techmap\UART_RX.$0\data[7:0] [6] -> \UART_RX.data [6].
converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3937 to $_DFFE_PP_ for $techmap\UART_RX.$0\data[7:0] [7] -> \UART_RX.data [7].

4.35. Executing TECHMAP pass (map to technology primitives).

4.35.1. Executing Verilog-2005 frontend: /home/jfdava/.apio/packages/toolchain-yosys/bin/../share/yosys/ice40/cells_map.v
Parsing Verilog input from `/home/jfdava/.apio/packages/toolchain-yosys/bin/../share/yosys/ice40/cells_map.v' to AST representation.
Generating RTLIL representation for module `\$_DFF_N_'.
Generating RTLIL representation for module `\$_DFF_P_'.
Generating RTLIL representation for module `\$_DFFE_NN_'.
Generating RTLIL representation for module `\$_DFFE_PN_'.
Generating RTLIL representation for module `\$_DFFE_NP_'.
Generating RTLIL representation for module `\$_DFFE_PP_'.
Generating RTLIL representation for module `\$_DFF_NN0_'.
Generating RTLIL representation for module `\$_DFF_NN1_'.
Generating RTLIL representation for module `\$_DFF_PN0_'.
Generating RTLIL representation for module `\$_DFF_PN1_'.
Generating RTLIL representation for module `\$_DFF_NP0_'.
Generating RTLIL representation for module `\$_DFF_NP1_'.
Generating RTLIL representation for module `\$_DFF_PP0_'.
Generating RTLIL representation for module `\$_DFF_PP1_'.
Generating RTLIL representation for module `\$__DFFE_NN0'.
Generating RTLIL representation for module `\$__DFFE_NN1'.
Generating RTLIL representation for module `\$__DFFE_PN0'.
Generating RTLIL representation for module `\$__DFFE_PN1'.
Generating RTLIL representation for module `\$__DFFE_NP0'.
Generating RTLIL representation for module `\$__DFFE_NP1'.
Generating RTLIL representation for module `\$__DFFE_PP0'.
Generating RTLIL representation for module `\$__DFFE_PP1'.
Successfully finished Verilog frontend.

4.35.2. Continuing TECHMAP pass.
Using template \$_DFF_P_ for cells of type $_DFF_P_.
Using template \$_DFFE_PP_ for cells of type $_DFFE_PP_.
No more expansions possible.

4.36. Executing OPT_EXPR pass (perform const folding).
Optimizing module SOCnexpo.

4.37. Executing SIMPLEMAP pass (map simple cells to gate primitives).
Mapping SOCnexpo.$auto$alumacc.cc:485:replace_alu$1030.slice[0].carry ($lut).
Mapping SOCnexpo.$auto$alumacc.cc:485:replace_alu$1033.slice[0].carry ($lut).
Mapping SOCnexpo.$auto$alumacc.cc:485:replace_alu$1036.slice[0].carry ($lut).
Mapping SOCnexpo.$auto$alumacc.cc:485:replace_alu$1042.slice[0].carry ($lut).
Mapping SOCnexpo.$auto$alumacc.cc:485:replace_alu$1048.slice[0].carry ($lut).
Mapping SOCnexpo.$auto$alumacc.cc:485:replace_alu$1051.slice[32].carry ($lut).
Mapping SOCnexpo.$auto$alumacc.cc:485:replace_alu$1057.slice[0].carry ($lut).
Mapping SOCnexpo.$auto$alumacc.cc:485:replace_alu$1060.slice[0].carry ($lut).
Mapping SOCnexpo.$auto$alumacc.cc:485:replace_alu$1063.slice[0].carry ($lut).
Mapping SOCnexpo.$auto$alumacc.cc:485:replace_alu$1066.slice[0].carry ($lut).

4.38. Executing ICE40_FFINIT pass (implement FF init values).
Handling FF init values in SOCnexpo.
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5470 (SB_DFF): \UART_RX.bclk.divcounter [6] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$1712 (SB_DFFE): \leds_en = 1
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$1780 (SB_DFF): \RV32I.FD_pc [22] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$1757 (SB_DFF): \RV32I.FD_nop = 1
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$1751 (SB_DFF): \Espera [5] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$1761 (SB_DFF): \RV32I.FD_pc [3] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$1771 (SB_DFF): \RV32I.FD_pc [13] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$1762 (SB_DFF): \RV32I.FD_pc [4] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$1760 (SB_DFF): \RV32I.FD_pc [2] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$1759 (SB_DFF): \RV32I.FD_pc [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$1752 (SB_DFF): \Espera [6] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$1749 (SB_DFF): \Espera [3] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$1753 (SB_DFF): \Espera [7] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$1748 (SB_DFF): \Espera [2] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$1747 (SB_DFF): \Espera [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$1798 (SB_DFF): \RV32I.F_pc [8] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$1793 (SB_DFF): \RV32I.F_pc [3] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$1772 (SB_DFF): \RV32I.FD_pc [14] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$1779 (SB_DFF): \RV32I.FD_pc [21] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$1766 (SB_DFF): \RV32I.FD_pc [8] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$1818 (SB_DFF): \RV32I.F_pc [28] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3852 (SB_DFFE): \UART_TX.q [7] = 1
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$1783 (SB_DFF): \RV32I.FD_pc [25] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$1782 (SB_DFF): \RV32I.FD_pc [24] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$1781 (SB_DFF): \RV32I.FD_pc [23] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$1778 (SB_DFF): \RV32I.FD_pc [20] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$1777 (SB_DFF): \RV32I.FD_pc [19] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$1776 (SB_DFF): \RV32I.FD_pc [18] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$1808 (SB_DFF): \RV32I.F_pc [18] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$1799 (SB_DFF): \RV32I.F_pc [9] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$1797 (SB_DFF): \RV32I.F_pc [7] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$1796 (SB_DFF): \RV32I.F_pc [6] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$1758 (SB_DFF): \RV32I.FD_pc [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$1794 (SB_DFF): \RV32I.F_pc [4] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$1765 (SB_DFF): \RV32I.FD_pc [7] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$1791 (SB_DFFE): \RV32I.F_pc [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$1795 (SB_DFF): \RV32I.F_pc [5] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$1789 (SB_DFF): \RV32I.FD_pc [31] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$1788 (SB_DFF): \RV32I.FD_pc [30] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$1764 (SB_DFF): \RV32I.FD_pc [6] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$1787 (SB_DFF): \RV32I.FD_pc [29] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$1811 (SB_DFF): \RV32I.F_pc [21] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$1809 (SB_DFF): \RV32I.F_pc [19] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$1773 (SB_DFF): \RV32I.FD_pc [15] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$1786 (SB_DFF): \RV32I.FD_pc [28] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$1803 (SB_DFF): \RV32I.F_pc [13] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$1810 (SB_DFF): \RV32I.F_pc [20] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$1802 (SB_DFF): \RV32I.F_pc [12] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$1814 (SB_DFF): \RV32I.F_pc [24] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$1821 (SB_DFF): \RV32I.F_pc [31] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$1820 (SB_DFF): \RV32I.F_pc [30] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$1774 (SB_DFF): \RV32I.FD_pc [16] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3930 (SB_DFFE): \UART_RX.data [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$1815 (SB_DFF): \RV32I.F_pc [25] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$1790 (SB_DFFE): \RV32I.F_pc [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$1813 (SB_DFF): \RV32I.F_pc [23] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$1763 (SB_DFF): \RV32I.FD_pc [5] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$1801 (SB_DFF): \RV32I.F_pc [11] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5417 (SB_DFF): \UART_TX.bclk.divcounter [3] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$1769 (SB_DFF): \RV32I.FD_pc [11] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$1745 (SB_DFFE): \rst = 1
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$1804 (SB_DFF): \RV32I.F_pc [14] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$1792 (SB_DFF): \RV32I.F_pc [2] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$1767 (SB_DFF): \RV32I.FD_pc [9] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$1750 (SB_DFF): \Espera [4] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3705 (SB_DFF): \LEDS8_4.timer [2] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$1812 (SB_DFF): \RV32I.F_pc [22] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$1775 (SB_DFF): \RV32I.FD_pc [17] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3703 (SB_DFF): \LEDS8_4.timer [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$1746 (SB_DFF): \Espera [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$1816 (SB_DFF): \RV32I.F_pc [26] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$1768 (SB_DFF): \RV32I.FD_pc [10] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$1805 (SB_DFF): \RV32I.F_pc [15] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3859 (SB_DFF): \UART_TX.done = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$1817 (SB_DFF): \RV32I.F_pc [27] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$1807 (SB_DFF): \RV32I.F_pc [17] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$1806 (SB_DFF): \RV32I.F_pc [16] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$1770 (SB_DFF): \RV32I.FD_pc [12] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$1785 (SB_DFF): \RV32I.FD_pc [27] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5464 (SB_DFF): \UART_RX.bclk.divcounter [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3704 (SB_DFF): \LEDS8_4.timer [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3706 (SB_DFF): \LEDS8_4.timer [3] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3707 (SB_DFF): \LEDS8_4.timer [4] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3708 (SB_DFF): \LEDS8_4.timer [5] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3709 (SB_DFF): \LEDS8_4.timer [6] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3710 (SB_DFF): \LEDS8_4.timer [7] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3711 (SB_DFF): \LEDS8_4.timer [8] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3712 (SB_DFF): \LEDS8_4.timer [9] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3713 (SB_DFF): \LEDS8_4.timer [10] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$1784 (SB_DFF): \RV32I.FD_pc [26] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3714 (SB_DFF): \LEDS8_4.timer [11] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$1800 (SB_DFF): \RV32I.F_pc [10] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3844 (SB_DFFE): \UART_TX.state = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3843 (SB_DFF): \UART_TX.q_re = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3846 (SB_DFFE): \UART_TX.q [1] = 1
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3847 (SB_DFFE): \UART_TX.q [2] = 1
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3848 (SB_DFFE): \UART_TX.q [3] = 1
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3849 (SB_DFFE): \UART_TX.q [4] = 1
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3850 (SB_DFFE): \UART_TX.q [5] = 1
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3851 (SB_DFFE): \UART_TX.q [6] = 1
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3845 (SB_DFFE): \UART_TX.q [0] = 1
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3854 (SB_DFF): \UART_TX.TX = 1
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3853 (SB_DFFE): \UART_TX.q [8] = 1
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3856 (SB_DFFE): \UART_TX.bits [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3857 (SB_DFFE): \UART_TX.bits [2] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3855 (SB_DFFE): \UART_TX.bits [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$1819 (SB_DFF): \RV32I.F_pc [29] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3907 (SB_DFF): \UART_RX.q_t0 = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3908 (SB_DFFE): \UART_RX.state = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3858 (SB_DFFE): \UART_TX.bits [3] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3910 (SB_DFFE): \UART_RX.div2counter [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3911 (SB_DFFE): \UART_RX.div2counter [2] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3912 (SB_DFFE): \UART_RX.div2counter [3] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3913 (SB_DFFE): \UART_RX.div2counter [4] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3914 (SB_DFFE): \UART_RX.div2counter [5] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3909 (SB_DFFE): \UART_RX.div2counter [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3915 (SB_DFFE): \UART_RX.div2counter [6] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3917 (SB_DFFE): \UART_RX.sr [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3918 (SB_DFFE): \UART_RX.sr [2] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3919 (SB_DFFE): \UART_RX.sr [3] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3920 (SB_DFFE): \UART_RX.sr [4] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3921 (SB_DFFE): \UART_RX.sr [5] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3922 (SB_DFFE): \UART_RX.sr [6] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3923 (SB_DFFE): \UART_RX.sr [7] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3916 (SB_DFFE): \UART_RX.sr [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3924 (SB_DFFE): \UART_RX.sr [8] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3926 (SB_DFFE): \UART_RX.cont [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3927 (SB_DFFE): \UART_RX.cont [2] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3928 (SB_DFFE): \UART_RX.cont [3] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3925 (SB_DFFE): \UART_RX.cont [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3929 (SB_DFFE): \UART_RX.cont [4] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3931 (SB_DFFE): \UART_RX.data [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3932 (SB_DFFE): \UART_RX.data [2] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3933 (SB_DFFE): \UART_RX.data [3] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3934 (SB_DFFE): \UART_RX.data [4] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3935 (SB_DFFE): \UART_RX.data [5] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3936 (SB_DFFE): \UART_RX.data [6] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3937 (SB_DFFE): \UART_RX.data [7] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5414 (SB_DFF): \UART_TX.bclk.divcounter [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5415 (SB_DFF): \UART_TX.bclk.divcounter [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5416 (SB_DFF): \UART_TX.bclk.divcounter [2] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5418 (SB_DFF): \UART_TX.bclk.divcounter [4] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5419 (SB_DFF): \UART_TX.bclk.divcounter [5] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5420 (SB_DFF): \UART_TX.bclk.divcounter [6] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5465 (SB_DFF): \UART_RX.bclk.divcounter [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5466 (SB_DFF): \UART_RX.bclk.divcounter [2] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5467 (SB_DFF): \UART_RX.bclk.divcounter [3] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5468 (SB_DFF): \UART_RX.bclk.divcounter [4] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5469 (SB_DFF): \UART_RX.bclk.divcounter [5] = 0

4.39. Executing ICE40_FFSSR pass (merge synchronous set/reset into FF cells).
Merging set/reset $_MUX_ cells into SB_FFs in SOCnexpo.
Merging $auto$simplemap.cc:277:simplemap_mux$5477 (A=$auto$wreduce.cc:460:run$998 [6], B=1'0, S=\UART_RX.bclk.reset) into $auto$simplemap.cc:420:simplemap_dff$5470 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$2786 (A=$techmap\RV32I.$add$Procesador_V2.0b/RV32nexpo.v:492$349_Y [13], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$2190 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$1613 (A=\RV32I.EM_rs2Data [1], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$1714 (SB_DFFE).
Merging $auto$simplemap.cc:277:simplemap_mux$1614 (A=\RV32I.EM_rs2Data [2], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$1715 (SB_DFFE).
Merging $auto$simplemap.cc:277:simplemap_mux$1615 (A=\RV32I.EM_rs2Data [3], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$1716 (SB_DFFE).
Merging $auto$simplemap.cc:277:simplemap_mux$2327 (A=\RV32I.F_pc [22], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$1780 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$1593 (A=\DatatoWrite [29], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$1742 (SB_DFFE).
Merging $auto$simplemap.cc:277:simplemap_mux$1666 (A=\DatatoWrite [14], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$1727 (SB_DFFE).
Merging $auto$simplemap.cc:277:simplemap_mux$1612 (A=\RV32I.EM_rs2Data [0], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$1713 (SB_DFFE).
Merging $auto$simplemap.cc:277:simplemap_mux$2872 (A=$techmap\RV32I.$add$Procesador_V2.0b/RV32nexpo.v:493$351_Y [35], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$2148 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$2857 (A=$techmap\RV32I.$add$Procesador_V2.0b/RV32nexpo.v:493$351_Y [20], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$2133 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$2785 (A=$techmap\RV32I.$add$Procesador_V2.0b/RV32nexpo.v:492$349_Y [12], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$2189 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$2784 (A=$techmap\RV32I.$add$Procesador_V2.0b/RV32nexpo.v:492$349_Y [11], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$2188 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$1665 (A=\DatatoWrite [13], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$1726 (SB_DFFE).
Merging $auto$simplemap.cc:277:simplemap_mux$1619 (A=\RV32I.EM_rs2Data [7], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$1720 (SB_DFFE).
Merging $auto$simplemap.cc:277:simplemap_mux$1660 (A=\DatatoWrite [8], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$1721 (SB_DFFE).
Merging $auto$simplemap.cc:277:simplemap_mux$2308 (A=\RV32I.F_pc [3], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$1761 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$1592 (A=\DatatoWrite [28], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$1741 (SB_DFFE).
Merging $auto$simplemap.cc:277:simplemap_mux$1591 (A=\DatatoWrite [27], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$1740 (SB_DFFE).
Merging $auto$simplemap.cc:277:simplemap_mux$1643 (A=\DatatoWrite [23], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$1736 (SB_DFFE).
Merging $auto$simplemap.cc:277:simplemap_mux$1636 (A=\DatatoWrite [16], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$1729 (SB_DFFE).
Merging $auto$simplemap.cc:277:simplemap_mux$1589 (A=\DatatoWrite [25], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$1738 (SB_DFFE).
Merging $auto$simplemap.cc:277:simplemap_mux$1640 (A=\DatatoWrite [20], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$1733 (SB_DFFE).
Merging $auto$simplemap.cc:277:simplemap_mux$1639 (A=\DatatoWrite [19], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$1732 (SB_DFFE).
Merging $auto$simplemap.cc:277:simplemap_mux$2318 (A=\RV32I.F_pc [13], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$1771 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$2309 (A=\RV32I.F_pc [4], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$1762 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$1588 (A=\DatatoWrite [24], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$1737 (SB_DFFE).
Merging $auto$simplemap.cc:277:simplemap_mux$3193 (A=\RV32I.DE_rs1Data [28], B=1'0, S=\RV32I.DE_funct3 [2]) into $auto$simplemap.cc:420:simplemap_dff$1968 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$2307 (A=\RV32I.F_pc [2], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$1760 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$2306 (A=\RV32I.F_pc [1], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$1759 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$3188 (A=\RV32I.DE_rs1Data [23], B=1'0, S=\RV32I.DE_funct3 [2]) into $auto$simplemap.cc:420:simplemap_dff$1963 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$1618 (A=\RV32I.EM_rs2Data [6], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$1719 (SB_DFFE).
Merging $auto$simplemap.cc:277:simplemap_mux$1637 (A=\DatatoWrite [17], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$1730 (SB_DFFE).
Merging $auto$simplemap.cc:277:simplemap_mux$1616 (A=\RV32I.EM_rs2Data [4], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$1717 (SB_DFFE).
Merging $auto$simplemap.cc:277:simplemap_mux$1638 (A=\DatatoWrite [18], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$1731 (SB_DFFE).
Merging $auto$simplemap.cc:277:simplemap_mux$1595 (A=\DatatoWrite [31], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$1744 (SB_DFFE).
Merging $auto$simplemap.cc:277:simplemap_mux$2249 (A=$techmap\RV32I.$procmux$841_Y [8], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$1798 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$2244 (A=$techmap\RV32I.$procmux$841_Y [3], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$1793 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$2319 (A=\RV32I.F_pc [14], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$1772 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$2326 (A=\RV32I.F_pc [21], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$1779 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$2783 (A=$techmap\RV32I.$add$Procesador_V2.0b/RV32nexpo.v:492$349_Y [10], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$2187 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$1594 (A=\DatatoWrite [30], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$1743 (SB_DFFE).
Merging $auto$simplemap.cc:277:simplemap_mux$2313 (A=\RV32I.F_pc [8], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$1766 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$2269 (A=$techmap\RV32I.$procmux$841_Y [28], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$1818 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$2330 (A=\RV32I.F_pc [25], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$1783 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$2329 (A=\RV32I.F_pc [24], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$1782 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$2328 (A=\RV32I.F_pc [23], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$1781 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$3196 (A=\RV32I.DE_rs1Data [31], B=1'0, S=\RV32I.DE_funct3 [2]) into $auto$simplemap.cc:420:simplemap_dff$1971 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$1617 (A=\RV32I.EM_rs2Data [5], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$1718 (SB_DFFE).
Merging $auto$simplemap.cc:277:simplemap_mux$2325 (A=\RV32I.F_pc [20], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$1778 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$2324 (A=\RV32I.F_pc [19], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$1777 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$2323 (A=\RV32I.F_pc [18], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$1776 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$2846 (A=$techmap\RV32I.$add$Procesador_V2.0b/RV32nexpo.v:493$351_Y [9], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$2122 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$2259 (A=$techmap\RV32I.$procmux$841_Y [18], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$1808 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$2250 (A=$techmap\RV32I.$procmux$841_Y [9], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$1799 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$2248 (A=$techmap\RV32I.$procmux$841_Y [7], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$1797 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$2247 (A=$techmap\RV32I.$procmux$841_Y [6], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$1796 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$2305 (A=\RV32I.F_pc [0], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$1758 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$2245 (A=$techmap\RV32I.$procmux$841_Y [4], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$1794 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$3189 (A=\RV32I.DE_rs1Data [24], B=1'0, S=\RV32I.DE_funct3 [2]) into $auto$simplemap.cc:420:simplemap_dff$1964 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$2312 (A=\RV32I.F_pc [7], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$1765 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$2242 (A=\RV32I.E_JumpAddr [1], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$1791 (SB_DFFE).
Merging $auto$simplemap.cc:277:simplemap_mux$2246 (A=$techmap\RV32I.$procmux$841_Y [5], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$1795 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$2336 (A=\RV32I.F_pc [31], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$1789 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$2335 (A=\RV32I.F_pc [30], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$1788 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$2311 (A=\RV32I.F_pc [6], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$1764 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$2334 (A=\RV32I.F_pc [29], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$1787 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$3649 (A=\instr [17], B=1'0, S=\RV32I.FD_nop) into $auto$simplemap.cc:420:simplemap_dff$1847 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$2262 (A=$techmap\RV32I.$procmux$841_Y [21], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$1811 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$2260 (A=$techmap\RV32I.$procmux$841_Y [19], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$1809 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$2320 (A=\RV32I.F_pc [15], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$1773 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$2859 (A=$techmap\RV32I.$add$Procesador_V2.0b/RV32nexpo.v:493$351_Y [22], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$2135 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$2781 (A=$techmap\RV32I.$add$Procesador_V2.0b/RV32nexpo.v:492$349_Y [8], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$2185 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$2780 (A=$techmap\RV32I.$add$Procesador_V2.0b/RV32nexpo.v:492$349_Y [7], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$2184 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$2333 (A=\RV32I.F_pc [28], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$1786 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$2254 (A=$techmap\RV32I.$procmux$841_Y [13], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$1803 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$2261 (A=$techmap\RV32I.$procmux$841_Y [20], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$1810 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$2253 (A=$techmap\RV32I.$procmux$841_Y [12], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$1802 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$2265 (A=$techmap\RV32I.$procmux$841_Y [24], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$1814 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$2272 (A=$techmap\RV32I.$procmux$841_Y [31], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$1821 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$2271 (A=$techmap\RV32I.$procmux$841_Y [30], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$1820 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$2871 (A=$techmap\RV32I.$add$Procesador_V2.0b/RV32nexpo.v:493$351_Y [34], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$2147 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$2778 (A=$techmap\RV32I.$add$Procesador_V2.0b/RV32nexpo.v:492$349_Y [5], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$2182 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$2321 (A=\RV32I.F_pc [16], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$1774 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$2266 (A=$techmap\RV32I.$procmux$841_Y [25], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$1815 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$2241 (A=\RV32I.E_JumpAddr [0], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$1790 (SB_DFFE).
Merging $auto$simplemap.cc:277:simplemap_mux$2811 (A=$techmap\RV32I.$add$Procesador_V2.0b/RV32nexpo.v:492$349_Y [38], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$2215 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$3644 (A=\instr [12], B=1'0, S=\RV32I.FD_nop) into $auto$simplemap.cc:420:simplemap_dff$1833 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$2264 (A=$techmap\RV32I.$procmux$841_Y [23], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$1813 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$2349 (A=1'0, B=$techmap\RV32I.$procmux$829_Y [11], S=$auto$simplemap.cc:256:simplemap_eqne$3548) into $auto$simplemap.cc:420:simplemap_dff$1861 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$3328 (A=1'0, B=\RV32I.FD_instr [12], S=\RV32I.D_ALUFun) into $auto$simplemap.cc:420:simplemap_dff$1836 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$1667 (A=\DatatoWrite [15], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$1728 (SB_DFFE).
Merging $auto$simplemap.cc:277:simplemap_mux$2310 (A=\RV32I.F_pc [5], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$1763 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$2773 (A=$auto$simplemap.cc:309:simplemap_lut$9747, B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$2177 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$2861 (A=$techmap\RV32I.$add$Procesador_V2.0b/RV32nexpo.v:493$351_Y [24], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$2137 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$3639 (A=\instr [7], B=1'0, S=\RV32I.FD_nop) into $auto$simplemap.cc:420:simplemap_dff$1840 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$2776 (A=$techmap\RV32I.$add$Procesador_V2.0b/RV32nexpo.v:492$349_Y [3], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$2180 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$2252 (A=$techmap\RV32I.$procmux$841_Y [11], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$1801 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$3650 (A=\instr [18], B=1'0, S=\RV32I.FD_nop) into $auto$simplemap.cc:420:simplemap_dff$1848 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$2810 (A=$techmap\RV32I.$add$Procesador_V2.0b/RV32nexpo.v:492$349_Y [37], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$2214 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$2346 (A=1'0, B=$techmap\RV32I.$procmux$829_Y [8], S=$auto$simplemap.cc:256:simplemap_eqne$3548) into $auto$simplemap.cc:420:simplemap_dff$1858 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$2812 (A=$techmap\RV32I.$add$Procesador_V2.0b/RV32nexpo.v:492$349_Y [39], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$2216 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$2345 (A=1'0, B=$techmap\RV32I.$procmux$829_Y [7], S=$auto$simplemap.cc:256:simplemap_eqne$3548) into $auto$simplemap.cc:420:simplemap_dff$1857 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$2342 (A=1'0, B=$techmap\RV32I.$procmux$829_Y [4], S=$auto$simplemap.cc:256:simplemap_eqne$3548) into $auto$simplemap.cc:420:simplemap_dff$1854 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$2341 (A=1'0, B=$techmap\RV32I.$procmux$829_Y [3], S=$auto$simplemap.cc:256:simplemap_eqne$3548) into $auto$simplemap.cc:420:simplemap_dff$1853 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$5424 (A=$auto$wreduce.cc:460:run$999 [3], B=1'0, S=\UART_TX.bclk.reset) into $auto$simplemap.cc:420:simplemap_dff$5417 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$2340 (A=1'0, B=$techmap\RV32I.$procmux$829_Y [2], S=$auto$simplemap.cc:256:simplemap_eqne$3548) into $auto$simplemap.cc:420:simplemap_dff$1852 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$3192 (A=\RV32I.DE_rs1Data [27], B=1'0, S=\RV32I.DE_funct3 [2]) into $auto$simplemap.cc:420:simplemap_dff$1967 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$2862 (A=$techmap\RV32I.$add$Procesador_V2.0b/RV32nexpo.v:493$351_Y [25], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$2138 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$2775 (A=$techmap\RV32I.$add$Procesador_V2.0b/RV32nexpo.v:492$349_Y [2], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$2179 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$2774 (A=$techmap\RV32I.$add$Procesador_V2.0b/RV32nexpo.v:492$349_Y [1], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$2178 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$2339 (A=1'0, B=$techmap\RV32I.$procmux$829_Y [1], S=$auto$simplemap.cc:256:simplemap_eqne$3548) into $auto$simplemap.cc:420:simplemap_dff$1851 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$2782 (A=$techmap\RV32I.$add$Procesador_V2.0b/RV32nexpo.v:492$349_Y [9], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$2186 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$2338 (A=1'0, B=$techmap\RV32I.$procmux$829_Y [0], S=$auto$simplemap.cc:256:simplemap_eqne$3548) into $auto$simplemap.cc:420:simplemap_dff$1850 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$2863 (A=$techmap\RV32I.$add$Procesador_V2.0b/RV32nexpo.v:493$351_Y [26], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$2139 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$2900 (A=$techmap\RV32I.$add$Procesador_V2.0b/RV32nexpo.v:493$351_Y [63], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$2176 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$2899 (A=$techmap\RV32I.$add$Procesador_V2.0b/RV32nexpo.v:493$351_Y [62], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$2175 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$3330 (A=1'0, B=\RV32I.FD_instr [14], S=\RV32I.D_ALUFun) into $auto$simplemap.cc:420:simplemap_dff$1838 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$2316 (A=\RV32I.F_pc [11], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$1769 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$2827 (A=$techmap\RV32I.$add$Procesador_V2.0b/RV32nexpo.v:492$349_Y [54], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$2231 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$2864 (A=$techmap\RV32I.$add$Procesador_V2.0b/RV32nexpo.v:493$351_Y [27], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$2140 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$2898 (A=$techmap\RV32I.$add$Procesador_V2.0b/RV32nexpo.v:493$351_Y [61], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$2174 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$2897 (A=$techmap\RV32I.$add$Procesador_V2.0b/RV32nexpo.v:493$351_Y [60], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$2173 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$3194 (A=\RV32I.DE_rs1Data [29], B=1'0, S=\RV32I.DE_funct3 [2]) into $auto$simplemap.cc:420:simplemap_dff$1969 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$3645 (A=\instr [13], B=1'0, S=\RV32I.FD_nop) into $auto$simplemap.cc:420:simplemap_dff$1834 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$3646 (A=\instr [14], B=1'0, S=\RV32I.FD_nop) into $auto$simplemap.cc:420:simplemap_dff$1835 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$3640 (A=\instr [8], B=1'0, S=\RV32I.FD_nop) into $auto$simplemap.cc:420:simplemap_dff$1841 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$3641 (A=\instr [9], B=1'0, S=\RV32I.FD_nop) into $auto$simplemap.cc:420:simplemap_dff$1842 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$3642 (A=\instr [10], B=1'0, S=\RV32I.FD_nop) into $auto$simplemap.cc:420:simplemap_dff$1843 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$2894 (A=$techmap\RV32I.$add$Procesador_V2.0b/RV32nexpo.v:493$351_Y [57], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$2170 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$2895 (A=$techmap\RV32I.$add$Procesador_V2.0b/RV32nexpo.v:493$351_Y [58], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$2171 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$2893 (A=$techmap\RV32I.$add$Procesador_V2.0b/RV32nexpo.v:493$351_Y [56], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$2169 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$3186 (A=\RV32I.DE_rs1Data [21], B=1'0, S=\RV32I.DE_funct3 [2]) into $auto$simplemap.cc:420:simplemap_dff$1961 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$3170 (A=\RV32I.DE_rs1Data [5], B=1'0, S=\RV32I.DE_funct3 [2]) into $auto$simplemap.cc:420:simplemap_dff$1945 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$2347 (A=1'0, B=$techmap\RV32I.$procmux$829_Y [9], S=$auto$simplemap.cc:256:simplemap_eqne$3548) into $auto$simplemap.cc:420:simplemap_dff$1859 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$2866 (A=$techmap\RV32I.$add$Procesador_V2.0b/RV32nexpo.v:493$351_Y [29], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$2142 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$2892 (A=$techmap\RV32I.$add$Procesador_V2.0b/RV32nexpo.v:493$351_Y [55], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$2168 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$2891 (A=$techmap\RV32I.$add$Procesador_V2.0b/RV32nexpo.v:493$351_Y [54], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$2167 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$3183 (A=\RV32I.DE_rs1Data [18], B=1'0, S=\RV32I.DE_funct3 [2]) into $auto$simplemap.cc:420:simplemap_dff$1958 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$3182 (A=\RV32I.DE_rs1Data [17], B=1'0, S=\RV32I.DE_funct3 [2]) into $auto$simplemap.cc:420:simplemap_dff$1957 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$3180 (A=\RV32I.DE_rs1Data [15], B=1'0, S=\RV32I.DE_funct3 [2]) into $auto$simplemap.cc:420:simplemap_dff$1955 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$2847 (A=$techmap\RV32I.$add$Procesador_V2.0b/RV32nexpo.v:493$351_Y [10], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$2123 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$2867 (A=$techmap\RV32I.$add$Procesador_V2.0b/RV32nexpo.v:493$351_Y [30], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$2143 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$2890 (A=$techmap\RV32I.$add$Procesador_V2.0b/RV32nexpo.v:493$351_Y [53], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$2166 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$2889 (A=$techmap\RV32I.$add$Procesador_V2.0b/RV32nexpo.v:493$351_Y [52], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$2165 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$3179 (A=\RV32I.DE_rs1Data [14], B=1'0, S=\RV32I.DE_funct3 [2]) into $auto$simplemap.cc:420:simplemap_dff$1954 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$3174 (A=\RV32I.DE_rs1Data [9], B=1'0, S=\RV32I.DE_funct3 [2]) into $auto$simplemap.cc:420:simplemap_dff$1949 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$3181 (A=\RV32I.DE_rs1Data [16], B=1'0, S=\RV32I.DE_funct3 [2]) into $auto$simplemap.cc:420:simplemap_dff$1956 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$3173 (A=\RV32I.DE_rs1Data [8], B=1'0, S=\RV32I.DE_funct3 [2]) into $auto$simplemap.cc:420:simplemap_dff$1948 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$3172 (A=\RV32I.DE_rs1Data [7], B=1'0, S=\RV32I.DE_funct3 [2]) into $auto$simplemap.cc:420:simplemap_dff$1947 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$3184 (A=\RV32I.DE_rs1Data [19], B=1'0, S=\RV32I.DE_funct3 [2]) into $auto$simplemap.cc:420:simplemap_dff$1959 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$3185 (A=\RV32I.DE_rs1Data [20], B=1'0, S=\RV32I.DE_funct3 [2]) into $auto$simplemap.cc:420:simplemap_dff$1960 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$2691 (A=\RV32I.M_CSRtoWrite [14], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$2095 (SB_DFFE).
Merging $auto$simplemap.cc:277:simplemap_mux$3195 (A=\RV32I.DE_rs1Data [30], B=1'0, S=\RV32I.DE_funct3 [2]) into $auto$simplemap.cc:420:simplemap_dff$1970 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$3651 (A=\instr [19], B=1'0, S=\RV32I.FD_nop) into $auto$simplemap.cc:420:simplemap_dff$1849 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$2255 (A=$techmap\RV32I.$procmux$841_Y [14], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$1804 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$2243 (A=$techmap\RV32I.$procmux$841_Y [2], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$1792 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$2314 (A=\RV32I.F_pc [9], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$1767 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$1642 (A=\DatatoWrite [22], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$1735 (SB_DFFE).
Merging $auto$simplemap.cc:277:simplemap_mux$2678 (A=\RV32I.M_CSRtoWrite [1], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$2082 (SB_DFFE).
Merging $auto$simplemap.cc:277:simplemap_mux$2788 (A=$techmap\RV32I.$add$Procesador_V2.0b/RV32nexpo.v:492$349_Y [15], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$2192 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$2344 (A=1'0, B=$techmap\RV32I.$procmux$829_Y [6], S=$auto$simplemap.cc:256:simplemap_eqne$3548) into $auto$simplemap.cc:420:simplemap_dff$1856 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$2806 (A=$techmap\RV32I.$add$Procesador_V2.0b/RV32nexpo.v:492$349_Y [33], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$2210 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$2874 (A=$techmap\RV32I.$add$Procesador_V2.0b/RV32nexpo.v:493$351_Y [37], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$2150 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$2876 (A=$techmap\RV32I.$add$Procesador_V2.0b/RV32nexpo.v:493$351_Y [39], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$2152 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$3729 (A=$auto$wreduce.cc:460:run$972 [2], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$3705 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$2804 (A=$techmap\RV32I.$add$Procesador_V2.0b/RV32nexpo.v:492$349_Y [31], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$2208 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$2803 (A=$techmap\RV32I.$add$Procesador_V2.0b/RV32nexpo.v:492$349_Y [30], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$2207 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$2802 (A=$techmap\RV32I.$add$Procesador_V2.0b/RV32nexpo.v:492$349_Y [29], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$2206 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$2858 (A=$techmap\RV32I.$add$Procesador_V2.0b/RV32nexpo.v:493$351_Y [21], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$2134 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$1590 (A=\DatatoWrite [26], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$1739 (SB_DFFE).
Merging $auto$simplemap.cc:277:simplemap_mux$2800 (A=$techmap\RV32I.$add$Procesador_V2.0b/RV32nexpo.v:492$349_Y [27], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$2204 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$3648 (A=\instr [16], B=1'0, S=\RV32I.FD_nop) into $auto$simplemap.cc:420:simplemap_dff$1846 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$2777 (A=$techmap\RV32I.$add$Procesador_V2.0b/RV32nexpo.v:492$349_Y [4], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$2181 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$3739 (A=1'1, B=$techmap$techmap\LEDS8_4.$procmux$864.$ternary$/home/jfdava/.apio/packages/toolchain-yosys/bin/../share/yosys/techmap.v:445$3744_Y [0], S=$techmap\LEDS8_4.$and$ControladorMatrizLed.v:42$6_Y) into $auto$simplemap.cc:420:simplemap_dff$3723 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$2343 (A=1'0, B=$techmap\RV32I.$procmux$829_Y [5], S=$auto$simplemap.cc:256:simplemap_eqne$3548) into $auto$simplemap.cc:420:simplemap_dff$1855 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$2828 (A=$techmap\RV32I.$add$Procesador_V2.0b/RV32nexpo.v:492$349_Y [55], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$2232 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$3191 (A=\RV32I.DE_rs1Data [26], B=1'0, S=\RV32I.DE_funct3 [2]) into $auto$simplemap.cc:420:simplemap_dff$1966 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$3329 (A=1'0, B=\RV32I.FD_instr [13], S=\RV32I.D_ALUFun) into $auto$simplemap.cc:420:simplemap_dff$1837 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$2263 (A=$techmap\RV32I.$procmux$841_Y [22], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$1812 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$2322 (A=\RV32I.F_pc [17], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$1775 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$3727 (A=$auto$simplemap.cc:309:simplemap_lut$9709, B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$3703 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$2790 (A=$techmap\RV32I.$add$Procesador_V2.0b/RV32nexpo.v:492$349_Y [17], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$2194 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$2792 (A=$techmap\RV32I.$add$Procesador_V2.0b/RV32nexpo.v:492$349_Y [19], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$2196 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$2794 (A=$techmap\RV32I.$add$Procesador_V2.0b/RV32nexpo.v:492$349_Y [21], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$2198 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$2796 (A=$techmap\RV32I.$add$Procesador_V2.0b/RV32nexpo.v:492$349_Y [23], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$2200 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$2816 (A=$techmap\RV32I.$add$Procesador_V2.0b/RV32nexpo.v:492$349_Y [43], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$2220 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$2813 (A=$techmap\RV32I.$add$Procesador_V2.0b/RV32nexpo.v:492$349_Y [40], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$2217 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$2851 (A=$techmap\RV32I.$add$Procesador_V2.0b/RV32nexpo.v:493$351_Y [14], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$2127 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$2848 (A=$techmap\RV32I.$add$Procesador_V2.0b/RV32nexpo.v:493$351_Y [11], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$2124 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$2843 (A=$techmap\RV32I.$add$Procesador_V2.0b/RV32nexpo.v:493$351_Y [6], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$2119 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$2817 (A=$techmap\RV32I.$add$Procesador_V2.0b/RV32nexpo.v:492$349_Y [44], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$2221 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$2706 (A=\RV32I.M_CSRtoWrite [29], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$2110 (SB_DFFE).
Merging $auto$simplemap.cc:277:simplemap_mux$2882 (A=$techmap\RV32I.$add$Procesador_V2.0b/RV32nexpo.v:493$351_Y [45], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$2158 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$2267 (A=$techmap\RV32I.$procmux$841_Y [26], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$1816 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$2885 (A=$techmap\RV32I.$add$Procesador_V2.0b/RV32nexpo.v:493$351_Y [48], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$2161 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$2348 (A=1'0, B=$techmap\RV32I.$procmux$829_Y [10], S=$auto$simplemap.cc:256:simplemap_eqne$3548) into $auto$simplemap.cc:420:simplemap_dff$1860 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$1641 (A=\DatatoWrite [21], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$1734 (SB_DFFE).
Merging $auto$simplemap.cc:277:simplemap_mux$2679 (A=\RV32I.M_CSRtoWrite [2], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$2083 (SB_DFFE).
Merging $auto$simplemap.cc:277:simplemap_mux$2845 (A=$techmap\RV32I.$add$Procesador_V2.0b/RV32nexpo.v:493$351_Y [8], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$2121 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$1661 (A=\DatatoWrite [9], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$1722 (SB_DFFE).
Merging $auto$simplemap.cc:277:simplemap_mux$2868 (A=$techmap\RV32I.$add$Procesador_V2.0b/RV32nexpo.v:493$351_Y [31], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$2144 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$2686 (A=\RV32I.M_CSRtoWrite [9], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$2090 (SB_DFFE).
Merging $auto$simplemap.cc:277:simplemap_mux$2801 (A=$techmap\RV32I.$add$Procesador_V2.0b/RV32nexpo.v:492$349_Y [28], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$2205 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$2685 (A=\RV32I.M_CSRtoWrite [8], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$2089 (SB_DFFE).
Merging $auto$simplemap.cc:277:simplemap_mux$2689 (A=\RV32I.M_CSRtoWrite [12], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$2093 (SB_DFFE).
Merging $auto$simplemap.cc:277:simplemap_mux$2692 (A=\RV32I.M_CSRtoWrite [15], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$2096 (SB_DFFE).
Merging $auto$simplemap.cc:277:simplemap_mux$2860 (A=$techmap\RV32I.$add$Procesador_V2.0b/RV32nexpo.v:493$351_Y [23], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$2136 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$2687 (A=\RV32I.M_CSRtoWrite [10], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$2091 (SB_DFFE).
Merging $auto$simplemap.cc:277:simplemap_mux$2702 (A=\RV32I.M_CSRtoWrite [25], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$2106 (SB_DFFE).
Merging $auto$simplemap.cc:277:simplemap_mux$2878 (A=$techmap\RV32I.$add$Procesador_V2.0b/RV32nexpo.v:493$351_Y [41], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$2154 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$2698 (A=\RV32I.M_CSRtoWrite [21], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$2102 (SB_DFFE).
Merging $auto$simplemap.cc:277:simplemap_mux$2695 (A=\RV32I.M_CSRtoWrite [18], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$2099 (SB_DFFE).
Merging $auto$simplemap.cc:277:simplemap_mux$2697 (A=\RV32I.M_CSRtoWrite [20], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$2101 (SB_DFFE).
Merging $auto$simplemap.cc:277:simplemap_mux$2696 (A=\RV32I.M_CSRtoWrite [19], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$2100 (SB_DFFE).
Merging $auto$simplemap.cc:277:simplemap_mux$2694 (A=\RV32I.M_CSRtoWrite [17], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$2098 (SB_DFFE).
Merging $auto$simplemap.cc:277:simplemap_mux$2693 (A=\RV32I.M_CSRtoWrite [16], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$2097 (SB_DFFE).
Merging $auto$simplemap.cc:277:simplemap_mux$2699 (A=\RV32I.M_CSRtoWrite [22], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$2103 (SB_DFFE).
Merging $auto$simplemap.cc:277:simplemap_mux$2700 (A=\RV32I.M_CSRtoWrite [23], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$2104 (SB_DFFE).
Merging $auto$simplemap.cc:277:simplemap_mux$2701 (A=\RV32I.M_CSRtoWrite [24], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$2105 (SB_DFFE).
Merging $auto$simplemap.cc:277:simplemap_mux$2880 (A=$techmap\RV32I.$add$Procesador_V2.0b/RV32nexpo.v:493$351_Y [43], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$2156 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$2849 (A=$techmap\RV32I.$add$Procesador_V2.0b/RV32nexpo.v:493$351_Y [12], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$2125 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$2704 (A=\RV32I.M_CSRtoWrite [27], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$2108 (SB_DFFE).
Merging $auto$simplemap.cc:277:simplemap_mux$2708 (A=\RV32I.M_CSRtoWrite [31], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$2112 (SB_DFFE).
Merging $auto$simplemap.cc:277:simplemap_mux$2839 (A=$techmap\RV32I.$add$Procesador_V2.0b/RV32nexpo.v:493$351_Y [2], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$2115 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$2707 (A=\RV32I.M_CSRtoWrite [30], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$2111 (SB_DFFE).
Merging $auto$simplemap.cc:277:simplemap_mux$2677 (A=\RV32I.M_CSRtoWrite [0], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$2081 (SB_DFFE).
Merging $auto$simplemap.cc:277:simplemap_mux$2840 (A=$techmap\RV32I.$add$Procesador_V2.0b/RV32nexpo.v:493$351_Y [3], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$2116 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$2838 (A=$techmap\RV32I.$add$Procesador_V2.0b/RV32nexpo.v:493$351_Y [1], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$2114 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$2842 (A=$techmap\RV32I.$add$Procesador_V2.0b/RV32nexpo.v:493$351_Y [5], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$2118 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$2808 (A=$techmap\RV32I.$add$Procesador_V2.0b/RV32nexpo.v:492$349_Y [35], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$2212 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$3175 (A=\RV32I.DE_rs1Data [10], B=1'0, S=\RV32I.DE_funct3 [2]) into $auto$simplemap.cc:420:simplemap_dff$1950 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$2798 (A=$techmap\RV32I.$add$Procesador_V2.0b/RV32nexpo.v:492$349_Y [25], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$2202 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$2688 (A=\RV32I.M_CSRtoWrite [11], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$2092 (SB_DFFE).
Merging $auto$simplemap.cc:277:simplemap_mux$2844 (A=$techmap\RV32I.$add$Procesador_V2.0b/RV32nexpo.v:493$351_Y [7], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$2120 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$2681 (A=\RV32I.M_CSRtoWrite [4], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$2085 (SB_DFFE).
Merging $auto$simplemap.cc:277:simplemap_mux$1662 (A=\DatatoWrite [10], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$1723 (SB_DFFE).
Merging $auto$simplemap.cc:277:simplemap_mux$2315 (A=\RV32I.F_pc [10], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$1768 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$2256 (A=$techmap\RV32I.$procmux$841_Y [15], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$1805 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$2815 (A=$techmap\RV32I.$add$Procesador_V2.0b/RV32nexpo.v:492$349_Y [42], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$2219 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$3663 (A=\instr [31], B=1'0, S=\RV32I.FD_nop) into $auto$simplemap.cc:420:simplemap_dff$1881 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$3176 (A=\RV32I.DE_rs1Data [11], B=1'0, S=\RV32I.DE_funct3 [2]) into $auto$simplemap.cc:420:simplemap_dff$1951 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$2888 (A=$techmap\RV32I.$add$Procesador_V2.0b/RV32nexpo.v:493$351_Y [51], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$2164 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$2680 (A=\RV32I.M_CSRtoWrite [3], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$2084 (SB_DFFE).
Merging $auto$simplemap.cc:277:simplemap_mux$2884 (A=$techmap\RV32I.$add$Procesador_V2.0b/RV32nexpo.v:493$351_Y [47], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$2160 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$2879 (A=$techmap\RV32I.$add$Procesador_V2.0b/RV32nexpo.v:493$351_Y [42], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$2155 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$2875 (A=$techmap\RV32I.$add$Procesador_V2.0b/RV32nexpo.v:493$351_Y [38], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$2151 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$2873 (A=$techmap\RV32I.$add$Procesador_V2.0b/RV32nexpo.v:493$351_Y [36], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$2149 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$2703 (A=\RV32I.M_CSRtoWrite [26], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$2107 (SB_DFFE).
Merging $auto$simplemap.cc:277:simplemap_mux$2877 (A=$techmap\RV32I.$add$Procesador_V2.0b/RV32nexpo.v:493$351_Y [40], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$2153 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$3187 (A=\RV32I.DE_rs1Data [22], B=1'0, S=\RV32I.DE_funct3 [2]) into $auto$simplemap.cc:420:simplemap_dff$1962 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$2683 (A=\RV32I.M_CSRtoWrite [6], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$2087 (SB_DFFE).
Merging $auto$simplemap.cc:277:simplemap_mux$2886 (A=$techmap\RV32I.$add$Procesador_V2.0b/RV32nexpo.v:493$351_Y [49], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$2162 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$2870 (A=$techmap\RV32I.$add$Procesador_V2.0b/RV32nexpo.v:493$351_Y [33], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$2146 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$2883 (A=$techmap\RV32I.$add$Procesador_V2.0b/RV32nexpo.v:493$351_Y [46], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$2159 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$2887 (A=$techmap\RV32I.$add$Procesador_V2.0b/RV32nexpo.v:493$351_Y [50], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$2163 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$3178 (A=\RV32I.DE_rs1Data [13], B=1'0, S=\RV32I.DE_funct3 [2]) into $auto$simplemap.cc:420:simplemap_dff$1953 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$3177 (A=\RV32I.DE_rs1Data [12], B=1'0, S=\RV32I.DE_funct3 [2]) into $auto$simplemap.cc:420:simplemap_dff$1952 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$2896 (A=$techmap\RV32I.$add$Procesador_V2.0b/RV32nexpo.v:493$351_Y [59], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$2172 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$2865 (A=$techmap\RV32I.$add$Procesador_V2.0b/RV32nexpo.v:493$351_Y [28], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$2141 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$2837 (A=$techmap\RV32I.$add$Procesador_V2.0b/RV32nexpo.v:493$351_Y [0], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$2113 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$3643 (A=\instr [11], B=1'0, S=\RV32I.FD_nop) into $auto$simplemap.cc:420:simplemap_dff$1844 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$2268 (A=$techmap\RV32I.$procmux$841_Y [27], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$1817 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$2807 (A=$techmap\RV32I.$add$Procesador_V2.0b/RV32nexpo.v:492$349_Y [34], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$2211 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$2258 (A=$techmap\RV32I.$procmux$841_Y [17], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$1807 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$2257 (A=$techmap\RV32I.$procmux$841_Y [16], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$1806 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$2317 (A=\RV32I.F_pc [12], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$1770 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$1664 (A=\DatatoWrite [12], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$1725 (SB_DFFE).
Merging $auto$simplemap.cc:277:simplemap_mux$1663 (A=\DatatoWrite [11], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$1724 (SB_DFFE).
Merging $auto$simplemap.cc:277:simplemap_mux$2787 (A=$techmap\RV32I.$add$Procesador_V2.0b/RV32nexpo.v:492$349_Y [14], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$2191 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$2856 (A=$techmap\RV32I.$add$Procesador_V2.0b/RV32nexpo.v:493$351_Y [19], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$2132 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$2789 (A=$techmap\RV32I.$add$Procesador_V2.0b/RV32nexpo.v:492$349_Y [16], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$2193 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$2855 (A=$techmap\RV32I.$add$Procesador_V2.0b/RV32nexpo.v:493$351_Y [18], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$2131 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$2791 (A=$techmap\RV32I.$add$Procesador_V2.0b/RV32nexpo.v:492$349_Y [18], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$2195 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$2793 (A=$techmap\RV32I.$add$Procesador_V2.0b/RV32nexpo.v:492$349_Y [20], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$2197 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$2853 (A=$techmap\RV32I.$add$Procesador_V2.0b/RV32nexpo.v:493$351_Y [16], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$2129 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$2795 (A=$techmap\RV32I.$add$Procesador_V2.0b/RV32nexpo.v:492$349_Y [22], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$2199 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$2852 (A=$techmap\RV32I.$add$Procesador_V2.0b/RV32nexpo.v:493$351_Y [15], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$2128 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$2797 (A=$techmap\RV32I.$add$Procesador_V2.0b/RV32nexpo.v:492$349_Y [24], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$2201 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$2799 (A=$techmap\RV32I.$add$Procesador_V2.0b/RV32nexpo.v:492$349_Y [26], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$2203 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$2850 (A=$techmap\RV32I.$add$Procesador_V2.0b/RV32nexpo.v:493$351_Y [13], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$2126 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$2829 (A=$techmap\RV32I.$add$Procesador_V2.0b/RV32nexpo.v:492$349_Y [56], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$2233 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$2690 (A=\RV32I.M_CSRtoWrite [13], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$2094 (SB_DFFE).
Merging $auto$simplemap.cc:277:simplemap_mux$2805 (A=$techmap\RV32I.$add$Procesador_V2.0b/RV32nexpo.v:492$349_Y [32], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$2209 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$2779 (A=$techmap\RV32I.$add$Procesador_V2.0b/RV32nexpo.v:492$349_Y [6], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$2183 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$2332 (A=\RV32I.F_pc [27], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$1785 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$2809 (A=$techmap\RV32I.$add$Procesador_V2.0b/RV32nexpo.v:492$349_Y [36], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$2213 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$2854 (A=$techmap\RV32I.$add$Procesador_V2.0b/RV32nexpo.v:493$351_Y [17], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$2130 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$3647 (A=\instr [15], B=1'0, S=\RV32I.FD_nop) into $auto$simplemap.cc:420:simplemap_dff$1845 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$2684 (A=\RV32I.M_CSRtoWrite [7], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$2088 (SB_DFFE).
Merging $auto$simplemap.cc:277:simplemap_mux$2705 (A=\RV32I.M_CSRtoWrite [28], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$2109 (SB_DFFE).
Merging $auto$simplemap.cc:277:simplemap_mux$2826 (A=$techmap\RV32I.$add$Procesador_V2.0b/RV32nexpo.v:492$349_Y [53], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$2230 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$2841 (A=$techmap\RV32I.$add$Procesador_V2.0b/RV32nexpo.v:493$351_Y [4], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$2117 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$2814 (A=$techmap\RV32I.$add$Procesador_V2.0b/RV32nexpo.v:492$349_Y [41], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$2218 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$2830 (A=$techmap\RV32I.$add$Procesador_V2.0b/RV32nexpo.v:492$349_Y [57], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$2234 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$2819 (A=$techmap\RV32I.$add$Procesador_V2.0b/RV32nexpo.v:492$349_Y [46], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$2223 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$2820 (A=$techmap\RV32I.$add$Procesador_V2.0b/RV32nexpo.v:492$349_Y [47], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$2224 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$2821 (A=$techmap\RV32I.$add$Procesador_V2.0b/RV32nexpo.v:492$349_Y [48], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$2225 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$2822 (A=$techmap\RV32I.$add$Procesador_V2.0b/RV32nexpo.v:492$349_Y [49], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$2226 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$2823 (A=$techmap\RV32I.$add$Procesador_V2.0b/RV32nexpo.v:492$349_Y [50], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$2227 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$2824 (A=$techmap\RV32I.$add$Procesador_V2.0b/RV32nexpo.v:492$349_Y [51], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$2228 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$2825 (A=$techmap\RV32I.$add$Procesador_V2.0b/RV32nexpo.v:492$349_Y [52], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$2229 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$3171 (A=\RV32I.DE_rs1Data [6], B=1'0, S=\RV32I.DE_funct3 [2]) into $auto$simplemap.cc:420:simplemap_dff$1946 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$2818 (A=$techmap\RV32I.$add$Procesador_V2.0b/RV32nexpo.v:492$349_Y [45], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$2222 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$2831 (A=$techmap\RV32I.$add$Procesador_V2.0b/RV32nexpo.v:492$349_Y [58], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$2235 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$2832 (A=$techmap\RV32I.$add$Procesador_V2.0b/RV32nexpo.v:492$349_Y [59], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$2236 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$2833 (A=$techmap\RV32I.$add$Procesador_V2.0b/RV32nexpo.v:492$349_Y [60], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$2237 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$2834 (A=$techmap\RV32I.$add$Procesador_V2.0b/RV32nexpo.v:492$349_Y [61], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$2238 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$2835 (A=$techmap\RV32I.$add$Procesador_V2.0b/RV32nexpo.v:492$349_Y [62], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$2239 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$2836 (A=$techmap\RV32I.$add$Procesador_V2.0b/RV32nexpo.v:492$349_Y [63], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$2240 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$1569 (A=$procmux$731_Y, B=1'1, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$1711 (SB_DFFE).
Merging $auto$simplemap.cc:277:simplemap_mux$2682 (A=\RV32I.M_CSRtoWrite [5], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$2086 (SB_DFFE).
Merging $auto$simplemap.cc:277:simplemap_mux$5471 (A=$auto$simplemap.cc:309:simplemap_lut$9842, B=1'0, S=\UART_RX.bclk.reset) into $auto$simplemap.cc:420:simplemap_dff$5464 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$3728 (A=$auto$wreduce.cc:460:run$972 [1], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$3704 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$3730 (A=$auto$wreduce.cc:460:run$972 [3], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$3706 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$3731 (A=$auto$wreduce.cc:460:run$972 [4], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$3707 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$3732 (A=$auto$wreduce.cc:460:run$972 [5], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$3708 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$3733 (A=$auto$wreduce.cc:460:run$972 [6], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$3709 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$3734 (A=$auto$wreduce.cc:460:run$972 [7], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$3710 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$3735 (A=$auto$wreduce.cc:460:run$972 [8], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$3711 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$3736 (A=$auto$wreduce.cc:460:run$972 [9], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$3712 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$3737 (A=$auto$wreduce.cc:460:run$972 [10], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$3713 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$2331 (A=\RV32I.F_pc [26], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$1784 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$3738 (A=$auto$wreduce.cc:460:run$972 [11], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$3714 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$3753 (A=1'1, B=$techmap$techmap\LEDS8_4.$procmux$856.$ternary$/home/jfdava/.apio/packages/toolchain-yosys/bin/../share/yosys/techmap.v:445$3781_Y [1], S=$techmap\LEDS8_4.$and$ControladorMatrizLed.v:42$6_Y) into $auto$simplemap.cc:420:simplemap_dff$3716 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$3754 (A=1'1, B=$techmap$techmap\LEDS8_4.$procmux$856.$ternary$/home/jfdava/.apio/packages/toolchain-yosys/bin/../share/yosys/techmap.v:445$3781_Y [2], S=$techmap\LEDS8_4.$and$ControladorMatrizLed.v:42$6_Y) into $auto$simplemap.cc:420:simplemap_dff$3717 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$3755 (A=1'1, B=$techmap$techmap\LEDS8_4.$procmux$856.$ternary$/home/jfdava/.apio/packages/toolchain-yosys/bin/../share/yosys/techmap.v:445$3781_Y [3], S=$techmap\LEDS8_4.$and$ControladorMatrizLed.v:42$6_Y) into $auto$simplemap.cc:420:simplemap_dff$3718 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$3756 (A=1'1, B=$techmap$techmap\LEDS8_4.$procmux$856.$ternary$/home/jfdava/.apio/packages/toolchain-yosys/bin/../share/yosys/techmap.v:445$3781_Y [4], S=$techmap\LEDS8_4.$and$ControladorMatrizLed.v:42$6_Y) into $auto$simplemap.cc:420:simplemap_dff$3719 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$3757 (A=1'1, B=$techmap$techmap\LEDS8_4.$procmux$856.$ternary$/home/jfdava/.apio/packages/toolchain-yosys/bin/../share/yosys/techmap.v:445$3781_Y [5], S=$techmap\LEDS8_4.$and$ControladorMatrizLed.v:42$6_Y) into $auto$simplemap.cc:420:simplemap_dff$3720 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$3758 (A=1'1, B=$techmap$techmap\LEDS8_4.$procmux$856.$ternary$/home/jfdava/.apio/packages/toolchain-yosys/bin/../share/yosys/techmap.v:445$3781_Y [6], S=$techmap\LEDS8_4.$and$ControladorMatrizLed.v:42$6_Y) into $auto$simplemap.cc:420:simplemap_dff$3721 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$3752 (A=1'1, B=$techmap$techmap\LEDS8_4.$procmux$856.$ternary$/home/jfdava/.apio/packages/toolchain-yosys/bin/../share/yosys/techmap.v:445$3781_Y [0], S=$techmap\LEDS8_4.$and$ControladorMatrizLed.v:42$6_Y) into $auto$simplemap.cc:420:simplemap_dff$3715 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$3759 (A=1'1, B=$techmap$techmap\LEDS8_4.$procmux$856.$ternary$/home/jfdava/.apio/packages/toolchain-yosys/bin/../share/yosys/techmap.v:445$3781_Y [7], S=$techmap\LEDS8_4.$and$ControladorMatrizLed.v:42$6_Y) into $auto$simplemap.cc:420:simplemap_dff$3722 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$3740 (A=1'1, B=$techmap$techmap\LEDS8_4.$procmux$864.$ternary$/home/jfdava/.apio/packages/toolchain-yosys/bin/../share/yosys/techmap.v:445$3744_Y [1], S=$techmap\LEDS8_4.$and$ControladorMatrizLed.v:42$6_Y) into $auto$simplemap.cc:420:simplemap_dff$3724 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$3741 (A=1'1, B=$techmap$techmap\LEDS8_4.$procmux$864.$ternary$/home/jfdava/.apio/packages/toolchain-yosys/bin/../share/yosys/techmap.v:445$3744_Y [2], S=$techmap\LEDS8_4.$and$ControladorMatrizLed.v:42$6_Y) into $auto$simplemap.cc:420:simplemap_dff$3725 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$3742 (A=1'1, B=$techmap$techmap\LEDS8_4.$procmux$864.$ternary$/home/jfdava/.apio/packages/toolchain-yosys/bin/../share/yosys/techmap.v:445$3744_Y [3], S=$techmap\LEDS8_4.$and$ControladorMatrizLed.v:42$6_Y) into $auto$simplemap.cc:420:simplemap_dff$3726 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$2251 (A=$techmap\RV32I.$procmux$841_Y [10], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$1800 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$3881 (A=1'0, B=$techmap\UART_TX.$add$uart.v:98$435_Y [1], S=$auto$simplemap.cc:256:simplemap_eqne$3894) into $auto$simplemap.cc:420:simplemap_dff$3856 (SB_DFFE).
Merging $auto$simplemap.cc:277:simplemap_mux$3882 (A=1'0, B=$techmap\UART_TX.$add$uart.v:98$435_Y [2], S=$auto$simplemap.cc:256:simplemap_eqne$3894) into $auto$simplemap.cc:420:simplemap_dff$3857 (SB_DFFE).
Merging $auto$simplemap.cc:277:simplemap_mux$3880 (A=1'0, B=$auto$simplemap.cc:309:simplemap_lut$9861, S=$auto$simplemap.cc:256:simplemap_eqne$3894) into $auto$simplemap.cc:420:simplemap_dff$3855 (SB_DFFE).
Merging $auto$simplemap.cc:277:simplemap_mux$2881 (A=$techmap\RV32I.$add$Procesador_V2.0b/RV32nexpo.v:493$351_Y [44], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$2157 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$2270 (A=$techmap\RV32I.$procmux$841_Y [29], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$1819 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$3883 (A=1'0, B=$techmap\UART_TX.$add$uart.v:98$435_Y [3], S=$auto$simplemap.cc:256:simplemap_eqne$3894) into $auto$simplemap.cc:420:simplemap_dff$3858 (SB_DFFE).
Merging $auto$simplemap.cc:277:simplemap_mux$3941 (A=1'0, B=$auto$wreduce.cc:460:run$996 [1], S=\UART_RX.state) into $auto$simplemap.cc:420:simplemap_dff$3910 (SB_DFFE).
Merging $auto$simplemap.cc:277:simplemap_mux$3942 (A=1'0, B=$auto$wreduce.cc:460:run$996 [2], S=\UART_RX.state) into $auto$simplemap.cc:420:simplemap_dff$3911 (SB_DFFE).
Merging $auto$simplemap.cc:277:simplemap_mux$3943 (A=1'0, B=$auto$wreduce.cc:460:run$996 [3], S=\UART_RX.state) into $auto$simplemap.cc:420:simplemap_dff$3912 (SB_DFFE).
Merging $auto$simplemap.cc:277:simplemap_mux$3944 (A=1'0, B=$auto$wreduce.cc:460:run$996 [4], S=\UART_RX.state) into $auto$simplemap.cc:420:simplemap_dff$3913 (SB_DFFE).
Merging $auto$simplemap.cc:277:simplemap_mux$3945 (A=1'0, B=$auto$wreduce.cc:460:run$996 [5], S=\UART_RX.state) into $auto$simplemap.cc:420:simplemap_dff$3914 (SB_DFFE).
Merging $auto$simplemap.cc:277:simplemap_mux$3940 (A=1'0, B=$auto$simplemap.cc:309:simplemap_lut$9804, S=\UART_RX.state) into $auto$simplemap.cc:420:simplemap_dff$3909 (SB_DFFE).
Merging $auto$simplemap.cc:277:simplemap_mux$3946 (A=1'0, B=$auto$wreduce.cc:460:run$996 [6], S=\UART_RX.state) into $auto$simplemap.cc:420:simplemap_dff$3915 (SB_DFFE).
Merging $auto$simplemap.cc:277:simplemap_mux$3964 (A=$auto$wreduce.cc:460:run$997 [1], B=1'0, S=$techmap\UART_RX.$or$uart.v:203$458_Y) into $auto$simplemap.cc:420:simplemap_dff$3926 (SB_DFFE).
Merging $auto$simplemap.cc:277:simplemap_mux$3965 (A=$auto$wreduce.cc:460:run$997 [2], B=1'0, S=$techmap\UART_RX.$or$uart.v:203$458_Y) into $auto$simplemap.cc:420:simplemap_dff$3927 (SB_DFFE).
Merging $auto$simplemap.cc:277:simplemap_mux$3966 (A=$auto$wreduce.cc:460:run$997 [3], B=1'0, S=$techmap\UART_RX.$or$uart.v:203$458_Y) into $auto$simplemap.cc:420:simplemap_dff$3928 (SB_DFFE).
Merging $auto$simplemap.cc:277:simplemap_mux$3963 (A=$auto$simplemap.cc:309:simplemap_lut$9823, B=1'0, S=$techmap\UART_RX.$or$uart.v:203$458_Y) into $auto$simplemap.cc:420:simplemap_dff$3925 (SB_DFFE).
Merging $auto$simplemap.cc:277:simplemap_mux$3967 (A=$auto$wreduce.cc:460:run$997 [4], B=1'0, S=$techmap\UART_RX.$or$uart.v:203$458_Y) into $auto$simplemap.cc:420:simplemap_dff$3929 (SB_DFFE).
Merging $auto$simplemap.cc:277:simplemap_mux$5421 (A=$auto$simplemap.cc:309:simplemap_lut$9766, B=1'0, S=\UART_TX.bclk.reset) into $auto$simplemap.cc:420:simplemap_dff$5414 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$5422 (A=$auto$wreduce.cc:460:run$999 [1], B=1'0, S=\UART_TX.bclk.reset) into $auto$simplemap.cc:420:simplemap_dff$5415 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$3190 (A=\RV32I.DE_rs1Data [25], B=1'0, S=\RV32I.DE_funct3 [2]) into $auto$simplemap.cc:420:simplemap_dff$1965 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$5423 (A=$auto$wreduce.cc:460:run$999 [2], B=1'0, S=\UART_TX.bclk.reset) into $auto$simplemap.cc:420:simplemap_dff$5416 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$5425 (A=$auto$wreduce.cc:460:run$999 [4], B=1'0, S=\UART_TX.bclk.reset) into $auto$simplemap.cc:420:simplemap_dff$5418 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$5426 (A=$auto$wreduce.cc:460:run$999 [5], B=1'0, S=\UART_TX.bclk.reset) into $auto$simplemap.cc:420:simplemap_dff$5419 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$2869 (A=$techmap\RV32I.$add$Procesador_V2.0b/RV32nexpo.v:493$351_Y [32], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$2145 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$5427 (A=$auto$wreduce.cc:460:run$999 [6], B=1'0, S=\UART_TX.bclk.reset) into $auto$simplemap.cc:420:simplemap_dff$5420 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$5472 (A=$auto$wreduce.cc:460:run$998 [1], B=1'0, S=\UART_RX.bclk.reset) into $auto$simplemap.cc:420:simplemap_dff$5465 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$5473 (A=$auto$wreduce.cc:460:run$998 [2], B=1'0, S=\UART_RX.bclk.reset) into $auto$simplemap.cc:420:simplemap_dff$5466 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$5474 (A=$auto$wreduce.cc:460:run$998 [3], B=1'0, S=\UART_RX.bclk.reset) into $auto$simplemap.cc:420:simplemap_dff$5467 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$5475 (A=$auto$wreduce.cc:460:run$998 [4], B=1'0, S=\UART_RX.bclk.reset) into $auto$simplemap.cc:420:simplemap_dff$5468 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$5476 (A=$auto$wreduce.cc:460:run$998 [5], B=1'0, S=\UART_RX.bclk.reset) into $auto$simplemap.cc:420:simplemap_dff$5469 (SB_DFF).

4.40. Executing ICE40_OPT pass (performing simple optimizations).

4.40.1. Running ICE40 specific optimizations.

4.40.2. Executing OPT_EXPR pass (perform const folding).
Optimizing module SOCnexpo.

4.40.3. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\SOCnexpo'.
Removed a total of 448 cells.

4.40.4. Executing OPT_RMDFF pass (remove dff with constant values).

4.40.5. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \SOCnexpo..
Removed 354 unused cells and 2751 unused wires.

4.40.6. Rerunning OPT passes. (Removed registers in this run.)

4.40.7. Running ICE40 specific optimizations.

4.40.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module SOCnexpo.

4.40.9. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\SOCnexpo'.
Removed a total of 0 cells.

4.40.10. Executing OPT_RMDFF pass (remove dff with constant values).

4.40.11. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \SOCnexpo..

4.40.12. Rerunning OPT passes. (Removed registers in this run.)

4.40.13. Running ICE40 specific optimizations.

4.40.14. Executing OPT_EXPR pass (perform const folding).
Optimizing module SOCnexpo.

4.40.15. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\SOCnexpo'.
Removed a total of 0 cells.

4.40.16. Executing OPT_RMDFF pass (remove dff with constant values).

4.40.17. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \SOCnexpo..

4.40.18. Finished OPT passes. (There is nothing left to do.)

4.41. Executing TECHMAP pass (map to technology primitives).

4.41.1. Executing Verilog-2005 frontend: /home/jfdava/.apio/packages/toolchain-yosys/bin/../share/yosys/ice40/latches_map.v
Parsing Verilog input from `/home/jfdava/.apio/packages/toolchain-yosys/bin/../share/yosys/ice40/latches_map.v' to AST representation.
Generating RTLIL representation for module `\$_DLATCH_N_'.
Generating RTLIL representation for module `\$_DLATCH_P_'.
Successfully finished Verilog frontend.

4.41.2. Continuing TECHMAP pass.
No more expansions possible.

4.42. Executing ABC pass (technology mapping using ABC).

4.42.1. Extracting gate netlist of module `\SOCnexpo' to `<abc-temp-dir>/input.blif'..
Extracted 2364 gates and 3160 wires to a netlist network with 794 inputs and 423 outputs.

4.42.1.1. Executing ABC.
Running ABC command: <yosys-exe-dir>/yosys-abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC:
ABC: + read_blif <abc-temp-dir>/input.blif
ABC: + read_lut <abc-temp-dir>/lutdefs.txt
ABC: + strash
ABC: + ifraig
ABC: + scorr
ABC: Warning: The network is combinational (run "fraig" or "fraig_sweep").
ABC: + dc2
ABC: + dretime
ABC: + retime
ABC: + strash
ABC: + dch -f
ABC: + if
ABC: + mfs2
ABC: + lutpack -S 1
ABC: + dress
ABC: Total number of equiv classes                =     674.
ABC: Participating nodes from both networks       =    1491.
ABC: Participating nodes from the first network   =     706. (  58.59 % of nodes)
ABC: Participating nodes from the second network  =     785. (  65.15 % of nodes)
ABC: Node pairs (any polarity)                    =     706. (  58.59 % of names can be moved)
ABC: Node pairs (same polarity)                   =     522. (  43.32 % of names can be moved)
ABC: Total runtime =     0.42 sec
ABC: + write_blif <abc-temp-dir>/output.blif

4.42.1.2. Re-integrating ABC results.
ABC RESULTS:              $lut cells:     1204
ABC RESULTS:        internal signals:     1943
ABC RESULTS:           input signals:      794
ABC RESULTS:          output signals:      423
Removing temp directory.

4.43. Executing ICE40_WRAPCARRY pass (wrap carries).

4.44. Executing TECHMAP pass (map to technology primitives).

4.44.1. Executing Verilog-2005 frontend: /home/jfdava/.apio/packages/toolchain-yosys/bin/../share/yosys/ice40/cells_map.v
Parsing Verilog input from `/home/jfdava/.apio/packages/toolchain-yosys/bin/../share/yosys/ice40/cells_map.v' to AST representation.
Generating RTLIL representation for module `\$_DFF_N_'.
Generating RTLIL representation for module `\$_DFF_P_'.
Generating RTLIL representation for module `\$_DFFE_NN_'.
Generating RTLIL representation for module `\$_DFFE_PN_'.
Generating RTLIL representation for module `\$_DFFE_NP_'.
Generating RTLIL representation for module `\$_DFFE_PP_'.
Generating RTLIL representation for module `\$_DFF_NN0_'.
Generating RTLIL representation for module `\$_DFF_NN1_'.
Generating RTLIL representation for module `\$_DFF_PN0_'.
Generating RTLIL representation for module `\$_DFF_PN1_'.
Generating RTLIL representation for module `\$_DFF_NP0_'.
Generating RTLIL representation for module `\$_DFF_NP1_'.
Generating RTLIL representation for module `\$_DFF_PP0_'.
Generating RTLIL representation for module `\$_DFF_PP1_'.
Generating RTLIL representation for module `\$__DFFE_NN0'.
Generating RTLIL representation for module `\$__DFFE_NN1'.
Generating RTLIL representation for module `\$__DFFE_PN0'.
Generating RTLIL representation for module `\$__DFFE_PN1'.
Generating RTLIL representation for module `\$__DFFE_NP0'.
Generating RTLIL representation for module `\$__DFFE_NP1'.
Generating RTLIL representation for module `\$__DFFE_PP0'.
Generating RTLIL representation for module `\$__DFFE_PP1'.
Successfully finished Verilog frontend.

4.44.2. Continuing TECHMAP pass.
No more expansions possible.
Removed 27 unused cells and 1473 unused wires.

4.45. Executing OPT_LUT pass (optimize LUTs).
Discovering LUTs.
Number of LUTs:     1499
1-LUT               63
2-LUT              113
3-LUT              694
4-LUT              629
with \SB_CARRY     283

Eliminating LUTs.
Number of LUTs:     1499
1-LUT               63
2-LUT              113
3-LUT              694
4-LUT              629
with \SB_CARRY     283

Combining LUTs.
Number of LUTs:     1476
1-LUT               62
2-LUT               91
3-LUT              672
4-LUT              651
with \SB_CARRY     283

Eliminated 0 LUTs.
Combined 23 LUTs.

4.46. Executing TECHMAP pass (map to technology primitives).

4.46.1. Executing Verilog-2005 frontend: /home/jfdava/.apio/packages/toolchain-yosys/bin/../share/yosys/ice40/cells_map.v
Parsing Verilog input from `/home/jfdava/.apio/packages/toolchain-yosys/bin/../share/yosys/ice40/cells_map.v' to AST representation.
Generating RTLIL representation for module `\$_DFF_N_'.
Generating RTLIL representation for module `\$_DFF_P_'.
Generating RTLIL representation for module `\$_DFFE_NN_'.
Generating RTLIL representation for module `\$_DFFE_PN_'.
Generating RTLIL representation for module `\$_DFFE_NP_'.
Generating RTLIL representation for module `\$_DFFE_PP_'.
Generating RTLIL representation for module `\$_DFF_NN0_'.
Generating RTLIL representation for module `\$_DFF_NN1_'.
Generating RTLIL representation for module `\$_DFF_PN0_'.
Generating RTLIL representation for module `\$_DFF_PN1_'.
Generating RTLIL representation for module `\$_DFF_NP0_'.
Generating RTLIL representation for module `\$_DFF_NP1_'.
Generating RTLIL representation for module `\$_DFF_PP0_'.
Generating RTLIL representation for module `\$_DFF_PP1_'.
Generating RTLIL representation for module `\$__DFFE_NN0'.
Generating RTLIL representation for module `\$__DFFE_NN1'.
Generating RTLIL representation for module `\$__DFFE_PN0'.
Generating RTLIL representation for module `\$__DFFE_PN1'.
Generating RTLIL representation for module `\$__DFFE_NP0'.
Generating RTLIL representation for module `\$__DFFE_NP1'.
Generating RTLIL representation for module `\$__DFFE_PP0'.
Generating RTLIL representation for module `\$__DFFE_PP1'.
Generating RTLIL representation for module `\$lut'.
Successfully finished Verilog frontend.

4.46.2. Continuing TECHMAP pass.
Using template $paramod\$lut\WIDTH=4\LUT=16'0110100110010110 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'10101100 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'11001010 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'01000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'00110101 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'01010011 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0011010100000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000001100000101 for cells of type $lut.
Using template $paramod\$lut\WIDTH=2\LUT=4'1000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1010001100110011 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0001000111110000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000010100000011 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'11100000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'10100011 for cells of type $lut.
Using template $paramod\$lut\WIDTH=1\LUT=2'01 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'10000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=2\LUT=4'1011 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0001000000000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000110000001010 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000000000000001 for cells of type $lut.
Using template $paramod\$lut\WIDTH=2\LUT=4'0001 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1000000000000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000000100000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0100000000000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000011101110111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0111000000000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'00111010 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0101001100000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1100101000000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'00001110 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0001000100001111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'00000001 for cells of type $lut.
Using template $paramod\$lut\WIDTH=2\LUT=4'0100 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'00000111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'01110000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000011100000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0011101000000011 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000110000000101 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0011010101010011 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111000000010001 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'11010000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000110100000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'00010000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111010000000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1000111100000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0011111101010000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111001100000101 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1110110000001110 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000000010111111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1011000000000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000001100001010 for cells of type $lut.
Using template $paramod\$lut\WIDTH=2\LUT=4'0111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'00001011 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000101100000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'01110001 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0100111100000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1100010100000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0011010111111111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'11000101 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1110111000001111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1110111100000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000000010010110 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111000011101110 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000000000000111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1100010111001100 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111000100000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0001111100000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000000000011111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000111111101110 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1001011001101001 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1100111110100000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111110000001010 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1100101011111111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0110011011110000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111000001000100 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000000000001011 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1100010111111111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0011101011111111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1000111111111111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1011101111110000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'10111100 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0100111111110000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1101111111000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000000011101111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0111011111110000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000000010001111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000000001001111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1110111011110000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1101000000000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000000011110100 for cells of type $lut.
Using template $paramod\$lut\WIDTH=2\LUT=4'1110 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111111011111111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000000111111111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'01001111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'10001111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'11101111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'00011111 for cells of type $lut.
No more expansions possible.
Removed 0 unused cells and 2952 unused wires.

4.47. Executing AUTONAME pass.
Renamed 39361 objects in module SOCnexpo (68 iterations).

4.48. Executing HIERARCHY pass (managing design hierarchy).

4.48.1. Analyzing design hierarchy..
Top module:  \SOCnexpo

4.48.2. Analyzing design hierarchy..
Top module:  \SOCnexpo
Removed 0 unused modules.

4.49. Printing statistics.

=== SOCnexpo ===

Number of wires:               1296
Number of wire bits:           4347
Number of public wires:        1296
Number of public wire bits:    4347
Number of memories:               0
Number of memory bits:            0
Number of processes:              0
Number of cells:               2425
SB_CARRY                      298
SB_DFF                        218
SB_DFFE                        30
SB_DFFESR                      82
SB_DFFESS                       1
SB_DFFSR                      272
SB_DFFSS                       12
SB_LUT4                      1476
SB_RAM40_4K                    32
SB_RAM40_4KNW                   4

4.50. Executing CHECK pass (checking for obvious problems).
checking module SOCnexpo..
found and reported 0 problems.

4.51. Executing JSON backend.

Warnings: 2 unique messages, 2 total
End of script. Logfile hash: ae98a675bc
CPU: user 18.04s system 0.60s, MEM: 413.86 MB total, 410.69 MB resident
Yosys 0.9+932 (git sha1 UNKNOWN, i686-linux-gnu-g++ 7.3.0-16ubuntu3 -O3 -DNDEBUG)
Time spent: 36% 7x techmap (6 sec), 14% 22x opt_expr (2 sec), ...
nextpnr-ice40 --hx8k --package cb132 --json hardware.json --asc hardware.asc --pcf icefun.pcf
Info: Importing module SOCnexpo
Info: Rule checker, verifying imported design
Info: Checksum: 0xad268a88

Info: constrained 'led[0]' to bel 'X22/Y33/io1'
Info: constrained 'led[1]' to bel 'X25/Y33/io0'
Info: constrained 'led[2]' to bel 'X13/Y33/io1'
Info: constrained 'led[3]' to bel 'X11/Y33/io0'
Info: constrained 'led[4]' to bel 'X17/Y33/io0'
Info: constrained 'led[5]' to bel 'X14/Y33/io1'
Info: constrained 'led[6]' to bel 'X5/Y33/io0'
Info: constrained 'led[7]' to bel 'X4/Y33/io0'
Info: constrained 'lcol[3]' to bel 'X30/Y33/io1'
Info: constrained 'lcol[2]' to bel 'X27/Y33/io0'
Info: constrained 'lcol[1]' to bel 'X16/Y33/io1'
Info: constrained 'lcol[0]' to bel 'X8/Y33/io1'
Warning: unmatched constraint 'spkp' (on line 13)
Warning: unmatched constraint 'spkm' (on line 14)
Info: constrained 'key[0]' to bel 'X28/Y33/io1'
Info: constrained 'key[1]' to bel 'X11/Y33/io1'
Info: constrained 'key[2]' to bel 'X26/Y33/io0'
Info: constrained 'key[3]' to bel 'X10/Y33/io1'
Info: constrained 'clk12MHz' to bel 'X16/Y0/io1'
Info: constrained 'RXD' to bel 'X0/Y4/io1'
Info: constrained 'TXD' to bel 'X0/Y4/io0'

Info: Packing constants..
Info: Packing IOs..
Info: Packing LUT-FFs..
Info:     1108 LCs used as LUT4 only
Info:      368 LCs used as LUT4 and DFF
Info: Packing non-LUT FFs..
Info:      247 LCs used as DFF only
Info: Packing carries..
Info:       26 LCs used as CARRY only
Info: Packing RAMs..
Info: Placing PLLs..
Info: Packing special functions..
Info: Promoting globals..
Info: promoting clk12MHz$SB_IO_IN (fanout 671)
Info: promoting rst [reset] (fanout 269)
Info: promoting RV32I.DE_funct3[2] [reset] (fanout 27)
Info: promoting RV32I.EM_CSRWrite_SB_LUT4_I2_O [cen] (fanout 32)
Info: promoting $PACKER_GND_NET (fanout 16)
Info: Constraining chains...
Info:       14 LCs used to legalise carry chains.
Info: Checksum: 0x53dfc39a

Info: Annotating ports with timing budgets for target frequency 12.00 MHz
Info: Checksum: 0x5e8c060a

Info: Device utilisation:
Info: 	         ICESTORM_LC:  1765/ 7680    22%
Info: 	        ICESTORM_RAM:    36/   32   112%
Info: 	               SB_IO:    19/  256     7%
Info: 	               SB_GB:     5/    8    62%
Info: 	        ICESTORM_PLL:     0/    2     0%
Info: 	         SB_WARMBOOT:     0/    1     0%

Info: Placed 19 cells based on constraints.
ERROR: Unable to place cell 'RV32I.reg32.WORKREG.0.0.0_RAM', no Bels remaining of type 'ICESTORM_RAM'
2 warnings, 1 error
scons: *** [hardware.asc] Error 255
/home/jfdava/.apio
[Sun Aug 20 00:18:21 2023] Processing icefun
--------------------------------------------------------------------------------
yosys -p "synth_ice40 -json hardware.json" ControladorMatrizLed.v SOCnexpoV8_.v uart.v

/----------------------------------------------------------------------------\
|                                                                            |
|  yosys -- Yosys Open SYnthesis Suite                                       |
|                                                                            |
|  Copyright (C) 2012 - 2019  Clifford Wolf <clifford@clifford.at>           |
|                                                                            |
|  Permission to use, copy, modify, and/or distribute this software for any  |
|  purpose with or without fee is hereby granted, provided that the above    |
|  copyright notice and this permission notice appear in all copies.         |
|                                                                            |
|  THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES  |
|  WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF          |
|  MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR   |
|  ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES    |
|  WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN     |
|  ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF   |
|  OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.            |
|                                                                            |
\----------------------------------------------------------------------------/

Yosys 0.9+932 (git sha1 UNKNOWN, i686-linux-gnu-g++ 7.3.0-16ubuntu3 -O3 -DNDEBUG)


-- Parsing `ControladorMatrizLed.v' using frontend `verilog' --

1. Executing Verilog-2005 frontend: ControladorMatrizLed.v
Parsing Verilog input from `ControladorMatrizLed.v' to AST representation.
Generating RTLIL representation for module `\ControladorMatrizLed'.
Successfully finished Verilog frontend.

-- Parsing `SOCnexpoV8_.v' using frontend `verilog' --

2. Executing Verilog-2005 frontend: SOCnexpoV8_.v
Parsing Verilog input from `SOCnexpoV8_.v' to AST representation.
Generating RTLIL representation for module `\registros'.
Generating RTLIL representation for module `\ALU'.
Generating RTLIL representation for module `\StoretoMEM'.
Generating RTLIL representation for module `\LoadfromMEM'.
Generating RTLIL representation for module `\RV32nexpo'.
Warning: wire '\D_MemtoReg' is assigned in a block at Procesador_V2.0b/RV32nexpo.v:251.
Procesador_V2.0b/RV32nexpo.v:251: Warning: Identifier `\D_MemtoReg' is implicitly declared.
Generating RTLIL representation for module `\SOCnexpo'.
Generating RTLIL representation for module `\memory'.
Successfully finished Verilog frontend.

-- Parsing `uart.v' using frontend `verilog' --

3. Executing Verilog-2005 frontend: uart.v
Parsing Verilog input from `uart.v' to AST representation.
Generating RTLIL representation for module `\BaudClock'.
Generating RTLIL representation for module `\serialTX'.
Generating RTLIL representation for module `\serialRX'.
Successfully finished Verilog frontend.

-- Running command `synth_ice40 -json hardware.json' --

4. Executing SYNTH_ICE40 pass.

4.1. Executing Verilog-2005 frontend: /home/jfdava/.apio/packages/toolchain-yosys/bin/../share/yosys/ice40/cells_sim.v
Parsing Verilog input from `/home/jfdava/.apio/packages/toolchain-yosys/bin/../share/yosys/ice40/cells_sim.v' to AST representation.
Generating RTLIL representation for module `\SB_IO'.
Generating RTLIL representation for module `\SB_GB_IO'.
Generating RTLIL representation for module `\SB_GB'.
Generating RTLIL representation for module `\SB_LUT4'.
Generating RTLIL representation for module `\SB_CARRY'.
Generating RTLIL representation for module `\SB_DFF'.
Generating RTLIL representation for module `\SB_DFFE'.
Generating RTLIL representation for module `\SB_DFFSR'.
Generating RTLIL representation for module `\SB_DFFR'.
Generating RTLIL representation for module `\SB_DFFSS'.
Generating RTLIL representation for module `\SB_DFFS'.
Generating RTLIL representation for module `\SB_DFFESR'.
Generating RTLIL representation for module `\SB_DFFER'.
Generating RTLIL representation for module `\SB_DFFESS'.
Generating RTLIL representation for module `\SB_DFFES'.
Generating RTLIL representation for module `\SB_DFFN'.
Generating RTLIL representation for module `\SB_DFFNE'.
Generating RTLIL representation for module `\SB_DFFNSR'.
Generating RTLIL representation for module `\SB_DFFNR'.
Generating RTLIL representation for module `\SB_DFFNSS'.
Generating RTLIL representation for module `\SB_DFFNS'.
Generating RTLIL representation for module `\SB_DFFNESR'.
Generating RTLIL representation for module `\SB_DFFNER'.
Generating RTLIL representation for module `\SB_DFFNESS'.
Generating RTLIL representation for module `\SB_DFFNES'.
Generating RTLIL representation for module `\SB_RAM40_4K'.
Generating RTLIL representation for module `\SB_RAM40_4KNR'.
Generating RTLIL representation for module `\SB_RAM40_4KNW'.
Generating RTLIL representation for module `\SB_RAM40_4KNRNW'.
Generating RTLIL representation for module `\ICESTORM_LC'.
Generating RTLIL representation for module `\SB_PLL40_CORE'.
Generating RTLIL representation for module `\SB_PLL40_PAD'.
Generating RTLIL representation for module `\SB_PLL40_2_PAD'.
Generating RTLIL representation for module `\SB_PLL40_2F_CORE'.
Generating RTLIL representation for module `\SB_PLL40_2F_PAD'.
Generating RTLIL representation for module `\SB_WARMBOOT'.
Generating RTLIL representation for module `\SB_SPRAM256KA'.
Generating RTLIL representation for module `\SB_HFOSC'.
Generating RTLIL representation for module `\SB_LFOSC'.
Generating RTLIL representation for module `\SB_RGBA_DRV'.
Generating RTLIL representation for module `\SB_LED_DRV_CUR'.
Generating RTLIL representation for module `\SB_RGB_DRV'.
Generating RTLIL representation for module `\SB_I2C'.
Generating RTLIL representation for module `\SB_SPI'.
Generating RTLIL representation for module `\SB_LEDDA_IP'.
Generating RTLIL representation for module `\SB_FILTER_50NS'.
Generating RTLIL representation for module `\SB_IO_I3C'.
Generating RTLIL representation for module `\SB_IO_OD'.
Generating RTLIL representation for module `\SB_MAC16'.
Generating RTLIL representation for module `\ICESTORM_RAM'.
Successfully finished Verilog frontend.

4.2. Executing HIERARCHY pass (managing design hierarchy).

4.2.1. Analyzing design hierarchy..
Top module:  \SOCnexpo
Used module:     \serialRX
Used module:         \BaudClock
Used module:     \serialTX
Used module:     \ControladorMatrizLed
Used module:     \memory
Used module:     \RV32nexpo
Used module:         \LoadfromMEM
Used module:         \StoretoMEM
Used module:         \ALU
Used module:         \registros
Parameter \TAM = 2048

4.2.2. Executing AST frontend in derive mode using pre-parsed AST for module `\memory'.
Parameter \TAM = 2048
Generating RTLIL representation for module `$paramod\memory\TAM=2048'.
Parameter 1 (\BAUD) = 115200

4.2.3. Executing AST frontend in derive mode using pre-parsed AST for module `\BaudClock'.
Parameter 1 (\BAUD) = 115200
Generating RTLIL representation for module `$paramod\BaudClock\BAUD=115200'.
Parameter 1 (\BAUD) = 115200
Found cached RTLIL representation for module `$paramod\BaudClock\BAUD=115200'.

4.2.4. Analyzing design hierarchy..
Top module:  \SOCnexpo
Used module:     \serialRX
Used module:         $paramod\BaudClock\BAUD=115200
Used module:     \serialTX
Used module:     \ControladorMatrizLed
Used module:     $paramod\memory\TAM=2048
Used module:     \RV32nexpo
Used module:         \LoadfromMEM
Used module:         \StoretoMEM
Used module:         \ALU
Used module:         \registros

4.2.5. Analyzing design hierarchy..
Top module:  \SOCnexpo
Used module:     \serialRX
Used module:         $paramod\BaudClock\BAUD=115200
Used module:     \serialTX
Used module:     \ControladorMatrizLed
Used module:     $paramod\memory\TAM=2048
Used module:     \RV32nexpo
Used module:         \LoadfromMEM
Used module:         \StoretoMEM
Used module:         \ALU
Used module:         \registros
Removing unused module `\BaudClock'.
Removing unused module `\memory'.
Removed 2 unused modules.

4.3. Executing PROC pass (convert processes to netlists).

4.3.1. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Removing empty process `$paramod\memory\TAM=2048.$proc$SOCnexpoV8_.v:257$598'.
Removing empty process `SOCnexpo.$proc$SOCnexpoV8_.v:41$359'.
Cleaned up 0 empty switches.

4.3.2. Executing PROC_RMDEAD pass (remove dead branches from decision trees).
Marked 1 switch rules as full_case in process $proc$uart.v:202$426 in module serialRX.
Marked 1 switch rules as full_case in process $proc$uart.v:169$420 in module serialRX.
Marked 1 switch rules as full_case in process $proc$uart.v:156$419 in module serialRX.
Marked 1 switch rules as full_case in process $proc$uart.v:94$404 in module serialTX.
Marked 1 switch rules as full_case in process $proc$uart.v:81$402 in module serialTX.
Marked 1 switch rules as full_case in process $proc$uart.v:72$401 in module serialTX.
Marked 1 switch rules as full_case in process $proc$uart.v:35$601 in module $paramod\BaudClock\BAUD=115200.
Marked 2 switch rules as full_case in process $proc$SOCnexpoV8_.v:209$354 in module SOCnexpo.
Marked 2 switch rules as full_case in process $proc$SOCnexpoV8_.v:187$353 in module SOCnexpo.
Marked 1 switch rules as full_case in process $proc$SOCnexpoV8_.v:150$351 in module SOCnexpo.
Marked 3 switch rules as full_case in process $proc$SOCnexpoV8_.v:129$350 in module SOCnexpo.
Removed 1 dead cases from process $proc$SOCnexpoV8_.v:83$342 in module SOCnexpo.
Marked 1 switch rules as full_case in process $proc$SOCnexpoV8_.v:83$342 in module SOCnexpo.
Marked 1 switch rules as full_case in process $proc$Procesador_V2.0b/RV32nexpo.v:487$318 in module RV32nexpo.
Marked 1 switch rules as full_case in process $proc$Procesador_V2.0b/RV32nexpo.v:478$316 in module RV32nexpo.
Marked 1 switch rules as full_case in process $proc$Procesador_V2.0b/RV32nexpo.v:396$307 in module RV32nexpo.
Marked 2 switch rules as full_case in process $proc$Procesador_V2.0b/RV32nexpo.v:208$287 in module RV32nexpo.
Marked 1 switch rules as full_case in process $proc$Procesador_V2.0b/RV32nexpo.v:168$283 in module RV32nexpo.
Marked 1 switch rules as full_case in process $proc$Procesador_V2.0b/RV32nexpo.v:104$265 in module RV32nexpo.
Marked 1 switch rules as full_case in process $proc$Procesador_V2.0b/RV32nexpo.v:58$262 in module RV32nexpo.
Marked 2 switch rules as full_case in process $proc$ControladorMatrizLed.v:41$4 in module ControladorMatrizLed.
Marked 1 switch rules as full_case in process $proc$ControladorMatrizLed.v:24$1 in module ControladorMatrizLed.
Removed a total of 1 dead cases.

4.3.3. Executing PROC_PRUNE pass (remove redundant assignments in processes).
Removed 9 redundant assignments.
Promoted 162 assignments to connections.

4.3.4. Executing PROC_INIT pass (extract init attributes).
Found init rule in `\serialRX.$proc$uart.v:226$439'.
Set init value: \rcv = 1'0
Found init rule in `\serialRX.$proc$uart.v:219$438'.
Set init value: \data = 8'00000000
Found init rule in `\serialRX.$proc$uart.v:201$437'.
Set init value: \cont = 5'00000
Found init rule in `\serialRX.$proc$uart.v:190$436'.
Set init value: \sr = 9'000000000
Found init rule in `\serialRX.$proc$uart.v:167$435'.
Set init value: \div2counter = 7'0000000
Found init rule in `\serialRX.$proc$uart.v:154$434'.
Set init value: \state = 1'0
Found init rule in `\serialRX.$proc$uart.v:146$433'.
Set init value: \q_t0 = 1'0
Found init rule in `\serialTX.$proc$uart.v:107$413'.
Set init value: \done = 1'0
Found init rule in `\serialTX.$proc$uart.v:93$412'.
Set init value: \bits = 4'0000
Found init rule in `\serialTX.$proc$uart.v:88$411'.
Set init value: \TX = 1'1
Found init rule in `\serialTX.$proc$uart.v:80$410'.
Set init value: \q = 9'111111111
Found init rule in `\serialTX.$proc$uart.v:64$409'.
Set init value: \q_re = 1'0
Found init rule in `\serialTX.$proc$uart.v:55$408'.
Set init value: \state = 1'0
Found init rule in `$paramod\BaudClock\BAUD=115200.$proc$uart.v:29$604'.
Set init value: \divcounter = 7'0000000
Found init rule in `\SOCnexpo.$proc$SOCnexpoV8_.v:149$360'.
Set init value: \leds_en = 1'1
Found init rule in `\SOCnexpo.$proc$SOCnexpoV8_.v:27$358'.
Set init value: \Espera = 8'00000000
Found init rule in `\SOCnexpo.$proc$SOCnexpoV8_.v:26$357'.
Set init value: \rst = 1'1
Found init rule in `\RV32nexpo.$proc$Procesador_V2.0b/RV32nexpo.v:122$323'.
Set init value: \FD_nop = 1'1
Found init rule in `\RV32nexpo.$proc$Procesador_V2.0b/RV32nexpo.v:96$322'.
Set init value: \F_pc = 0
Set init value: \FD_pc = 0
Found init rule in `\ControladorMatrizLed.$proc$ControladorMatrizLed.v:23$12'.
Set init value: \timer = 12'000000000000

4.3.5. Executing PROC_ARST pass (detect async resets in processes).

4.3.6. Executing PROC_MUX pass (convert decision trees to multiplexers).
Creating decoders for process `\serialRX.$proc$uart.v:226$439'.
Creating decoders for process `\serialRX.$proc$uart.v:219$438'.
Creating decoders for process `\serialRX.$proc$uart.v:201$437'.
Creating decoders for process `\serialRX.$proc$uart.v:190$436'.
Creating decoders for process `\serialRX.$proc$uart.v:167$435'.
Creating decoders for process `\serialRX.$proc$uart.v:154$434'.
Creating decoders for process `\serialRX.$proc$uart.v:146$433'.
Creating decoders for process `\serialRX.$proc$uart.v:227$432'.
Creating decoders for process `\serialRX.$proc$uart.v:221$431'.
1/1: $0\data[7:0]
Creating decoders for process `\serialRX.$proc$uart.v:202$426'.
1/1: $0\cont[4:0]
Creating decoders for process `\serialRX.$proc$uart.v:191$424'.
1/1: $0\sr[8:0]
Creating decoders for process `\serialRX.$proc$uart.v:169$420'.
1/1: $0\div2counter[6:0]
Creating decoders for process `\serialRX.$proc$uart.v:156$419'.
1/1: $0\state[0:0]
Creating decoders for process `\serialRX.$proc$uart.v:147$416'.
Creating decoders for process `\serialRX.$proc$uart.v:142$415'.
Creating decoders for process `\serialRX.$proc$uart.v:139$414'.
Creating decoders for process `\serialTX.$proc$uart.v:107$413'.
Creating decoders for process `\serialTX.$proc$uart.v:93$412'.
Creating decoders for process `\serialTX.$proc$uart.v:88$411'.
Creating decoders for process `\serialTX.$proc$uart.v:80$410'.
Creating decoders for process `\serialTX.$proc$uart.v:64$409'.
Creating decoders for process `\serialTX.$proc$uart.v:55$408'.
Creating decoders for process `\serialTX.$proc$uart.v:108$407'.
Creating decoders for process `\serialTX.$proc$uart.v:94$404'.
1/1: $0\bits[3:0]
Creating decoders for process `\serialTX.$proc$uart.v:89$403'.
Creating decoders for process `\serialTX.$proc$uart.v:81$402'.
1/1: $0\q[8:0]
Creating decoders for process `\serialTX.$proc$uart.v:72$401'.
1/1: $0\state[0:0]
Creating decoders for process `\serialTX.$proc$uart.v:66$398'.
Creating decoders for process `$paramod\BaudClock\BAUD=115200.$proc$uart.v:29$604'.
Creating decoders for process `$paramod\BaudClock\BAUD=115200.$proc$uart.v:35$601'.
1/1: $0\divcounter[6:0]
Creating decoders for process `$paramod\memory\TAM=2048.$proc$SOCnexpoV8_.v:261$579'.
1/12: $0$memwr$\memArray$SOCnexpoV8_.v:263$568_EN[31:0]$582
2/12: $0$memwr$\memArray$SOCnexpoV8_.v:263$568_DATA[31:0]$581
3/12: $0$memwr$\memArray$SOCnexpoV8_.v:263$568_ADDR[10:0]$580
4/12: $0$memwr$\memArray$SOCnexpoV8_.v:264$569_EN[31:0]$585
5/12: $0$memwr$\memArray$SOCnexpoV8_.v:264$569_DATA[31:0]$584
6/12: $0$memwr$\memArray$SOCnexpoV8_.v:264$569_ADDR[10:0]$583
7/12: $0$memwr$\memArray$SOCnexpoV8_.v:265$570_EN[31:0]$588
8/12: $0$memwr$\memArray$SOCnexpoV8_.v:265$570_DATA[31:0]$587
9/12: $0$memwr$\memArray$SOCnexpoV8_.v:265$570_ADDR[10:0]$586
10/12: $0$memwr$\memArray$SOCnexpoV8_.v:266$571_EN[31:0]$591
11/12: $0$memwr$\memArray$SOCnexpoV8_.v:266$571_DATA[31:0]$590
12/12: $0$memwr$\memArray$SOCnexpoV8_.v:266$571_ADDR[10:0]$589
Creating decoders for process `\SOCnexpo.$proc$SOCnexpoV8_.v:149$360'.
Creating decoders for process `\SOCnexpo.$proc$SOCnexpoV8_.v:27$358'.
Creating decoders for process `\SOCnexpo.$proc$SOCnexpoV8_.v:26$357'.
Creating decoders for process `\SOCnexpo.$proc$SOCnexpoV8_.v:209$354'.
1/1: $0\rx_readed[0:0]
Creating decoders for process `\SOCnexpo.$proc$SOCnexpoV8_.v:187$353'.
1/1: $0\tx_ready[0:0]
Creating decoders for process `\SOCnexpo.$proc$SOCnexpoV8_.v:150$351'.
1/1: $0\leds_en[0:0]
Creating decoders for process `\SOCnexpo.$proc$SOCnexpoV8_.v:129$350'.
1/4: $0\leds4[7:0]
2/4: $0\leds1[7:0]
3/4: $0\leds3[7:0]
4/4: $0\leds2[7:0]
Creating decoders for process `\SOCnexpo.$proc$SOCnexpoV8_.v:83$342'.
1/1: $1\palabra[31:0]
Creating decoders for process `\SOCnexpo.$proc$SOCnexpoV8_.v:46$328'.
Creating decoders for process `\SOCnexpo.$proc$SOCnexpoV8_.v:30$326'.
1/1: $0\rst[0:0]
Creating decoders for process `\SOCnexpo.$proc$SOCnexpoV8_.v:28$324'.
Creating decoders for process `\RV32nexpo.$proc$Procesador_V2.0b/RV32nexpo.v:122$323'.
Creating decoders for process `\RV32nexpo.$proc$Procesador_V2.0b/RV32nexpo.v:96$322'.
Creating decoders for process `\RV32nexpo.$proc$Procesador_V2.0b/RV32nexpo.v:487$318'.
1/2: $0\instret[63:0]
2/2: $0\cycle[63:0]
Creating decoders for process `\RV32nexpo.$proc$Procesador_V2.0b/RV32nexpo.v:478$316'.
1/1: $0\PWM_[31:0]
Creating decoders for process `\RV32nexpo.$proc$Procesador_V2.0b/RV32nexpo.v:438$313'.
Creating decoders for process `\RV32nexpo.$proc$Procesador_V2.0b/RV32nexpo.v:396$307'.
1/1: $1\M_CSRData[31:0]
Creating decoders for process `\RV32nexpo.$proc$Procesador_V2.0b/RV32nexpo.v:359$304'.
Creating decoders for process `\RV32nexpo.$proc$Procesador_V2.0b/RV32nexpo.v:288$293'.
Creating decoders for process `\RV32nexpo.$proc$Procesador_V2.0b/RV32nexpo.v:208$287'.
1/12: $2\D_CSRRead[0:0]
2/12: $2\D_CSRWrite[0:0]
3/12: $1\D_RegWrite[0:0]
4/12: $1\D_ALUSrc2[0:0]
5/12: $1\D_MemtoReg[0:0]
6/12: $1\D_ALUFun[0:0]
7/12: $1\D_halt[0:0]
8/12: $1\D_error[0:0]
9/12: $1\D_CSRRead[0:0]
10/12: $1\D_CSRWrite[0:0]
11/12: $1\D_funQual[0:0]
12/12: $1\D_ALUSrc1[0:0]
Creating decoders for process `\RV32nexpo.$proc$Procesador_V2.0b/RV32nexpo.v:168$283'.
1/1: $1\D_imm[31:0]
Creating decoders for process `\RV32nexpo.$proc$Procesador_V2.0b/RV32nexpo.v:104$265'.
1/3: $0\FD_nop[0:0]
2/3: $0\FD_pc[31:0]
3/3: $0\F_pc[31:0]
Creating decoders for process `\RV32nexpo.$proc$Procesador_V2.0b/RV32nexpo.v:63$263'.
Creating decoders for process `\RV32nexpo.$proc$Procesador_V2.0b/RV32nexpo.v:58$262'.
1/1: $0\state[2:0]
Creating decoders for process `\ALU.$proc$Procesador_V2.0b/ALU.v:22$239'.
Creating decoders for process `\ALU.$proc$Procesador_V2.0b/ALU.v:67$224'.
Creating decoders for process `\ALU.$proc$Procesador_V2.0b/ALU.v:54$195'.
Creating decoders for process `\registros.$proc$Procesador_V2.0b/registros_32.v:28$117'.
Creating decoders for process `\registros.$proc$Procesador_V2.0b/registros_32.v:41$80'.
1/3: $0$memwr$\WORKREG$Procesador_V2.0b/registros_32.v:43$77_EN[31:0]$83
2/3: $0$memwr$\WORKREG$Procesador_V2.0b/registros_32.v:43$77_DATA[31:0]$82
3/3: $0$memwr$\WORKREG$Procesador_V2.0b/registros_32.v:43$77_ADDR[4:0]$81
Creating decoders for process `\ControladorMatrizLed.$proc$ControladorMatrizLed.v:23$12'.
Creating decoders for process `\ControladorMatrizLed.$proc$ControladorMatrizLed.v:21$11'.
Creating decoders for process `\ControladorMatrizLed.$proc$ControladorMatrizLed.v:41$4'.
1/2: $0\row[7:0]
2/2: $0\act_row[3:0]
Creating decoders for process `\ControladorMatrizLed.$proc$ControladorMatrizLed.v:24$1'.
1/1: $1\timer[11:0]

4.3.7. Executing PROC_DLATCH pass (convert process syncs to latches).
No latch inferred for signal `\SOCnexpo.\palabra' from process `\SOCnexpo.$proc$SOCnexpoV8_.v:83$342'.
No latch inferred for signal `\RV32nexpo.\M_CSRData' from process `\RV32nexpo.$proc$Procesador_V2.0b/RV32nexpo.v:396$307'.
No latch inferred for signal `\RV32nexpo.\D_RegWrite' from process `\RV32nexpo.$proc$Procesador_V2.0b/RV32nexpo.v:208$287'.
No latch inferred for signal `\RV32nexpo.\D_ALUSrc1' from process `\RV32nexpo.$proc$Procesador_V2.0b/RV32nexpo.v:208$287'.
No latch inferred for signal `\RV32nexpo.\D_ALUSrc2' from process `\RV32nexpo.$proc$Procesador_V2.0b/RV32nexpo.v:208$287'.
No latch inferred for signal `\RV32nexpo.\D_funQual' from process `\RV32nexpo.$proc$Procesador_V2.0b/RV32nexpo.v:208$287'.
No latch inferred for signal `\RV32nexpo.\D_CSRWrite' from process `\RV32nexpo.$proc$Procesador_V2.0b/RV32nexpo.v:208$287'.
No latch inferred for signal `\RV32nexpo.\D_CSRRead' from process `\RV32nexpo.$proc$Procesador_V2.0b/RV32nexpo.v:208$287'.
No latch inferred for signal `\RV32nexpo.\D_error' from process `\RV32nexpo.$proc$Procesador_V2.0b/RV32nexpo.v:208$287'.
No latch inferred for signal `\RV32nexpo.\D_halt' from process `\RV32nexpo.$proc$Procesador_V2.0b/RV32nexpo.v:208$287'.
No latch inferred for signal `\RV32nexpo.\D_ALUFun' from process `\RV32nexpo.$proc$Procesador_V2.0b/RV32nexpo.v:208$287'.
Latch inferred for signal `\RV32nexpo.\D_MemtoReg' from process `\RV32nexpo.$proc$Procesador_V2.0b/RV32nexpo.v:208$287': $auto$proc_dlatch.cc:417:proc_dlatch$1229
No latch inferred for signal `\RV32nexpo.\D_imm' from process `\RV32nexpo.$proc$Procesador_V2.0b/RV32nexpo.v:168$283'.
No latch inferred for signal `\RV32nexpo.\nextState' from process `\RV32nexpo.$proc$Procesador_V2.0b/RV32nexpo.v:63$263'.
No latch inferred for signal `\RV32nexpo.\loadpcNext' from process `\RV32nexpo.$proc$Procesador_V2.0b/RV32nexpo.v:63$263'.
No latch inferred for signal `\ALU.$func$\flip32$Procesador_V2.0b/ALU.v:37$182$\flip32' from process `\ALU.$proc$Procesador_V2.0b/ALU.v:22$239'.
No latch inferred for signal `\ALU.$func$\flip32$Procesador_V2.0b/ALU.v:37$184$\flip32' from process `\ALU.$proc$Procesador_V2.0b/ALU.v:22$239'.
No latch inferred for signal `\ALU.$func$\flip32$Procesador_V2.0b/ALU.v:37$184$\x' from process `\ALU.$proc$Procesador_V2.0b/ALU.v:22$239'.
No latch inferred for signal `\ALU.\branch' from process `\ALU.$proc$Procesador_V2.0b/ALU.v:67$224'.
No latch inferred for signal `\ALU.\ALUout' from process `\ALU.$proc$Procesador_V2.0b/ALU.v:54$195'.
No latch inferred for signal `\ALU.$func$\flip32$Procesador_V2.0b/ALU.v:57$183$\flip32' from process `\ALU.$proc$Procesador_V2.0b/ALU.v:54$195'.
No latch inferred for signal `\ALU.$func$\flip32$Procesador_V2.0b/ALU.v:57$183$\x' from process `\ALU.$proc$Procesador_V2.0b/ALU.v:54$195'.
No latch inferred for signal `\registros.\i' from process `\registros.$proc$Procesador_V2.0b/registros_32.v:28$117'.
No latch inferred for signal `\registros.$memwr$\WORKREG$Procesador_V2.0b/registros_32.v:30$45_ADDR' from process `\registros.$proc$Procesador_V2.0b/registros_32.v:28$117'.
No latch inferred for signal `\registros.$memwr$\WORKREG$Procesador_V2.0b/registros_32.v:30$45_DATA' from process `\registros.$proc$Procesador_V2.0b/registros_32.v:28$117'.
No latch inferred for signal `\registros.$memwr$\WORKREG$Procesador_V2.0b/registros_32.v:30$46_ADDR' from process `\registros.$proc$Procesador_V2.0b/registros_32.v:28$117'.
No latch inferred for signal `\registros.$memwr$\WORKREG$Procesador_V2.0b/registros_32.v:30$46_DATA' from process `\registros.$proc$Procesador_V2.0b/registros_32.v:28$117'.
No latch inferred for signal `\registros.$memwr$\WORKREG$Procesador_V2.0b/registros_32.v:30$47_ADDR' from process `\registros.$proc$Procesador_V2.0b/registros_32.v:28$117'.
No latch inferred for signal `\registros.$memwr$\WORKREG$Procesador_V2.0b/registros_32.v:30$47_DATA' from process `\registros.$proc$Procesador_V2.0b/registros_32.v:28$117'.
No latch inferred for signal `\registros.$memwr$\WORKREG$Procesador_V2.0b/registros_32.v:30$48_ADDR' from process `\registros.$proc$Procesador_V2.0b/registros_32.v:28$117'.
No latch inferred for signal `\registros.$memwr$\WORKREG$Procesador_V2.0b/registros_32.v:30$48_DATA' from process `\registros.$proc$Procesador_V2.0b/registros_32.v:28$117'.
No latch inferred for signal `\registros.$memwr$\WORKREG$Procesador_V2.0b/registros_32.v:30$49_ADDR' from process `\registros.$proc$Procesador_V2.0b/registros_32.v:28$117'.
No latch inferred for signal `\registros.$memwr$\WORKREG$Procesador_V2.0b/registros_32.v:30$49_DATA' from process `\registros.$proc$Procesador_V2.0b/registros_32.v:28$117'.
No latch inferred for signal `\registros.$memwr$\WORKREG$Procesador_V2.0b/registros_32.v:30$50_ADDR' from process `\registros.$proc$Procesador_V2.0b/registros_32.v:28$117'.
No latch inferred for signal `\registros.$memwr$\WORKREG$Procesador_V2.0b/registros_32.v:30$50_DATA' from process `\registros.$proc$Procesador_V2.0b/registros_32.v:28$117'.
No latch inferred for signal `\registros.$memwr$\WORKREG$Procesador_V2.0b/registros_32.v:30$51_ADDR' from process `\registros.$proc$Procesador_V2.0b/registros_32.v:28$117'.
No latch inferred for signal `\registros.$memwr$\WORKREG$Procesador_V2.0b/registros_32.v:30$51_DATA' from process `\registros.$proc$Procesador_V2.0b/registros_32.v:28$117'.
No latch inferred for signal `\registros.$memwr$\WORKREG$Procesador_V2.0b/registros_32.v:30$52_ADDR' from process `\registros.$proc$Procesador_V2.0b/registros_32.v:28$117'.
No latch inferred for signal `\registros.$memwr$\WORKREG$Procesador_V2.0b/registros_32.v:30$52_DATA' from process `\registros.$proc$Procesador_V2.0b/registros_32.v:28$117'.
No latch inferred for signal `\registros.$memwr$\WORKREG$Procesador_V2.0b/registros_32.v:30$53_ADDR' from process `\registros.$proc$Procesador_V2.0b/registros_32.v:28$117'.
No latch inferred for signal `\registros.$memwr$\WORKREG$Procesador_V2.0b/registros_32.v:30$53_DATA' from process `\registros.$proc$Procesador_V2.0b/registros_32.v:28$117'.
No latch inferred for signal `\registros.$memwr$\WORKREG$Procesador_V2.0b/registros_32.v:30$54_ADDR' from process `\registros.$proc$Procesador_V2.0b/registros_32.v:28$117'.
No latch inferred for signal `\registros.$memwr$\WORKREG$Procesador_V2.0b/registros_32.v:30$54_DATA' from process `\registros.$proc$Procesador_V2.0b/registros_32.v:28$117'.
No latch inferred for signal `\registros.$memwr$\WORKREG$Procesador_V2.0b/registros_32.v:30$55_ADDR' from process `\registros.$proc$Procesador_V2.0b/registros_32.v:28$117'.
No latch inferred for signal `\registros.$memwr$\WORKREG$Procesador_V2.0b/registros_32.v:30$55_DATA' from process `\registros.$proc$Procesador_V2.0b/registros_32.v:28$117'.
No latch inferred for signal `\registros.$memwr$\WORKREG$Procesador_V2.0b/registros_32.v:30$56_ADDR' from process `\registros.$proc$Procesador_V2.0b/registros_32.v:28$117'.
No latch inferred for signal `\registros.$memwr$\WORKREG$Procesador_V2.0b/registros_32.v:30$56_DATA' from process `\registros.$proc$Procesador_V2.0b/registros_32.v:28$117'.
No latch inferred for signal `\registros.$memwr$\WORKREG$Procesador_V2.0b/registros_32.v:30$57_ADDR' from process `\registros.$proc$Procesador_V2.0b/registros_32.v:28$117'.
No latch inferred for signal `\registros.$memwr$\WORKREG$Procesador_V2.0b/registros_32.v:30$57_DATA' from process `\registros.$proc$Procesador_V2.0b/registros_32.v:28$117'.
No latch inferred for signal `\registros.$memwr$\WORKREG$Procesador_V2.0b/registros_32.v:30$58_ADDR' from process `\registros.$proc$Procesador_V2.0b/registros_32.v:28$117'.
No latch inferred for signal `\registros.$memwr$\WORKREG$Procesador_V2.0b/registros_32.v:30$58_DATA' from process `\registros.$proc$Procesador_V2.0b/registros_32.v:28$117'.
No latch inferred for signal `\registros.$memwr$\WORKREG$Procesador_V2.0b/registros_32.v:30$59_ADDR' from process `\registros.$proc$Procesador_V2.0b/registros_32.v:28$117'.
No latch inferred for signal `\registros.$memwr$\WORKREG$Procesador_V2.0b/registros_32.v:30$59_DATA' from process `\registros.$proc$Procesador_V2.0b/registros_32.v:28$117'.
No latch inferred for signal `\registros.$memwr$\WORKREG$Procesador_V2.0b/registros_32.v:30$60_ADDR' from process `\registros.$proc$Procesador_V2.0b/registros_32.v:28$117'.
No latch inferred for signal `\registros.$memwr$\WORKREG$Procesador_V2.0b/registros_32.v:30$60_DATA' from process `\registros.$proc$Procesador_V2.0b/registros_32.v:28$117'.
No latch inferred for signal `\registros.$memwr$\WORKREG$Procesador_V2.0b/registros_32.v:30$61_ADDR' from process `\registros.$proc$Procesador_V2.0b/registros_32.v:28$117'.
No latch inferred for signal `\registros.$memwr$\WORKREG$Procesador_V2.0b/registros_32.v:30$61_DATA' from process `\registros.$proc$Procesador_V2.0b/registros_32.v:28$117'.
No latch inferred for signal `\registros.$memwr$\WORKREG$Procesador_V2.0b/registros_32.v:30$62_ADDR' from process `\registros.$proc$Procesador_V2.0b/registros_32.v:28$117'.
No latch inferred for signal `\registros.$memwr$\WORKREG$Procesador_V2.0b/registros_32.v:30$62_DATA' from process `\registros.$proc$Procesador_V2.0b/registros_32.v:28$117'.
No latch inferred for signal `\registros.$memwr$\WORKREG$Procesador_V2.0b/registros_32.v:30$63_ADDR' from process `\registros.$proc$Procesador_V2.0b/registros_32.v:28$117'.
No latch inferred for signal `\registros.$memwr$\WORKREG$Procesador_V2.0b/registros_32.v:30$63_DATA' from process `\registros.$proc$Procesador_V2.0b/registros_32.v:28$117'.
No latch inferred for signal `\registros.$memwr$\WORKREG$Procesador_V2.0b/registros_32.v:30$64_ADDR' from process `\registros.$proc$Procesador_V2.0b/registros_32.v:28$117'.
No latch inferred for signal `\registros.$memwr$\WORKREG$Procesador_V2.0b/registros_32.v:30$64_DATA' from process `\registros.$proc$Procesador_V2.0b/registros_32.v:28$117'.
No latch inferred for signal `\registros.$memwr$\WORKREG$Procesador_V2.0b/registros_32.v:30$65_ADDR' from process `\registros.$proc$Procesador_V2.0b/registros_32.v:28$117'.
No latch inferred for signal `\registros.$memwr$\WORKREG$Procesador_V2.0b/registros_32.v:30$65_DATA' from process `\registros.$proc$Procesador_V2.0b/registros_32.v:28$117'.
No latch inferred for signal `\registros.$memwr$\WORKREG$Procesador_V2.0b/registros_32.v:30$66_ADDR' from process `\registros.$proc$Procesador_V2.0b/registros_32.v:28$117'.
No latch inferred for signal `\registros.$memwr$\WORKREG$Procesador_V2.0b/registros_32.v:30$66_DATA' from process `\registros.$proc$Procesador_V2.0b/registros_32.v:28$117'.
No latch inferred for signal `\registros.$memwr$\WORKREG$Procesador_V2.0b/registros_32.v:30$67_ADDR' from process `\registros.$proc$Procesador_V2.0b/registros_32.v:28$117'.
No latch inferred for signal `\registros.$memwr$\WORKREG$Procesador_V2.0b/registros_32.v:30$67_DATA' from process `\registros.$proc$Procesador_V2.0b/registros_32.v:28$117'.
No latch inferred for signal `\registros.$memwr$\WORKREG$Procesador_V2.0b/registros_32.v:30$68_ADDR' from process `\registros.$proc$Procesador_V2.0b/registros_32.v:28$117'.
No latch inferred for signal `\registros.$memwr$\WORKREG$Procesador_V2.0b/registros_32.v:30$68_DATA' from process `\registros.$proc$Procesador_V2.0b/registros_32.v:28$117'.
No latch inferred for signal `\registros.$memwr$\WORKREG$Procesador_V2.0b/registros_32.v:30$69_ADDR' from process `\registros.$proc$Procesador_V2.0b/registros_32.v:28$117'.
No latch inferred for signal `\registros.$memwr$\WORKREG$Procesador_V2.0b/registros_32.v:30$69_DATA' from process `\registros.$proc$Procesador_V2.0b/registros_32.v:28$117'.
No latch inferred for signal `\registros.$memwr$\WORKREG$Procesador_V2.0b/registros_32.v:30$70_ADDR' from process `\registros.$proc$Procesador_V2.0b/registros_32.v:28$117'.
No latch inferred for signal `\registros.$memwr$\WORKREG$Procesador_V2.0b/registros_32.v:30$70_DATA' from process `\registros.$proc$Procesador_V2.0b/registros_32.v:28$117'.
No latch inferred for signal `\registros.$memwr$\WORKREG$Procesador_V2.0b/registros_32.v:30$71_ADDR' from process `\registros.$proc$Procesador_V2.0b/registros_32.v:28$117'.
No latch inferred for signal `\registros.$memwr$\WORKREG$Procesador_V2.0b/registros_32.v:30$71_DATA' from process `\registros.$proc$Procesador_V2.0b/registros_32.v:28$117'.
No latch inferred for signal `\registros.$memwr$\WORKREG$Procesador_V2.0b/registros_32.v:30$72_ADDR' from process `\registros.$proc$Procesador_V2.0b/registros_32.v:28$117'.
No latch inferred for signal `\registros.$memwr$\WORKREG$Procesador_V2.0b/registros_32.v:30$72_DATA' from process `\registros.$proc$Procesador_V2.0b/registros_32.v:28$117'.
No latch inferred for signal `\registros.$memwr$\WORKREG$Procesador_V2.0b/registros_32.v:30$73_ADDR' from process `\registros.$proc$Procesador_V2.0b/registros_32.v:28$117'.
No latch inferred for signal `\registros.$memwr$\WORKREG$Procesador_V2.0b/registros_32.v:30$73_DATA' from process `\registros.$proc$Procesador_V2.0b/registros_32.v:28$117'.
No latch inferred for signal `\registros.$memwr$\WORKREG$Procesador_V2.0b/registros_32.v:30$74_ADDR' from process `\registros.$proc$Procesador_V2.0b/registros_32.v:28$117'.
No latch inferred for signal `\registros.$memwr$\WORKREG$Procesador_V2.0b/registros_32.v:30$74_DATA' from process `\registros.$proc$Procesador_V2.0b/registros_32.v:28$117'.
No latch inferred for signal `\registros.$memwr$\WORKREG$Procesador_V2.0b/registros_32.v:30$75_ADDR' from process `\registros.$proc$Procesador_V2.0b/registros_32.v:28$117'.
No latch inferred for signal `\registros.$memwr$\WORKREG$Procesador_V2.0b/registros_32.v:30$75_DATA' from process `\registros.$proc$Procesador_V2.0b/registros_32.v:28$117'.
No latch inferred for signal `\registros.$memwr$\WORKREG$Procesador_V2.0b/registros_32.v:30$76_ADDR' from process `\registros.$proc$Procesador_V2.0b/registros_32.v:28$117'.
No latch inferred for signal `\registros.$memwr$\WORKREG$Procesador_V2.0b/registros_32.v:30$76_DATA' from process `\registros.$proc$Procesador_V2.0b/registros_32.v:28$117'.
No latch inferred for signal `\ControladorMatrizLed.\pwm' from process `\ControladorMatrizLed.$proc$ControladorMatrizLed.v:21$11'.

4.3.8. Executing PROC_DFF pass (convert process syncs to FFs).
Creating register for signal `\serialRX.\rcv' using process `\serialRX.$proc$uart.v:227$432'.
created $dff cell `$procdff$1230' with positive edge clock.
Creating register for signal `\serialRX.\data' using process `\serialRX.$proc$uart.v:221$431'.
created $dff cell `$procdff$1231' with positive edge clock.
Creating register for signal `\serialRX.\cont' using process `\serialRX.$proc$uart.v:202$426'.
created $dff cell `$procdff$1232' with positive edge clock.
Creating register for signal `\serialRX.\sr' using process `\serialRX.$proc$uart.v:191$424'.
created $dff cell `$procdff$1233' with positive edge clock.
Creating register for signal `\serialRX.\div2counter' using process `\serialRX.$proc$uart.v:169$420'.
created $dff cell `$procdff$1234' with positive edge clock.
Creating register for signal `\serialRX.\state' using process `\serialRX.$proc$uart.v:156$419'.
created $dff cell `$procdff$1235' with positive edge clock.
Creating register for signal `\serialRX.\q_t0' using process `\serialRX.$proc$uart.v:147$416'.
created $dff cell `$procdff$1236' with positive edge clock.
Creating register for signal `\serialRX.\din' using process `\serialRX.$proc$uart.v:142$415'.
created $dff cell `$procdff$1237' with positive edge clock.
Creating register for signal `\serialRX.\d1' using process `\serialRX.$proc$uart.v:139$414'.
created $dff cell `$procdff$1238' with positive edge clock.
Creating register for signal `\serialTX.\done' using process `\serialTX.$proc$uart.v:108$407'.
created $dff cell `$procdff$1239' with positive edge clock.
Creating register for signal `\serialTX.\bits' using process `\serialTX.$proc$uart.v:94$404'.
created $dff cell `$procdff$1240' with positive edge clock.
Creating register for signal `\serialTX.\TX' using process `\serialTX.$proc$uart.v:89$403'.
created $dff cell `$procdff$1241' with positive edge clock.
Creating register for signal `\serialTX.\q' using process `\serialTX.$proc$uart.v:81$402'.
created $dff cell `$procdff$1242' with positive edge clock.
Creating register for signal `\serialTX.\state' using process `\serialTX.$proc$uart.v:72$401'.
created $dff cell `$procdff$1243' with positive edge clock.
Creating register for signal `\serialTX.\q_re' using process `\serialTX.$proc$uart.v:66$398'.
created $dff cell `$procdff$1244' with positive edge clock.
Creating register for signal `$paramod\BaudClock\BAUD=115200.\divcounter' using process `$paramod\BaudClock\BAUD=115200.$proc$uart.v:35$601'.
created $dff cell `$procdff$1245' with positive edge clock.
Creating register for signal `$paramod\memory\TAM=2048.\DataOut' using process `$paramod\memory\TAM=2048.$proc$SOCnexpoV8_.v:261$579'.
created $dff cell `$procdff$1246' with positive edge clock.
Creating register for signal `$paramod\memory\TAM=2048.$memwr$\memArray$SOCnexpoV8_.v:263$568_ADDR' using process `$paramod\memory\TAM=2048.$proc$SOCnexpoV8_.v:261$579'.
created $dff cell `$procdff$1247' with positive edge clock.
Creating register for signal `$paramod\memory\TAM=2048.$memwr$\memArray$SOCnexpoV8_.v:263$568_DATA' using process `$paramod\memory\TAM=2048.$proc$SOCnexpoV8_.v:261$579'.
created $dff cell `$procdff$1248' with positive edge clock.
Creating register for signal `$paramod\memory\TAM=2048.$memwr$\memArray$SOCnexpoV8_.v:263$568_EN' using process `$paramod\memory\TAM=2048.$proc$SOCnexpoV8_.v:261$579'.
created $dff cell `$procdff$1249' with positive edge clock.
Creating register for signal `$paramod\memory\TAM=2048.$memwr$\memArray$SOCnexpoV8_.v:264$569_ADDR' using process `$paramod\memory\TAM=2048.$proc$SOCnexpoV8_.v:261$579'.
created $dff cell `$procdff$1250' with positive edge clock.
Creating register for signal `$paramod\memory\TAM=2048.$memwr$\memArray$SOCnexpoV8_.v:264$569_DATA' using process `$paramod\memory\TAM=2048.$proc$SOCnexpoV8_.v:261$579'.
created $dff cell `$procdff$1251' with positive edge clock.
Creating register for signal `$paramod\memory\TAM=2048.$memwr$\memArray$SOCnexpoV8_.v:264$569_EN' using process `$paramod\memory\TAM=2048.$proc$SOCnexpoV8_.v:261$579'.
created $dff cell `$procdff$1252' with positive edge clock.
Creating register for signal `$paramod\memory\TAM=2048.$memwr$\memArray$SOCnexpoV8_.v:265$570_ADDR' using process `$paramod\memory\TAM=2048.$proc$SOCnexpoV8_.v:261$579'.
created $dff cell `$procdff$1253' with positive edge clock.
Creating register for signal `$paramod\memory\TAM=2048.$memwr$\memArray$SOCnexpoV8_.v:265$570_DATA' using process `$paramod\memory\TAM=2048.$proc$SOCnexpoV8_.v:261$579'.
created $dff cell `$procdff$1254' with positive edge clock.
Creating register for signal `$paramod\memory\TAM=2048.$memwr$\memArray$SOCnexpoV8_.v:265$570_EN' using process `$paramod\memory\TAM=2048.$proc$SOCnexpoV8_.v:261$579'.
created $dff cell `$procdff$1255' with positive edge clock.
Creating register for signal `$paramod\memory\TAM=2048.$memwr$\memArray$SOCnexpoV8_.v:266$571_ADDR' using process `$paramod\memory\TAM=2048.$proc$SOCnexpoV8_.v:261$579'.
created $dff cell `$procdff$1256' with positive edge clock.
Creating register for signal `$paramod\memory\TAM=2048.$memwr$\memArray$SOCnexpoV8_.v:266$571_DATA' using process `$paramod\memory\TAM=2048.$proc$SOCnexpoV8_.v:261$579'.
created $dff cell `$procdff$1257' with positive edge clock.
Creating register for signal `$paramod\memory\TAM=2048.$memwr$\memArray$SOCnexpoV8_.v:266$571_EN' using process `$paramod\memory\TAM=2048.$proc$SOCnexpoV8_.v:261$579'.
created $dff cell `$procdff$1258' with positive edge clock.
Creating register for signal `\SOCnexpo.\rx_readed' using process `\SOCnexpo.$proc$SOCnexpoV8_.v:209$354'.
created $dff cell `$procdff$1259' with positive edge clock.
Creating register for signal `\SOCnexpo.\tx_ready' using process `\SOCnexpo.$proc$SOCnexpoV8_.v:187$353'.
created $dff cell `$procdff$1260' with positive edge clock.
Creating register for signal `\SOCnexpo.\leds_en' using process `\SOCnexpo.$proc$SOCnexpoV8_.v:150$351'.
created $dff cell `$procdff$1261' with positive edge clock.
Creating register for signal `\SOCnexpo.\leds1' using process `\SOCnexpo.$proc$SOCnexpoV8_.v:129$350'.
created $dff cell `$procdff$1262' with positive edge clock.
Creating register for signal `\SOCnexpo.\leds2' using process `\SOCnexpo.$proc$SOCnexpoV8_.v:129$350'.
created $dff cell `$procdff$1263' with positive edge clock.
Creating register for signal `\SOCnexpo.\leds3' using process `\SOCnexpo.$proc$SOCnexpoV8_.v:129$350'.
created $dff cell `$procdff$1264' with positive edge clock.
Creating register for signal `\SOCnexpo.\leds4' using process `\SOCnexpo.$proc$SOCnexpoV8_.v:129$350'.
created $dff cell `$procdff$1265' with positive edge clock.
Creating register for signal `\SOCnexpo.\instr' using process `\SOCnexpo.$proc$SOCnexpoV8_.v:46$328'.
created $dff cell `$procdff$1266' with positive edge clock.
Creating register for signal `\SOCnexpo.\rst' using process `\SOCnexpo.$proc$SOCnexpoV8_.v:30$326'.
created $dff cell `$procdff$1267' with positive edge clock.
Creating register for signal `\SOCnexpo.\Espera' using process `\SOCnexpo.$proc$SOCnexpoV8_.v:28$324'.
created $dff cell `$procdff$1268' with positive edge clock.
Creating register for signal `\RV32nexpo.\cycle' using process `\RV32nexpo.$proc$Procesador_V2.0b/RV32nexpo.v:487$318'.
created $dff cell `$procdff$1269' with positive edge clock.
Creating register for signal `\RV32nexpo.\instret' using process `\RV32nexpo.$proc$Procesador_V2.0b/RV32nexpo.v:487$318'.
created $dff cell `$procdff$1270' with positive edge clock.
Creating register for signal `\RV32nexpo.\PWM_' using process `\RV32nexpo.$proc$Procesador_V2.0b/RV32nexpo.v:478$316'.
created $dff cell `$procdff$1271' with positive edge clock.
Creating register for signal `\RV32nexpo.\MW_resultado' using process `\RV32nexpo.$proc$Procesador_V2.0b/RV32nexpo.v:438$313'.
created $dff cell `$procdff$1272' with positive edge clock.
Creating register for signal `\RV32nexpo.\MW_rd' using process `\RV32nexpo.$proc$Procesador_V2.0b/RV32nexpo.v:438$313'.
created $dff cell `$procdff$1273' with positive edge clock.
Creating register for signal `\RV32nexpo.\MW_funct3' using process `\RV32nexpo.$proc$Procesador_V2.0b/RV32nexpo.v:438$313'.
created $dff cell `$procdff$1274' with positive edge clock.
Creating register for signal `\RV32nexpo.\MW_address_LSB' using process `\RV32nexpo.$proc$Procesador_V2.0b/RV32nexpo.v:438$313'.
created $dff cell `$procdff$1275' with positive edge clock.
Creating register for signal `\RV32nexpo.\MW_nop' using process `\RV32nexpo.$proc$Procesador_V2.0b/RV32nexpo.v:438$313'.
created $dff cell `$procdff$1276' with positive edge clock.
Creating register for signal `\RV32nexpo.\MW_MemRead' using process `\RV32nexpo.$proc$Procesador_V2.0b/RV32nexpo.v:438$313'.
created $dff cell `$procdff$1277' with positive edge clock.
Creating register for signal `\RV32nexpo.\MW_RegWrite' using process `\RV32nexpo.$proc$Procesador_V2.0b/RV32nexpo.v:438$313'.
created $dff cell `$procdff$1278' with positive edge clock.
Creating register for signal `\RV32nexpo.\EM_resultado' using process `\RV32nexpo.$proc$Procesador_V2.0b/RV32nexpo.v:359$304'.
created $dff cell `$procdff$1279' with positive edge clock.
Creating register for signal `\RV32nexpo.\EM_rs2Data' using process `\RV32nexpo.$proc$Procesador_V2.0b/RV32nexpo.v:359$304'.
created $dff cell `$procdff$1280' with positive edge clock.
Creating register for signal `\RV32nexpo.\EM_csrDataIn' using process `\RV32nexpo.$proc$Procesador_V2.0b/RV32nexpo.v:359$304'.
created $dff cell `$procdff$1281' with positive edge clock.
Creating register for signal `\RV32nexpo.\EM_csr' using process `\RV32nexpo.$proc$Procesador_V2.0b/RV32nexpo.v:359$304'.
created $dff cell `$procdff$1282' with positive edge clock.
Creating register for signal `\RV32nexpo.\EM_rd' using process `\RV32nexpo.$proc$Procesador_V2.0b/RV32nexpo.v:359$304'.
created $dff cell `$procdff$1283' with positive edge clock.
Creating register for signal `\RV32nexpo.\EM_funct3' using process `\RV32nexpo.$proc$Procesador_V2.0b/RV32nexpo.v:359$304'.
created $dff cell `$procdff$1284' with positive edge clock.
Creating register for signal `\RV32nexpo.\EM_nop' using process `\RV32nexpo.$proc$Procesador_V2.0b/RV32nexpo.v:359$304'.
created $dff cell `$procdff$1285' with positive edge clock.
Creating register for signal `\RV32nexpo.\EM_MemRead' using process `\RV32nexpo.$proc$Procesador_V2.0b/RV32nexpo.v:359$304'.
created $dff cell `$procdff$1286' with positive edge clock.
Creating register for signal `\RV32nexpo.\EM_MemWrite' using process `\RV32nexpo.$proc$Procesador_V2.0b/RV32nexpo.v:359$304'.
created $dff cell `$procdff$1287' with positive edge clock.
Creating register for signal `\RV32nexpo.\EM_RegWrite' using process `\RV32nexpo.$proc$Procesador_V2.0b/RV32nexpo.v:359$304'.
created $dff cell `$procdff$1288' with positive edge clock.
Creating register for signal `\RV32nexpo.\EM_isCSR' using process `\RV32nexpo.$proc$Procesador_V2.0b/RV32nexpo.v:359$304'.
created $dff cell `$procdff$1289' with positive edge clock.
Creating register for signal `\RV32nexpo.\EM_CSRRead' using process `\RV32nexpo.$proc$Procesador_V2.0b/RV32nexpo.v:359$304'.
created $dff cell `$procdff$1290' with positive edge clock.
Creating register for signal `\RV32nexpo.\EM_CSRWrite' using process `\RV32nexpo.$proc$Procesador_V2.0b/RV32nexpo.v:359$304'.
created $dff cell `$procdff$1291' with positive edge clock.
Creating register for signal `\RV32nexpo.\DE_pc' using process `\RV32nexpo.$proc$Procesador_V2.0b/RV32nexpo.v:288$293'.
created $dff cell `$procdff$1292' with positive edge clock.
Creating register for signal `\RV32nexpo.\DE_rs1Data' using process `\RV32nexpo.$proc$Procesador_V2.0b/RV32nexpo.v:288$293'.
created $dff cell `$procdff$1293' with positive edge clock.
Creating register for signal `\RV32nexpo.\DE_rs2Data' using process `\RV32nexpo.$proc$Procesador_V2.0b/RV32nexpo.v:288$293'.
created $dff cell `$procdff$1294' with positive edge clock.
Creating register for signal `\RV32nexpo.\DE_imm' using process `\RV32nexpo.$proc$Procesador_V2.0b/RV32nexpo.v:288$293'.
created $dff cell `$procdff$1295' with positive edge clock.
Creating register for signal `\RV32nexpo.\DE_rs1' using process `\RV32nexpo.$proc$Procesador_V2.0b/RV32nexpo.v:288$293'.
created $dff cell `$procdff$1296' with positive edge clock.
Creating register for signal `\RV32nexpo.\DE_rs2' using process `\RV32nexpo.$proc$Procesador_V2.0b/RV32nexpo.v:288$293'.
created $dff cell `$procdff$1297' with positive edge clock.
Creating register for signal `\RV32nexpo.\DE_rd' using process `\RV32nexpo.$proc$Procesador_V2.0b/RV32nexpo.v:288$293'.
created $dff cell `$procdff$1298' with positive edge clock.
Creating register for signal `\RV32nexpo.\DE_ALUCtrl' using process `\RV32nexpo.$proc$Procesador_V2.0b/RV32nexpo.v:288$293'.
created $dff cell `$procdff$1299' with positive edge clock.
Creating register for signal `\RV32nexpo.\DE_funct3' using process `\RV32nexpo.$proc$Procesador_V2.0b/RV32nexpo.v:288$293'.
created $dff cell `$procdff$1300' with positive edge clock.
Creating register for signal `\RV32nexpo.\DE_nop' using process `\RV32nexpo.$proc$Procesador_V2.0b/RV32nexpo.v:288$293'.
created $dff cell `$procdff$1301' with positive edge clock.
Creating register for signal `\RV32nexpo.\DE_MemWrite' using process `\RV32nexpo.$proc$Procesador_V2.0b/RV32nexpo.v:288$293'.
created $dff cell `$procdff$1302' with positive edge clock.
Creating register for signal `\RV32nexpo.\DE_RegWrite' using process `\RV32nexpo.$proc$Procesador_V2.0b/RV32nexpo.v:288$293'.
created $dff cell `$procdff$1303' with positive edge clock.
Creating register for signal `\RV32nexpo.\DE_MemRead' using process `\RV32nexpo.$proc$Procesador_V2.0b/RV32nexpo.v:288$293'.
created $dff cell `$procdff$1304' with positive edge clock.
Creating register for signal `\RV32nexpo.\DE_ALUSrc1' using process `\RV32nexpo.$proc$Procesador_V2.0b/RV32nexpo.v:288$293'.
created $dff cell `$procdff$1305' with positive edge clock.
Creating register for signal `\RV32nexpo.\DE_ALUSrc2' using process `\RV32nexpo.$proc$Procesador_V2.0b/RV32nexpo.v:288$293'.
created $dff cell `$procdff$1306' with positive edge clock.
Creating register for signal `\RV32nexpo.\DE_isJALR' using process `\RV32nexpo.$proc$Procesador_V2.0b/RV32nexpo.v:288$293'.
created $dff cell `$procdff$1307' with positive edge clock.
Creating register for signal `\RV32nexpo.\DE_isJAL' using process `\RV32nexpo.$proc$Procesador_V2.0b/RV32nexpo.v:288$293'.
created $dff cell `$procdff$1308' with positive edge clock.
Creating register for signal `\RV32nexpo.\DE_isBRANCH' using process `\RV32nexpo.$proc$Procesador_V2.0b/RV32nexpo.v:288$293'.
created $dff cell `$procdff$1309' with positive edge clock.
Creating register for signal `\RV32nexpo.\DE_isCSR' using process `\RV32nexpo.$proc$Procesador_V2.0b/RV32nexpo.v:288$293'.
created $dff cell `$procdff$1310' with positive edge clock.
Creating register for signal `\RV32nexpo.\DE_isEBREAK' using process `\RV32nexpo.$proc$Procesador_V2.0b/RV32nexpo.v:288$293'.
created $dff cell `$procdff$1311' with positive edge clock.
Creating register for signal `\RV32nexpo.\DE_CSRWrite' using process `\RV32nexpo.$proc$Procesador_V2.0b/RV32nexpo.v:288$293'.
created $dff cell `$procdff$1312' with positive edge clock.
Creating register for signal `\RV32nexpo.\DE_CSRRead' using process `\RV32nexpo.$proc$Procesador_V2.0b/RV32nexpo.v:288$293'.
created $dff cell `$procdff$1313' with positive edge clock.
Creating register for signal `\RV32nexpo.\F_pc' using process `\RV32nexpo.$proc$Procesador_V2.0b/RV32nexpo.v:104$265'.
created $dff cell `$procdff$1314' with positive edge clock.
Creating register for signal `\RV32nexpo.\FD_pc' using process `\RV32nexpo.$proc$Procesador_V2.0b/RV32nexpo.v:104$265'.
created $dff cell `$procdff$1315' with positive edge clock.
Creating register for signal `\RV32nexpo.\FD_nop' using process `\RV32nexpo.$proc$Procesador_V2.0b/RV32nexpo.v:104$265'.
created $dff cell `$procdff$1316' with positive edge clock.
Creating register for signal `\RV32nexpo.\state' using process `\RV32nexpo.$proc$Procesador_V2.0b/RV32nexpo.v:58$262'.
created $dff cell `$procdff$1317' with positive edge clock.
Creating register for signal `\registros.$memwr$\WORKREG$Procesador_V2.0b/registros_32.v:43$77_ADDR' using process `\registros.$proc$Procesador_V2.0b/registros_32.v:41$80'.
created $dff cell `$procdff$1318' with negative edge clock.
Creating register for signal `\registros.$memwr$\WORKREG$Procesador_V2.0b/registros_32.v:43$77_DATA' using process `\registros.$proc$Procesador_V2.0b/registros_32.v:41$80'.
created $dff cell `$procdff$1319' with negative edge clock.
Creating register for signal `\registros.$memwr$\WORKREG$Procesador_V2.0b/registros_32.v:43$77_EN' using process `\registros.$proc$Procesador_V2.0b/registros_32.v:41$80'.
created $dff cell `$procdff$1320' with negative edge clock.
Creating register for signal `\ControladorMatrizLed.\act_row' using process `\ControladorMatrizLed.$proc$ControladorMatrizLed.v:41$4'.
created $dff cell `$procdff$1321' with positive edge clock.
Creating register for signal `\ControladorMatrizLed.\row' using process `\ControladorMatrizLed.$proc$ControladorMatrizLed.v:41$4'.
created $dff cell `$procdff$1322' with positive edge clock.
Creating register for signal `\ControladorMatrizLed.\timer' using process `\ControladorMatrizLed.$proc$ControladorMatrizLed.v:24$1'.
created $dff cell `$procdff$1323' with positive edge clock.

4.3.9. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Removing empty process `serialRX.$proc$uart.v:226$439'.
Removing empty process `serialRX.$proc$uart.v:219$438'.
Removing empty process `serialRX.$proc$uart.v:201$437'.
Removing empty process `serialRX.$proc$uart.v:190$436'.
Removing empty process `serialRX.$proc$uart.v:167$435'.
Removing empty process `serialRX.$proc$uart.v:154$434'.
Removing empty process `serialRX.$proc$uart.v:146$433'.
Removing empty process `serialRX.$proc$uart.v:227$432'.
Found and cleaned up 1 empty switch in `\serialRX.$proc$uart.v:221$431'.
Removing empty process `serialRX.$proc$uart.v:221$431'.
Found and cleaned up 2 empty switches in `\serialRX.$proc$uart.v:202$426'.
Removing empty process `serialRX.$proc$uart.v:202$426'.
Found and cleaned up 1 empty switch in `\serialRX.$proc$uart.v:191$424'.
Removing empty process `serialRX.$proc$uart.v:191$424'.
Found and cleaned up 2 empty switches in `\serialRX.$proc$uart.v:169$420'.
Removing empty process `serialRX.$proc$uart.v:169$420'.
Found and cleaned up 2 empty switches in `\serialRX.$proc$uart.v:156$419'.
Removing empty process `serialRX.$proc$uart.v:156$419'.
Removing empty process `serialRX.$proc$uart.v:147$416'.
Removing empty process `serialRX.$proc$uart.v:142$415'.
Removing empty process `serialRX.$proc$uart.v:139$414'.
Removing empty process `serialTX.$proc$uart.v:107$413'.
Removing empty process `serialTX.$proc$uart.v:93$412'.
Removing empty process `serialTX.$proc$uart.v:88$411'.
Removing empty process `serialTX.$proc$uart.v:80$410'.
Removing empty process `serialTX.$proc$uart.v:64$409'.
Removing empty process `serialTX.$proc$uart.v:55$408'.
Removing empty process `serialTX.$proc$uart.v:108$407'.
Found and cleaned up 2 empty switches in `\serialTX.$proc$uart.v:94$404'.
Removing empty process `serialTX.$proc$uart.v:94$404'.
Removing empty process `serialTX.$proc$uart.v:89$403'.
Found and cleaned up 2 empty switches in `\serialTX.$proc$uart.v:81$402'.
Removing empty process `serialTX.$proc$uart.v:81$402'.
Found and cleaned up 2 empty switches in `\serialTX.$proc$uart.v:72$401'.
Removing empty process `serialTX.$proc$uart.v:72$401'.
Removing empty process `serialTX.$proc$uart.v:66$398'.
Removing empty process `$paramod\BaudClock\BAUD=115200.$proc$uart.v:29$604'.
Found and cleaned up 1 empty switch in `$paramod\BaudClock\BAUD=115200.$proc$uart.v:35$601'.
Removing empty process `$paramod\BaudClock\BAUD=115200.$proc$uart.v:35$601'.
Found and cleaned up 5 empty switches in `$paramod\memory\TAM=2048.$proc$SOCnexpoV8_.v:261$579'.
Removing empty process `$paramod\memory\TAM=2048.$proc$SOCnexpoV8_.v:261$579'.
Removing empty process `SOCnexpo.$proc$SOCnexpoV8_.v:149$360'.
Removing empty process `SOCnexpo.$proc$SOCnexpoV8_.v:27$358'.
Removing empty process `SOCnexpo.$proc$SOCnexpoV8_.v:26$357'.
Found and cleaned up 3 empty switches in `\SOCnexpo.$proc$SOCnexpoV8_.v:209$354'.
Removing empty process `SOCnexpo.$proc$SOCnexpoV8_.v:209$354'.
Found and cleaned up 3 empty switches in `\SOCnexpo.$proc$SOCnexpoV8_.v:187$353'.
Removing empty process `SOCnexpo.$proc$SOCnexpoV8_.v:187$353'.
Found and cleaned up 2 empty switches in `\SOCnexpo.$proc$SOCnexpoV8_.v:150$351'.
Removing empty process `SOCnexpo.$proc$SOCnexpoV8_.v:150$351'.
Found and cleaned up 8 empty switches in `\SOCnexpo.$proc$SOCnexpoV8_.v:129$350'.
Removing empty process `SOCnexpo.$proc$SOCnexpoV8_.v:129$350'.
Found and cleaned up 1 empty switch in `\SOCnexpo.$proc$SOCnexpoV8_.v:83$342'.
Removing empty process `SOCnexpo.$proc$SOCnexpoV8_.v:83$342'.
Removing empty process `SOCnexpo.$proc$SOCnexpoV8_.v:46$328'.
Found and cleaned up 1 empty switch in `\SOCnexpo.$proc$SOCnexpoV8_.v:30$326'.
Removing empty process `SOCnexpo.$proc$SOCnexpoV8_.v:30$326'.
Removing empty process `SOCnexpo.$proc$SOCnexpoV8_.v:28$324'.
Removing empty process `RV32nexpo.$proc$Procesador_V2.0b/RV32nexpo.v:122$323'.
Removing empty process `RV32nexpo.$proc$Procesador_V2.0b/RV32nexpo.v:96$322'.
Found and cleaned up 1 empty switch in `\RV32nexpo.$proc$Procesador_V2.0b/RV32nexpo.v:487$318'.
Removing empty process `RV32nexpo.$proc$Procesador_V2.0b/RV32nexpo.v:487$318'.
Found and cleaned up 3 empty switches in `\RV32nexpo.$proc$Procesador_V2.0b/RV32nexpo.v:478$316'.
Removing empty process `RV32nexpo.$proc$Procesador_V2.0b/RV32nexpo.v:478$316'.
Removing empty process `RV32nexpo.$proc$Procesador_V2.0b/RV32nexpo.v:438$313'.
Found and cleaned up 1 empty switch in `\RV32nexpo.$proc$Procesador_V2.0b/RV32nexpo.v:396$307'.
Removing empty process `RV32nexpo.$proc$Procesador_V2.0b/RV32nexpo.v:396$307'.
Removing empty process `RV32nexpo.$proc$Procesador_V2.0b/RV32nexpo.v:359$304'.
Removing empty process `RV32nexpo.$proc$Procesador_V2.0b/RV32nexpo.v:288$293'.
Found and cleaned up 2 empty switches in `\RV32nexpo.$proc$Procesador_V2.0b/RV32nexpo.v:208$287'.
Removing empty process `RV32nexpo.$proc$Procesador_V2.0b/RV32nexpo.v:208$287'.
Found and cleaned up 1 empty switch in `\RV32nexpo.$proc$Procesador_V2.0b/RV32nexpo.v:168$283'.
Removing empty process `RV32nexpo.$proc$Procesador_V2.0b/RV32nexpo.v:168$283'.
Found and cleaned up 2 empty switches in `\RV32nexpo.$proc$Procesador_V2.0b/RV32nexpo.v:104$265'.
Removing empty process `RV32nexpo.$proc$Procesador_V2.0b/RV32nexpo.v:104$265'.
Removing empty process `RV32nexpo.$proc$Procesador_V2.0b/RV32nexpo.v:63$263'.
Found and cleaned up 1 empty switch in `\RV32nexpo.$proc$Procesador_V2.0b/RV32nexpo.v:58$262'.
Removing empty process `RV32nexpo.$proc$Procesador_V2.0b/RV32nexpo.v:58$262'.
Removing empty process `ALU.$proc$Procesador_V2.0b/ALU.v:22$239'.
Removing empty process `ALU.$proc$Procesador_V2.0b/ALU.v:67$224'.
Removing empty process `ALU.$proc$Procesador_V2.0b/ALU.v:54$195'.
Removing empty process `registros.$proc$Procesador_V2.0b/registros_32.v:28$117'.
Found and cleaned up 1 empty switch in `\registros.$proc$Procesador_V2.0b/registros_32.v:41$80'.
Removing empty process `registros.$proc$Procesador_V2.0b/registros_32.v:41$80'.
Removing empty process `ControladorMatrizLed.$proc$ControladorMatrizLed.v:23$12'.
Removing empty process `ControladorMatrizLed.$proc$ControladorMatrizLed.v:21$11'.
Found and cleaned up 2 empty switches in `\ControladorMatrizLed.$proc$ControladorMatrizLed.v:41$4'.
Removing empty process `ControladorMatrizLed.$proc$ControladorMatrizLed.v:41$4'.
Found and cleaned up 1 empty switch in `\ControladorMatrizLed.$proc$ControladorMatrizLed.v:24$1'.
Removing empty process `ControladorMatrizLed.$proc$ControladorMatrizLed.v:24$1'.
Cleaned up 53 empty switches.

4.4. Executing FLATTEN pass (flatten design).
Using template RV32nexpo for cells of type RV32nexpo.
Using template $paramod\memory\TAM=2048 for cells of type $paramod\memory\TAM=2048.
Using template ControladorMatrizLed for cells of type ControladorMatrizLed.
Using template serialTX for cells of type serialTX.
Using template serialRX for cells of type serialRX.
Using template LoadfromMEM for cells of type LoadfromMEM.
Using template StoretoMEM for cells of type StoretoMEM.
Using template ALU for cells of type ALU.
Using template registros for cells of type registros.
Using template $paramod\BaudClock\BAUD=115200 for cells of type $paramod\BaudClock\BAUD=115200.
No more expansions possible.
Deleting now unused module serialRX.
Deleting now unused module serialTX.
Deleting now unused module $paramod\BaudClock\BAUD=115200.
Deleting now unused module $paramod\memory\TAM=2048.
Deleting now unused module RV32nexpo.
Deleting now unused module LoadfromMEM.
Deleting now unused module StoretoMEM.
Deleting now unused module ALU.
Deleting now unused module registros.
Deleting now unused module ControladorMatrizLed.

4.5. Executing TRIBUF pass.

4.6. Executing DEMINOUT pass (demote inout ports to input or output).

4.7. Executing OPT_EXPR pass (perform const folding).
Optimizing module SOCnexpo.

4.8. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \SOCnexpo..
Removed 88 unused cells and 764 unused wires.

4.9. Executing CHECK pass (checking for obvious problems).
checking module SOCnexpo..
Warning: Wire SOCnexpo.\RV32I.error is used but has no driver.
Warning: Wire SOCnexpo.\RV32I.end_prog is used but has no driver.
found and reported 2 problems.

4.10. Executing OPT pass (performing simple optimizations).

4.10.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module SOCnexpo.

4.10.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\SOCnexpo'.
Removed a total of 7 cells.

4.10.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \SOCnexpo..
Creating internal representation of mux trees.
Evaluating internal representation of mux trees.
Analyzing evaluation results.
dead port 2/2 on $mux $techmap\RV32I.$procmux$824.
dead port 1/2 on $mux $techmap\RV32I.$procmux$826.
dead port 1/2 on $mux $techmap\RV32I.$procmux$828.
dead port 1/2 on $mux $techmap\RV32I.$procmux$830.
dead port 1/2 on $mux $techmap\RV32I.$procmux$832.
dead port 1/2 on $mux $techmap\RV32I.$procmux$834.
dead port 1/2 on $mux $techmap\RV32I.$procmux$836.
dead port 1/2 on $mux $techmap\RV32I.$procmux$838.
dead port 1/2 on $mux $techmap\RV32I.$procmux$840.
dead port 1/2 on $mux $techmap\RV32I.$procmux$842.
dead port 1/2 on $mux $techmap\RV32I.$procmux$844.
dead port 1/2 on $mux $techmap\RV32I.$procmux$846.
Removed 12 multiplexer ports.

4.10.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
Optimizing cells in module \SOCnexpo.
New input vector for $reduce_or cell $techmap\RV32I.$reduce_or$Procesador_V2.0b/RV32nexpo.v:273$291: { \RV32I.FD_instr [15] \RV32I.FD_instr [16] \RV32I.FD_instr [17] \RV32I.FD_instr [18] \RV32I.FD_instr [19] }
New input vector for $reduce_or cell $techmap\RV32I.$reduce_or$Procesador_V2.0b/RV32nexpo.v:194$286: { \RV32I.FD_instr [7] \RV32I.FD_instr [8] \RV32I.FD_instr [9] \RV32I.FD_instr [10] \RV32I.FD_instr [11] }
New input vector for $reduce_or cell $techmap\RAM.$reduce_or$SOCnexpoV8_.v:254$573: { \RAM.WRmask [0] \RAM.WRmask [1] \RAM.WRmask [2] \RAM.WRmask [3] }
Consolidated identical input bits for $mux cell $techmap\RAM.$procmux$642:
Old ports: A=0, B=255, Y=$techmap\RAM.$procmux$642_Y
New ports: A=1'0, B=1'1, Y=$techmap\RAM.$procmux$642_Y [0]
New connections: $techmap\RAM.$procmux$642_Y [31:1] = { 24'000000000000000000000000 $techmap\RAM.$procmux$642_Y [0] $techmap\RAM.$procmux$642_Y [0] $techmap\RAM.$procmux$642_Y [0] $techmap\RAM.$procmux$642_Y [0] $techmap\RAM.$procmux$642_Y [0] $techmap\RAM.$procmux$642_Y [0] $techmap\RAM.$procmux$642_Y [0] }
Consolidated identical input bits for $mux cell $techmap\RAM.$procmux$654:
Old ports: A=0, B=65280, Y=$techmap\RAM.$procmux$654_Y
New ports: A=1'0, B=1'1, Y=$techmap\RAM.$procmux$654_Y [8]
New connections: { $techmap\RAM.$procmux$654_Y [31:9] $techmap\RAM.$procmux$654_Y [7:0] } = { 16'0000000000000000 $techmap\RAM.$procmux$654_Y [8] $techmap\RAM.$procmux$654_Y [8] $techmap\RAM.$procmux$654_Y [8] $techmap\RAM.$procmux$654_Y [8] $techmap\RAM.$procmux$654_Y [8] $techmap\RAM.$procmux$654_Y [8] $techmap\RAM.$procmux$654_Y [8] 8'00000000 }
Consolidated identical input bits for $mux cell $techmap\RAM.$procmux$666:
Old ports: A=0, B=16711680, Y=$techmap\RAM.$procmux$666_Y
New ports: A=1'0, B=1'1, Y=$techmap\RAM.$procmux$666_Y [16]
New connections: { $techmap\RAM.$procmux$666_Y [31:17] $techmap\RAM.$procmux$666_Y [15:0] } = { 8'00000000 $techmap\RAM.$procmux$666_Y [16] $techmap\RAM.$procmux$666_Y [16] $techmap\RAM.$procmux$666_Y [16] $techmap\RAM.$procmux$666_Y [16] $techmap\RAM.$procmux$666_Y [16] $techmap\RAM.$procmux$666_Y [16] $techmap\RAM.$procmux$666_Y [16] 16'0000000000000000 }
Consolidated identical input bits for $mux cell $techmap\RAM.$procmux$678:
Old ports: A=0, B=32'11111111000000000000000000000000, Y=$techmap\RAM.$procmux$678_Y
New ports: A=1'0, B=1'1, Y=$techmap\RAM.$procmux$678_Y [24]
New connections: { $techmap\RAM.$procmux$678_Y [31:25] $techmap\RAM.$procmux$678_Y [23:0] } = { $techmap\RAM.$procmux$678_Y [24] $techmap\RAM.$procmux$678_Y [24] $techmap\RAM.$procmux$678_Y [24] $techmap\RAM.$procmux$678_Y [24] $techmap\RAM.$procmux$678_Y [24] $techmap\RAM.$procmux$678_Y [24] $techmap\RAM.$procmux$678_Y [24] 24'000000000000000000000000 }
New ctrl vector for $pmux cell $techmap\RV32I.$procmux$784: { $techmap\RV32I.$eq$Procesador_V2.0b/RV32nexpo.v:482$317_Y $auto$opt_reduce.cc:132:opt_mux$1327 $techmap\RV32I.$procmux$788_CMP $auto$opt_reduce.cc:132:opt_mux$1325 $techmap\RV32I.$procmux$785_CMP }
Consolidated identical input bits for $mux cell $techmap\RV32I.reg32.$procmux$1110:
Old ports: A=0, B=32'11111111111111111111111111111111, Y=$techmap\RV32I.reg32.$0$memwr$\WORKREG$Procesador_V2.0b/registros_32.v:43$77_EN[31:0]$83
New ports: A=1'0, B=1'1, Y=$techmap\RV32I.reg32.$0$memwr$\WORKREG$Procesador_V2.0b/registros_32.v:43$77_EN[31:0]$83 [0]
New connections: $techmap\RV32I.reg32.$0$memwr$\WORKREG$Procesador_V2.0b/registros_32.v:43$77_EN[31:0]$83 [31:1] = { $techmap\RV32I.reg32.$0$memwr$\WORKREG$Procesador_V2.0b/registros_32.v:43$77_EN[31:0]$83 [0] $techmap\RV32I.reg32.$0$memwr$\WORKREG$Procesador_V2.0b/registros_32.v:43$77_EN[31:0]$83 [0] $techmap\RV32I.reg32.$0$memwr$\WORKREG$Procesador_V2.0b/registros_32.v:43$77_EN[31:0]$83 [0] $techmap\RV32I.reg32.$0$memwr$\WORKREG$Procesador_V2.0b/registros_32.v:43$77_EN[31:0]$83 [0] $techmap\RV32I.reg32.$0$memwr$\WORKREG$Procesador_V2.0b/registros_32.v:43$77_EN[31:0]$83 [0] $techmap\RV32I.reg32.$0$memwr$\WORKREG$Procesador_V2.0b/registros_32.v:43$77_EN[31:0]$83 [0] $techmap\RV32I.reg32.$0$memwr$\WORKREG$Procesador_V2.0b/registros_32.v:43$77_EN[31:0]$83 [0] $techmap\RV32I.reg32.$0$memwr$\WORKREG$Procesador_V2.0b/registros_32.v:43$77_EN[31:0]$83 [0] $techmap\RV32I.reg32.$0$memwr$\WORKREG$Procesador_V2.0b/registros_32.v:43$77_EN[31:0]$83 [0] $techmap\RV32I.reg32.$0$memwr$\WORKREG$Procesador_V2.0b/registros_32.v:43$77_EN[31:0]$83 [0] $techmap\RV32I.reg32.$0$memwr$\WORKREG$Procesador_V2.0b/registros_32.v:43$77_EN[31:0]$83 [0] $techmap\RV32I.reg32.$0$memwr$\WORKREG$Procesador_V2.0b/registros_32.v:43$77_EN[31:0]$83 [0] $techmap\RV32I.reg32.$0$memwr$\WORKREG$Procesador_V2.0b/registros_32.v:43$77_EN[31:0]$83 [0] $techmap\RV32I.reg32.$0$memwr$\WORKREG$Procesador_V2.0b/registros_32.v:43$77_EN[31:0]$83 [0] $techmap\RV32I.reg32.$0$memwr$\WORKREG$Procesador_V2.0b/registros_32.v:43$77_EN[31:0]$83 [0] $techmap\RV32I.reg32.$0$memwr$\WORKREG$Procesador_V2.0b/registros_32.v:43$77_EN[31:0]$83 [0] $techmap\RV32I.reg32.$0$memwr$\WORKREG$Procesador_V2.0b/registros_32.v:43$77_EN[31:0]$83 [0] $techmap\RV32I.reg32.$0$memwr$\WORKREG$Procesador_V2.0b/registros_32.v:43$77_EN[31:0]$83 [0] $techmap\RV32I.reg32.$0$memwr$\WORKREG$Procesador_V2.0b/registros_32.v:43$77_EN[31:0]$83 [0] $techmap\RV32I.reg32.$0$memwr$\WORKREG$Procesador_V2.0b/registros_32.v:43$77_EN[31:0]$83 [0] $techmap\RV32I.reg32.$0$memwr$\WORKREG$Procesador_V2.0b/registros_32.v:43$77_EN[31:0]$83 [0] $techmap\RV32I.reg32.$0$memwr$\WORKREG$Procesador_V2.0b/registros_32.v:43$77_EN[31:0]$83 [0] $techmap\RV32I.reg32.$0$memwr$\WORKREG$Procesador_V2.0b/registros_32.v:43$77_EN[31:0]$83 [0] $techmap\RV32I.reg32.$0$memwr$\WORKREG$Procesador_V2.0b/registros_32.v:43$77_EN[31:0]$83 [0] $techmap\RV32I.reg32.$0$memwr$\WORKREG$Procesador_V2.0b/registros_32.v:43$77_EN[31:0]$83 [0] $techmap\RV32I.reg32.$0$memwr$\WORKREG$Procesador_V2.0b/registros_32.v:43$77_EN[31:0]$83 [0] $techmap\RV32I.reg32.$0$memwr$\WORKREG$Procesador_V2.0b/registros_32.v:43$77_EN[31:0]$83 [0] $techmap\RV32I.reg32.$0$memwr$\WORKREG$Procesador_V2.0b/registros_32.v:43$77_EN[31:0]$83 [0] $techmap\RV32I.reg32.$0$memwr$\WORKREG$Procesador_V2.0b/registros_32.v:43$77_EN[31:0]$83 [0] $techmap\RV32I.reg32.$0$memwr$\WORKREG$Procesador_V2.0b/registros_32.v:43$77_EN[31:0]$83 [0] $techmap\RV32I.reg32.$0$memwr$\WORKREG$Procesador_V2.0b/registros_32.v:43$77_EN[31:0]$83 [0] }
Optimizing cells in module \SOCnexpo.
Consolidated identical input bits for $mux cell $techmap\RAM.$procmux$644:
Old ports: A=0, B=$techmap\RAM.$procmux$642_Y, Y=$techmap\RAM.$0$memwr$\memArray$SOCnexpoV8_.v:263$568_EN[31:0]$582
New ports: A=1'0, B=$techmap\RAM.$procmux$642_Y [0], Y=$techmap\RAM.$0$memwr$\memArray$SOCnexpoV8_.v:263$568_EN[31:0]$582 [0]
New connections: $techmap\RAM.$0$memwr$\memArray$SOCnexpoV8_.v:263$568_EN[31:0]$582 [31:1] = { 24'000000000000000000000000 $techmap\RAM.$0$memwr$\memArray$SOCnexpoV8_.v:263$568_EN[31:0]$582 [0] $techmap\RAM.$0$memwr$\memArray$SOCnexpoV8_.v:263$568_EN[31:0]$582 [0] $techmap\RAM.$0$memwr$\memArray$SOCnexpoV8_.v:263$568_EN[31:0]$582 [0] $techmap\RAM.$0$memwr$\memArray$SOCnexpoV8_.v:263$568_EN[31:0]$582 [0] $techmap\RAM.$0$memwr$\memArray$SOCnexpoV8_.v:263$568_EN[31:0]$582 [0] $techmap\RAM.$0$memwr$\memArray$SOCnexpoV8_.v:263$568_EN[31:0]$582 [0] $techmap\RAM.$0$memwr$\memArray$SOCnexpoV8_.v:263$568_EN[31:0]$582 [0] }
Consolidated identical input bits for $mux cell $techmap\RAM.$procmux$656:
Old ports: A=0, B=$techmap\RAM.$procmux$654_Y, Y=$techmap\RAM.$0$memwr$\memArray$SOCnexpoV8_.v:264$569_EN[31:0]$585
New ports: A=1'0, B=$techmap\RAM.$procmux$654_Y [8], Y=$techmap\RAM.$0$memwr$\memArray$SOCnexpoV8_.v:264$569_EN[31:0]$585 [8]
New connections: { $techmap\RAM.$0$memwr$\memArray$SOCnexpoV8_.v:264$569_EN[31:0]$585 [31:9] $techmap\RAM.$0$memwr$\memArray$SOCnexpoV8_.v:264$569_EN[31:0]$585 [7:0] } = { 16'0000000000000000 $techmap\RAM.$0$memwr$\memArray$SOCnexpoV8_.v:264$569_EN[31:0]$585 [8] $techmap\RAM.$0$memwr$\memArray$SOCnexpoV8_.v:264$569_EN[31:0]$585 [8] $techmap\RAM.$0$memwr$\memArray$SOCnexpoV8_.v:264$569_EN[31:0]$585 [8] $techmap\RAM.$0$memwr$\memArray$SOCnexpoV8_.v:264$569_EN[31:0]$585 [8] $techmap\RAM.$0$memwr$\memArray$SOCnexpoV8_.v:264$569_EN[31:0]$585 [8] $techmap\RAM.$0$memwr$\memArray$SOCnexpoV8_.v:264$569_EN[31:0]$585 [8] $techmap\RAM.$0$memwr$\memArray$SOCnexpoV8_.v:264$569_EN[31:0]$585 [8] 8'00000000 }
Consolidated identical input bits for $mux cell $techmap\RAM.$procmux$668:
Old ports: A=0, B=$techmap\RAM.$procmux$666_Y, Y=$techmap\RAM.$0$memwr$\memArray$SOCnexpoV8_.v:265$570_EN[31:0]$588
New ports: A=1'0, B=$techmap\RAM.$procmux$666_Y [16], Y=$techmap\RAM.$0$memwr$\memArray$SOCnexpoV8_.v:265$570_EN[31:0]$588 [16]
New connections: { $techmap\RAM.$0$memwr$\memArray$SOCnexpoV8_.v:265$570_EN[31:0]$588 [31:17] $techmap\RAM.$0$memwr$\memArray$SOCnexpoV8_.v:265$570_EN[31:0]$588 [15:0] } = { 8'00000000 $techmap\RAM.$0$memwr$\memArray$SOCnexpoV8_.v:265$570_EN[31:0]$588 [16] $techmap\RAM.$0$memwr$\memArray$SOCnexpoV8_.v:265$570_EN[31:0]$588 [16] $techmap\RAM.$0$memwr$\memArray$SOCnexpoV8_.v:265$570_EN[31:0]$588 [16] $techmap\RAM.$0$memwr$\memArray$SOCnexpoV8_.v:265$570_EN[31:0]$588 [16] $techmap\RAM.$0$memwr$\memArray$SOCnexpoV8_.v:265$570_EN[31:0]$588 [16] $techmap\RAM.$0$memwr$\memArray$SOCnexpoV8_.v:265$570_EN[31:0]$588 [16] $techmap\RAM.$0$memwr$\memArray$SOCnexpoV8_.v:265$570_EN[31:0]$588 [16] 16'0000000000000000 }
Consolidated identical input bits for $mux cell $techmap\RAM.$procmux$680:
Old ports: A=0, B=$techmap\RAM.$procmux$678_Y, Y=$techmap\RAM.$0$memwr$\memArray$SOCnexpoV8_.v:266$571_EN[31:0]$591
New ports: A=1'0, B=$techmap\RAM.$procmux$678_Y [24], Y=$techmap\RAM.$0$memwr$\memArray$SOCnexpoV8_.v:266$571_EN[31:0]$591 [24]
New connections: { $techmap\RAM.$0$memwr$\memArray$SOCnexpoV8_.v:266$571_EN[31:0]$591 [31:25] $techmap\RAM.$0$memwr$\memArray$SOCnexpoV8_.v:266$571_EN[31:0]$591 [23:0] } = { $techmap\RAM.$0$memwr$\memArray$SOCnexpoV8_.v:266$571_EN[31:0]$591 [24] $techmap\RAM.$0$memwr$\memArray$SOCnexpoV8_.v:266$571_EN[31:0]$591 [24] $techmap\RAM.$0$memwr$\memArray$SOCnexpoV8_.v:266$571_EN[31:0]$591 [24] $techmap\RAM.$0$memwr$\memArray$SOCnexpoV8_.v:266$571_EN[31:0]$591 [24] $techmap\RAM.$0$memwr$\memArray$SOCnexpoV8_.v:266$571_EN[31:0]$591 [24] $techmap\RAM.$0$memwr$\memArray$SOCnexpoV8_.v:266$571_EN[31:0]$591 [24] $techmap\RAM.$0$memwr$\memArray$SOCnexpoV8_.v:266$571_EN[31:0]$591 [24] 24'000000000000000000000000 }
Optimizing cells in module \SOCnexpo.
Performed a total of 13 changes.

4.10.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\SOCnexpo'.
Removed a total of 3 cells.

4.10.6. Executing OPT_RMDFF pass (remove dff with constant values).
Promoting init spec \UART_RX.rcv = 1'0 to constant driver in module SOCnexpo.
Promoted 1 init specs to constant drivers.

4.10.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \SOCnexpo..
Removed 0 unused cells and 24 unused wires.

4.10.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module SOCnexpo.

4.10.9. Rerunning OPT passes. (Maybe there is more to do..)

4.10.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \SOCnexpo..
Creating internal representation of mux trees.
Evaluating internal representation of mux trees.
Analyzing evaluation results.
Removed 0 multiplexer ports.

4.10.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
Optimizing cells in module \SOCnexpo.
Performed a total of 0 changes.

4.10.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\SOCnexpo'.
Removed a total of 0 cells.

4.10.13. Executing OPT_RMDFF pass (remove dff with constant values).

4.10.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \SOCnexpo..

4.10.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module SOCnexpo.

4.10.16. Finished OPT passes. (There is nothing left to do.)

4.11. Executing WREDUCE pass (reducing word size of cells).
Removed top 21 address bits (of 32) from memory init port SOCnexpo.$meminit$\MEMROM$SOCnexpoV8_.v:42$356 (MEMROM).
Removed top 21 address bits (of 32) from memory init port SOCnexpo.$techmap\RAM.$meminit$\memArray$SOCnexpoV8_.v:258$593 (RAM.memArray).
Removed top 27 address bits (of 32) from memory init port SOCnexpo.$techmap\RV32I.reg32.$meminit$\WORKREG$Procesador_V2.0b/registros_32.v:30$100 (RV32I.reg32.WORKREG).
Removed top 27 address bits (of 32) from memory init port SOCnexpo.$techmap\RV32I.reg32.$meminit$\WORKREG$Procesador_V2.0b/registros_32.v:30$101 (RV32I.reg32.WORKREG).
Removed top 27 address bits (of 32) from memory init port SOCnexpo.$techmap\RV32I.reg32.$meminit$\WORKREG$Procesador_V2.0b/registros_32.v:30$102 (RV32I.reg32.WORKREG).
Removed top 27 address bits (of 32) from memory init port SOCnexpo.$techmap\RV32I.reg32.$meminit$\WORKREG$Procesador_V2.0b/registros_32.v:30$103 (RV32I.reg32.WORKREG).
Removed top 27 address bits (of 32) from memory init port SOCnexpo.$techmap\RV32I.reg32.$meminit$\WORKREG$Procesador_V2.0b/registros_32.v:30$104 (RV32I.reg32.WORKREG).
Removed top 27 address bits (of 32) from memory init port SOCnexpo.$techmap\RV32I.reg32.$meminit$\WORKREG$Procesador_V2.0b/registros_32.v:30$105 (RV32I.reg32.WORKREG).
Removed top 27 address bits (of 32) from memory init port SOCnexpo.$techmap\RV32I.reg32.$meminit$\WORKREG$Procesador_V2.0b/registros_32.v:30$106 (RV32I.reg32.WORKREG).
Removed top 27 address bits (of 32) from memory init port SOCnexpo.$techmap\RV32I.reg32.$meminit$\WORKREG$Procesador_V2.0b/registros_32.v:30$107 (RV32I.reg32.WORKREG).
Removed top 27 address bits (of 32) from memory init port SOCnexpo.$techmap\RV32I.reg32.$meminit$\WORKREG$Procesador_V2.0b/registros_32.v:30$108 (RV32I.reg32.WORKREG).
Removed top 27 address bits (of 32) from memory init port SOCnexpo.$techmap\RV32I.reg32.$meminit$\WORKREG$Procesador_V2.0b/registros_32.v:30$109 (RV32I.reg32.WORKREG).
Removed top 27 address bits (of 32) from memory init port SOCnexpo.$techmap\RV32I.reg32.$meminit$\WORKREG$Procesador_V2.0b/registros_32.v:30$110 (RV32I.reg32.WORKREG).
Removed top 27 address bits (of 32) from memory init port SOCnexpo.$techmap\RV32I.reg32.$meminit$\WORKREG$Procesador_V2.0b/registros_32.v:30$111 (RV32I.reg32.WORKREG).
Removed top 27 address bits (of 32) from memory init port SOCnexpo.$techmap\RV32I.reg32.$meminit$\WORKREG$Procesador_V2.0b/registros_32.v:30$112 (RV32I.reg32.WORKREG).
Removed top 27 address bits (of 32) from memory init port SOCnexpo.$techmap\RV32I.reg32.$meminit$\WORKREG$Procesador_V2.0b/registros_32.v:30$113 (RV32I.reg32.WORKREG).
Removed top 27 address bits (of 32) from memory init port SOCnexpo.$techmap\RV32I.reg32.$meminit$\WORKREG$Procesador_V2.0b/registros_32.v:30$114 (RV32I.reg32.WORKREG).
Removed top 27 address bits (of 32) from memory init port SOCnexpo.$techmap\RV32I.reg32.$meminit$\WORKREG$Procesador_V2.0b/registros_32.v:30$115 (RV32I.reg32.WORKREG).
Removed top 27 address bits (of 32) from memory init port SOCnexpo.$techmap\RV32I.reg32.$meminit$\WORKREG$Procesador_V2.0b/registros_32.v:30$84 (RV32I.reg32.WORKREG).
Removed top 27 address bits (of 32) from memory init port SOCnexpo.$techmap\RV32I.reg32.$meminit$\WORKREG$Procesador_V2.0b/registros_32.v:30$85 (RV32I.reg32.WORKREG).
Removed top 27 address bits (of 32) from memory init port SOCnexpo.$techmap\RV32I.reg32.$meminit$\WORKREG$Procesador_V2.0b/registros_32.v:30$86 (RV32I.reg32.WORKREG).
Removed top 27 address bits (of 32) from memory init port SOCnexpo.$techmap\RV32I.reg32.$meminit$\WORKREG$Procesador_V2.0b/registros_32.v:30$87 (RV32I.reg32.WORKREG).
Removed top 27 address bits (of 32) from memory init port SOCnexpo.$techmap\RV32I.reg32.$meminit$\WORKREG$Procesador_V2.0b/registros_32.v:30$88 (RV32I.reg32.WORKREG).
Removed top 27 address bits (of 32) from memory init port SOCnexpo.$techmap\RV32I.reg32.$meminit$\WORKREG$Procesador_V2.0b/registros_32.v:30$89 (RV32I.reg32.WORKREG).
Removed top 27 address bits (of 32) from memory init port SOCnexpo.$techmap\RV32I.reg32.$meminit$\WORKREG$Procesador_V2.0b/registros_32.v:30$90 (RV32I.reg32.WORKREG).
Removed top 27 address bits (of 32) from memory init port SOCnexpo.$techmap\RV32I.reg32.$meminit$\WORKREG$Procesador_V2.0b/registros_32.v:30$91 (RV32I.reg32.WORKREG).
Removed top 27 address bits (of 32) from memory init port SOCnexpo.$techmap\RV32I.reg32.$meminit$\WORKREG$Procesador_V2.0b/registros_32.v:30$92 (RV32I.reg32.WORKREG).
Removed top 27 address bits (of 32) from memory init port SOCnexpo.$techmap\RV32I.reg32.$meminit$\WORKREG$Procesador_V2.0b/registros_32.v:30$93 (RV32I.reg32.WORKREG).
Removed top 27 address bits (of 32) from memory init port SOCnexpo.$techmap\RV32I.reg32.$meminit$\WORKREG$Procesador_V2.0b/registros_32.v:30$94 (RV32I.reg32.WORKREG).
Removed top 27 address bits (of 32) from memory init port SOCnexpo.$techmap\RV32I.reg32.$meminit$\WORKREG$Procesador_V2.0b/registros_32.v:30$95 (RV32I.reg32.WORKREG).
Removed top 27 address bits (of 32) from memory init port SOCnexpo.$techmap\RV32I.reg32.$meminit$\WORKREG$Procesador_V2.0b/registros_32.v:30$96 (RV32I.reg32.WORKREG).
Removed top 27 address bits (of 32) from memory init port SOCnexpo.$techmap\RV32I.reg32.$meminit$\WORKREG$Procesador_V2.0b/registros_32.v:30$97 (RV32I.reg32.WORKREG).
Removed top 27 address bits (of 32) from memory init port SOCnexpo.$techmap\RV32I.reg32.$meminit$\WORKREG$Procesador_V2.0b/registros_32.v:30$98 (RV32I.reg32.WORKREG).
Removed top 27 address bits (of 32) from memory init port SOCnexpo.$techmap\RV32I.reg32.$meminit$\WORKREG$Procesador_V2.0b/registros_32.v:30$99 (RV32I.reg32.WORKREG).
Removed top 31 bits (of 32) from port B of cell SOCnexpo.$add$SOCnexpoV8_.v:28$325 ($add).
Removed top 24 bits (of 32) from port Y of cell SOCnexpo.$add$SOCnexpoV8_.v:28$325 ($add).
Removed top 17 bits (of 18) from port B of cell SOCnexpo.$eq$SOCnexpoV8_.v:74$330 ($eq).
Removed top 2 bits (of 3) from port B of cell SOCnexpo.$eq$SOCnexpoV8_.v:77$334 ($eq).
Removed top 1 bits (of 3) from port B of cell SOCnexpo.$eq$SOCnexpoV8_.v:78$336 ($eq).
Removed top 1 bits (of 3) from port B of cell SOCnexpo.$eq$SOCnexpoV8_.v:79$338 ($eq).
Removed top 1 bits (of 32) from mux cell SOCnexpo.$procmux$763 ($pmux).
Removed top 1 bits (of 2) from port B of cell SOCnexpo.$procmux$766_CMP0 ($eq).
Removed top 12 bits (of 32) from mux cell SOCnexpo.$techmap\RV32I.$procmux$1084 ($mux).
Removed cell SOCnexpo.$techmap\RV32I.$procmux$1063 ($mux).
Removed cell SOCnexpo.$techmap\RV32I.$procmux$1059 ($mux).
Removed top 63 bits (of 64) from port B of cell SOCnexpo.$techmap\RV32I.$add$Procesador_V2.0b/RV32nexpo.v:493$321 ($add).
Removed top 31 bits (of 32) from port B of cell SOCnexpo.$techmap\RV32I.$add$Procesador_V2.0b/RV32nexpo.v:492$319 ($add).
Removed top 1 bits (of 2) from port B of cell SOCnexpo.$techmap\RV32I.$eq$Procesador_V2.0b/RV32nexpo.v:229$288 ($eq).
Removed top 1 bits (of 7) from port B of cell SOCnexpo.$techmap\RV32I.$eq$Procesador_V2.0b/RV32nexpo.v:149$274 ($eq).
Removed top 1 bits (of 7) from port B of cell SOCnexpo.$techmap\RV32I.$eq$Procesador_V2.0b/RV32nexpo.v:148$273 ($eq).
Removed top 1 bits (of 7) from port B of cell SOCnexpo.$techmap\RV32I.$eq$Procesador_V2.0b/RV32nexpo.v:147$272 ($eq).
Removed top 2 bits (of 7) from port B of cell SOCnexpo.$techmap\RV32I.$eq$Procesador_V2.0b/RV32nexpo.v:146$271 ($eq).
Removed top 2 bits (of 7) from port B of cell SOCnexpo.$techmap\RV32I.$eq$Procesador_V2.0b/RV32nexpo.v:145$270 ($eq).
Removed top 3 bits (of 7) from port B of cell SOCnexpo.$techmap\RV32I.$eq$Procesador_V2.0b/RV32nexpo.v:144$269 ($eq).
Removed top 5 bits (of 7) from port B of cell SOCnexpo.$techmap\RV32I.$eq$Procesador_V2.0b/RV32nexpo.v:143$268 ($eq).
Removed top 29 bits (of 32) from port B of cell SOCnexpo.$techmap\RV32I.$add$Procesador_V2.0b/RV32nexpo.v:100$264 ($add).
Removed top 7 bits (of 32) from FF cell SOCnexpo.$techmap\RAM.$procdff$1258 ($dff).
Removed top 8 bits (of 32) from FF cell SOCnexpo.$techmap\RAM.$procdff$1255 ($dff).
Removed top 16 bits (of 32) from FF cell SOCnexpo.$techmap\RAM.$procdff$1252 ($dff).
Removed top 24 bits (of 32) from FF cell SOCnexpo.$techmap\RAM.$procdff$1249 ($dff).
Removed cell SOCnexpo.$techmap\RAM.$procmux$688 ($mux).
Removed cell SOCnexpo.$techmap\RAM.$procmux$686 ($mux).
Removed cell SOCnexpo.$techmap\RAM.$procmux$684 ($mux).
Removed cell SOCnexpo.$techmap\RAM.$procmux$682 ($mux).
Removed cell SOCnexpo.$techmap\RAM.$procmux$676 ($mux).
Removed cell SOCnexpo.$techmap\RAM.$procmux$674 ($mux).
Removed cell SOCnexpo.$techmap\RAM.$procmux$672 ($mux).
Removed cell SOCnexpo.$techmap\RAM.$procmux$670 ($mux).
Removed cell SOCnexpo.$techmap\RAM.$procmux$664 ($mux).
Removed cell SOCnexpo.$techmap\RAM.$procmux$662 ($mux).
Removed cell SOCnexpo.$techmap\RAM.$procmux$660 ($mux).
Removed cell SOCnexpo.$techmap\RAM.$procmux$658 ($mux).
Removed cell SOCnexpo.$techmap\RAM.$procmux$652 ($mux).
Removed cell SOCnexpo.$techmap\RAM.$procmux$650 ($mux).
Removed cell SOCnexpo.$techmap\RAM.$procmux$648 ($mux).
Removed cell SOCnexpo.$techmap\RAM.$procmux$646 ($mux).
Removed top 1 bits (of 2) from port B of cell SOCnexpo.$techmap\LEDS8_4.$procmux$1120_CMP0 ($eq).
Removed top 3 bits (of 10) from port B of cell SOCnexpo.$techmap\LEDS8_4.$le$ControladorMatrizLed.v:38$3 ($le).
Removed top 31 bits (of 32) from port B of cell SOCnexpo.$techmap\LEDS8_4.$add$ControladorMatrizLed.v:28$2 ($add).
Removed top 20 bits (of 32) from port Y of cell SOCnexpo.$techmap\LEDS8_4.$add$ControladorMatrizLed.v:28$2 ($add).
Removed top 31 bits (of 32) from port B of cell SOCnexpo.$techmap\UART_TX.$add$uart.v:98$405 ($add).
Removed top 28 bits (of 32) from port Y of cell SOCnexpo.$techmap\UART_TX.$add$uart.v:98$405 ($add).
Removed top 1 bits (of 5) from port B of cell SOCnexpo.$techmap\UART_RX.$eq$uart.v:210$430 ($eq).
Removed top 31 bits (of 32) from port B of cell SOCnexpo.$techmap\UART_RX.$add$uart.v:207$429 ($add).
Removed top 27 bits (of 32) from port Y of cell SOCnexpo.$techmap\UART_RX.$add$uart.v:207$429 ($add).
Removed top 1 bits (of 7) from port B of cell SOCnexpo.$techmap\UART_RX.$eq$uart.v:176$423 ($eq).
Removed top 31 bits (of 32) from port B of cell SOCnexpo.$techmap\UART_RX.$add$uart.v:172$422 ($add).
Removed top 25 bits (of 32) from port Y of cell SOCnexpo.$techmap\UART_RX.$add$uart.v:172$422 ($add).
Removed top 26 bits (of 32) from port B of cell SOCnexpo.$techmap\UART_RX.$lt$uart.v:171$421 ($lt).
Removed top 31 bits (of 32) from mux cell SOCnexpo.$techmap\RV32I.load.$ternary$Procesador_V2.0b/interfaz_mem.v:61$259 ($mux).
Removed top 31 bits (of 32) from mux cell SOCnexpo.$techmap\RV32I.load.$ternary$Procesador_V2.0b/interfaz_mem.v:60$257 ($mux).
Removed top 2 bits (of 4) from mux cell SOCnexpo.$techmap\RV32I.store.$ternary$Procesador_V2.0b/interfaz_mem.v:35$250 ($mux).
Removed top 1 bits (of 33) from port Y of cell SOCnexpo.$techmap\RV32I.alu.$or$Procesador_V2.0b/ALU.v:63$223 ($or).
Removed top 1 bits (of 33) from port A of cell SOCnexpo.$techmap\RV32I.alu.$or$Procesador_V2.0b/ALU.v:63$223 ($or).
Removed top 1 bits (of 33) from port B of cell SOCnexpo.$techmap\RV32I.alu.$or$Procesador_V2.0b/ALU.v:63$223 ($or).
Removed top 1 bits (of 33) from mux cell SOCnexpo.$techmap\RV32I.alu.$ternary$Procesador_V2.0b/ALU.v:63$222 ($mux).
Removed top 1 bits (of 33) from port Y of cell SOCnexpo.$techmap\RV32I.alu.$and$Procesador_V2.0b/ALU.v:63$220 ($and).
Removed top 1 bits (of 33) from port Y of cell SOCnexpo.$techmap\RV32I.alu.$or$Procesador_V2.0b/ALU.v:62$219 ($or).
Removed top 1 bits (of 33) from port A of cell SOCnexpo.$techmap\RV32I.alu.$or$Procesador_V2.0b/ALU.v:62$219 ($or).
Removed top 1 bits (of 33) from port B of cell SOCnexpo.$techmap\RV32I.alu.$or$Procesador_V2.0b/ALU.v:62$219 ($or).
Removed top 1 bits (of 33) from mux cell SOCnexpo.$techmap\RV32I.alu.$ternary$Procesador_V2.0b/ALU.v:62$218 ($mux).
Removed top 1 bits (of 33) from port Y of cell SOCnexpo.$techmap\RV32I.alu.$or$Procesador_V2.0b/ALU.v:62$216 ($or).
Removed top 1 bits (of 33) from port B of cell SOCnexpo.$techmap\RV32I.alu.$or$Procesador_V2.0b/ALU.v:61$215 ($or).
Removed top 1 bits (of 33) from port Y of cell SOCnexpo.$techmap\RV32I.alu.$or$Procesador_V2.0b/ALU.v:61$215 ($or).
Removed top 1 bits (of 33) from port A of cell SOCnexpo.$techmap\RV32I.alu.$or$Procesador_V2.0b/ALU.v:61$215 ($or).
Removed top 1 bits (of 33) from port Y of cell SOCnexpo.$techmap\RV32I.alu.$or$Procesador_V2.0b/ALU.v:60$213 ($or).
Removed top 1 bits (of 33) from port A of cell SOCnexpo.$techmap\RV32I.alu.$or$Procesador_V2.0b/ALU.v:60$213 ($or).
Removed top 1 bits (of 33) from port B of cell SOCnexpo.$techmap\RV32I.alu.$or$Procesador_V2.0b/ALU.v:60$213 ($or).
Removed top 1 bits (of 33) from mux cell SOCnexpo.$techmap\RV32I.alu.$ternary$Procesador_V2.0b/ALU.v:60$212 ($mux).
Removed top 1 bits (of 33) from port Y of cell SOCnexpo.$techmap\RV32I.alu.$xor$Procesador_V2.0b/ALU.v:60$210 ($xor).
Removed top 1 bits (of 33) from port Y of cell SOCnexpo.$techmap\RV32I.alu.$or$Procesador_V2.0b/ALU.v:59$209 ($or).
Removed top 1 bits (of 33) from port A of cell SOCnexpo.$techmap\RV32I.alu.$or$Procesador_V2.0b/ALU.v:59$209 ($or).
Removed top 1 bits (of 33) from port B of cell SOCnexpo.$techmap\RV32I.alu.$or$Procesador_V2.0b/ALU.v:59$209 ($or).
Removed top 32 bits (of 33) from mux cell SOCnexpo.$techmap\RV32I.alu.$ternary$Procesador_V2.0b/ALU.v:59$208 ($mux).
Removed top 1 bits (of 33) from port Y of cell SOCnexpo.$techmap\RV32I.alu.$or$Procesador_V2.0b/ALU.v:58$206 ($or).
Removed top 1 bits (of 33) from port A of cell SOCnexpo.$techmap\RV32I.alu.$or$Procesador_V2.0b/ALU.v:58$206 ($or).
Removed top 1 bits (of 33) from port B of cell SOCnexpo.$techmap\RV32I.alu.$or$Procesador_V2.0b/ALU.v:58$206 ($or).
Removed top 32 bits (of 33) from mux cell SOCnexpo.$techmap\RV32I.alu.$ternary$Procesador_V2.0b/ALU.v:58$205 ($mux).
Removed top 1 bits (of 33) from port B of cell SOCnexpo.$techmap\RV32I.alu.$or$Procesador_V2.0b/ALU.v:57$203 ($or).
Removed top 1 bits (of 33) from port Y of cell SOCnexpo.$techmap\RV32I.alu.$or$Procesador_V2.0b/ALU.v:57$203 ($or).
Removed top 1 bits (of 33) from port A of cell SOCnexpo.$techmap\RV32I.alu.$or$Procesador_V2.0b/ALU.v:57$203 ($or).
Removed top 1 bits (of 33) from mux cell SOCnexpo.$techmap\RV32I.alu.$ternary$Procesador_V2.0b/ALU.v:56$201 ($mux).
Removed top 1 bits (of 33) from mux cell SOCnexpo.$techmap\RV32I.alu.$ternary$Procesador_V2.0b/ALU.v:56$199 ($mux).
Removed top 1 bits (of 33) from port Y of cell SOCnexpo.$techmap\RV32I.alu.$add$Procesador_V2.0b/ALU.v:56$198 ($add).
Removed top 1 bits (of 33) from port A of cell SOCnexpo.$techmap\RV32I.alu.$add$Procesador_V2.0b/ALU.v:47$191 ($add).
Removed top 32 bits (of 33) from port B of cell SOCnexpo.$techmap\RV32I.alu.$add$Procesador_V2.0b/ALU.v:47$190 ($add).
Removed top 1 bits (of 33) from port Y of cell SOCnexpo.$techmap\RV32I.alu.$sshr$Procesador_V2.0b/ALU.v:38$188 ($sshr).
Removed top 7 bits (of 8) from port A of cell SOCnexpo.$techmap\RV32I.alu.$shl$Procesador_V2.0b/ALU.v:31$185 ($shl).
Removed top 31 bits (of 32) from FF cell SOCnexpo.$techmap\RV32I.reg32.$procdff$1320 ($dff).
Removed cell SOCnexpo.$techmap\RV32I.reg32.$procmux$1114 ($mux).
Removed cell SOCnexpo.$techmap\RV32I.reg32.$procmux$1112 ($mux).
Removed top 31 bits (of 32) from port B of cell SOCnexpo.$techmap\UART_TX.bclk.$add$uart.v:39$602 ($add).
Removed top 25 bits (of 32) from port Y of cell SOCnexpo.$techmap\UART_TX.bclk.$add$uart.v:39$602 ($add).
Removed top 31 bits (of 32) from port B of cell SOCnexpo.$techmap\UART_RX.bclk.$add$uart.v:39$602 ($add).
Removed top 25 bits (of 32) from port Y of cell SOCnexpo.$techmap\UART_RX.bclk.$add$uart.v:39$602 ($add).
Removed top 12 bits (of 32) from mux cell SOCnexpo.$techmap\RV32I.$procmux$1086 ($mux).
Removed top 7 bits (of 24) from FF cell SOCnexpo.$techmap\RAM.$procdff$1255 ($dff).
Removed top 7 bits (of 16) from FF cell SOCnexpo.$techmap\RAM.$procdff$1252 ($dff).
Removed top 7 bits (of 8) from FF cell SOCnexpo.$techmap\RAM.$procdff$1249 ($dff).
Removed top 12 bits (of 32) from mux cell SOCnexpo.$techmap\RV32I.$procmux$1088 ($mux).
Removed top 1 bits (of 32) from mux cell SOCnexpo.$techmap\RV32I.$procmux$1090 ($mux).
Removed top 1 bits (of 32) from mux cell SOCnexpo.$techmap\RV32I.$procmux$1092 ($mux).
Removed top 20 bits (of 32) from wire SOCnexpo.$techmap\LEDS8_4.$add$ControladorMatrizLed.v:28$2_Y.
Removed top 24 bits (of 32) from wire SOCnexpo.$techmap\RAM.$0$memwr$\memArray$SOCnexpoV8_.v:263$568_EN[31:0]$582.
Removed top 16 bits (of 32) from wire SOCnexpo.$techmap\RAM.$0$memwr$\memArray$SOCnexpoV8_.v:264$569_DATA[31:0]$584.
Removed top 16 bits (of 32) from wire SOCnexpo.$techmap\RAM.$0$memwr$\memArray$SOCnexpoV8_.v:264$569_EN[31:0]$585.
Removed top 8 bits (of 32) from wire SOCnexpo.$techmap\RAM.$0$memwr$\memArray$SOCnexpoV8_.v:265$570_DATA[31:0]$587.
Removed top 8 bits (of 32) from wire SOCnexpo.$techmap\RAM.$0$memwr$\memArray$SOCnexpoV8_.v:265$570_EN[31:0]$588.
Removed top 24 bits (of 32) from wire SOCnexpo.$techmap\RAM.$procmux$642_Y.
Removed top 16 bits (of 32) from wire SOCnexpo.$techmap\RAM.$procmux$654_Y.
Removed top 16 bits (of 32) from wire SOCnexpo.$techmap\RAM.$procmux$658_Y.
Removed top 8 bits (of 32) from wire SOCnexpo.$techmap\RAM.$procmux$666_Y.
Removed top 8 bits (of 32) from wire SOCnexpo.$techmap\RAM.$procmux$670_Y.
Removed top 63 bits (of 64) from wire SOCnexpo.$techmap\RV32I.$logic_not$Procesador_V2.0b/RV32nexpo.v:493$320_Y.
Removed top 1 bits (of 33) from wire SOCnexpo.$techmap\RV32I.alu.$add$Procesador_V2.0b/ALU.v:56$198_Y.
Removed top 1 bits (of 33) from wire SOCnexpo.$techmap\RV32I.alu.$and$Procesador_V2.0b/ALU.v:63$220_Y.
Removed top 1 bits (of 33) from wire SOCnexpo.$techmap\RV32I.alu.$or$Procesador_V2.0b/ALU.v:57$203_Y.
Removed top 25 bits (of 33) from wire SOCnexpo.$techmap\RV32I.alu.$or$Procesador_V2.0b/ALU.v:61$215_Y.
Removed top 1 bits (of 33) from wire SOCnexpo.$techmap\RV32I.alu.$or$Procesador_V2.0b/ALU.v:62$216_Y.
Removed top 1 bits (of 33) from wire SOCnexpo.$techmap\RV32I.alu.$or$Procesador_V2.0b/ALU.v:62$219_Y.
Removed top 10 bits (of 33) from wire SOCnexpo.$techmap\RV32I.alu.$ternary$Procesador_V2.0b/ALU.v:56$199_Y.
Removed top 9 bits (of 33) from wire SOCnexpo.$techmap\RV32I.alu.$ternary$Procesador_V2.0b/ALU.v:56$201_Y.
Removed top 8 bits (of 32) from wire SOCnexpo.$techmap\RV32I.alu.$ternary$Procesador_V2.0b/ALU.v:57$202_Y.
Removed top 9 bits (of 33) from wire SOCnexpo.$techmap\RV32I.alu.$ternary$Procesador_V2.0b/ALU.v:62$218_Y.
Removed top 25 bits (of 32) from wire SOCnexpo.$techmap\UART_RX.$add$uart.v:172$422_Y.
Removed top 27 bits (of 32) from wire SOCnexpo.$techmap\UART_RX.$add$uart.v:207$429_Y.
Removed top 25 bits (of 32) from wire SOCnexpo.$techmap\UART_RX.bclk.$add$uart.v:39$602_Y.
Removed top 31 bits (of 32) from wire SOCnexpo.$techmap\UART_TX.bclk.$add$uart.v:39$602_Y.
Removed top 1 bits (of 8) from wire SOCnexpo.RV32I.D_funct7.
Removed top 1 bits (of 8) from wire SOCnexpo.RV32I.D_opcode.
Removed top 23 bits (of 32) from wire SOCnexpo.UART_data.
Removed top 1 bits (of 32) from wire SOCnexpo.palabra.

4.12. Executing PEEPOPT pass (run peephole optimizers).

4.13. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \SOCnexpo..
Removed 0 unused cells and 55 unused wires.

4.14. Executing SHARE pass (SAT-based resource sharing).
Found 2 cells in module SOCnexpo that may be considered for resource sharing.
Analyzing resource sharing options for $techmap\RV32I.alu.$sshr$Procesador_V2.0b/ALU.v:38$188 ($sshr):
Found 4 activation_patterns using ctrl signal { \RV32I.alu.funcionIs [5] \RV32I.alu.funcionIs [1] \RV32I.DE_isJALR \RV32I.E_Jump \RV32I.E_JumpOrBranch \rst }.
No candidates found.
Analyzing resource sharing options for $techmap\RV32I.alu.$shl$Procesador_V2.0b/ALU.v:31$185 ($shl):
Found 7 activation_patterns using ctrl signal { \RV32I.alu.funcionIs [5] \RV32I.alu.funcionIs [1] \RV32I.DE_isJALR \RV32I.E_Jump \RV32I.E_JumpOrBranch \rst }.
No candidates found.

4.15. Executing TECHMAP pass (map to technology primitives).

4.15.1. Executing Verilog-2005 frontend: /home/jfdava/.apio/packages/toolchain-yosys/bin/../share/yosys/cmp2lut.v
Parsing Verilog input from `/home/jfdava/.apio/packages/toolchain-yosys/bin/../share/yosys/cmp2lut.v' to AST representation.
Generating RTLIL representation for module `\_90_lut_cmp_'.
Successfully finished Verilog frontend.

4.15.2. Continuing TECHMAP pass.
No more expansions possible.

4.16. Executing OPT_EXPR pass (perform const folding).
Optimizing module SOCnexpo.

4.17. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \SOCnexpo..
Removed 0 unused cells and 6 unused wires.

4.18. Executing ALUMACC pass (create $alu and $macc cells).
Extracting $alu and $macc cells in module SOCnexpo:
creating $macc model for $add$SOCnexpoV8_.v:28$325 ($add).
creating $macc model for $techmap\LEDS8_4.$add$ControladorMatrizLed.v:28$2 ($add).
creating $macc model for $techmap\RV32I.$add$Procesador_V2.0b/RV32nexpo.v:100$264 ($add).
creating $macc model for $techmap\RV32I.$add$Procesador_V2.0b/RV32nexpo.v:347$298 ($add).
creating $macc model for $techmap\RV32I.$add$Procesador_V2.0b/RV32nexpo.v:492$319 ($add).
creating $macc model for $techmap\RV32I.$add$Procesador_V2.0b/RV32nexpo.v:493$321 ($add).
creating $macc model for $techmap\RV32I.alu.$add$Procesador_V2.0b/ALU.v:47$190 ($add).
creating $macc model for $techmap\RV32I.alu.$add$Procesador_V2.0b/ALU.v:47$191 ($add).
creating $macc model for $techmap\RV32I.alu.$add$Procesador_V2.0b/ALU.v:56$198 ($add).
creating $macc model for $techmap\UART_RX.$add$uart.v:172$422 ($add).
creating $macc model for $techmap\UART_RX.$add$uart.v:207$429 ($add).
creating $macc model for $techmap\UART_RX.bclk.$add$uart.v:39$602 ($add).
creating $macc model for $techmap\UART_TX.$add$uart.v:98$405 ($add).
creating $macc model for $techmap\UART_TX.bclk.$add$uart.v:39$602 ($add).
merging $macc model for $techmap\RV32I.alu.$add$Procesador_V2.0b/ALU.v:47$190 into $techmap\RV32I.alu.$add$Procesador_V2.0b/ALU.v:47$191.
creating $alu model for $macc $techmap\UART_TX.$add$uart.v:98$405.
creating $alu model for $macc $techmap\UART_RX.bclk.$add$uart.v:39$602.
creating $alu model for $macc $techmap\UART_RX.$add$uart.v:207$429.
creating $alu model for $macc $techmap\UART_RX.$add$uart.v:172$422.
creating $alu model for $macc $techmap\RV32I.alu.$add$Procesador_V2.0b/ALU.v:56$198.
creating $alu model for $macc $techmap\RV32I.alu.$add$Procesador_V2.0b/ALU.v:47$191.
creating $alu model for $macc $techmap\UART_TX.bclk.$add$uart.v:39$602.
creating $alu model for $macc $techmap\RV32I.$add$Procesador_V2.0b/RV32nexpo.v:493$321.
creating $alu model for $macc $techmap\RV32I.$add$Procesador_V2.0b/RV32nexpo.v:492$319.
creating $alu model for $macc $techmap\RV32I.$add$Procesador_V2.0b/RV32nexpo.v:347$298.
creating $alu model for $macc $techmap\RV32I.$add$Procesador_V2.0b/RV32nexpo.v:100$264.
creating $alu model for $macc $techmap\LEDS8_4.$add$ControladorMatrizLed.v:28$2.
creating $alu model for $macc $add$SOCnexpoV8_.v:28$325.
creating $alu model for $techmap\LEDS8_4.$le$ControladorMatrizLed.v:38$3 ($le): new $alu
creating $alu model for $techmap\UART_RX.$lt$uart.v:171$421 ($lt): new $alu
creating $alu model for $techmap\UART_RX.$eq$uart.v:176$423 ($eq): merged with $techmap\UART_RX.$lt$uart.v:171$421.
creating $alu cell for $techmap\UART_RX.$lt$uart.v:171$421, $techmap\UART_RX.$eq$uart.v:176$423: $auto$alumacc.cc:485:replace_alu$1360
creating $alu cell for $techmap\LEDS8_4.$le$ControladorMatrizLed.v:38$3: $auto$alumacc.cc:485:replace_alu$1371
creating $alu cell for $add$SOCnexpoV8_.v:28$325: $auto$alumacc.cc:485:replace_alu$1384
creating $alu cell for $techmap\LEDS8_4.$add$ControladorMatrizLed.v:28$2: $auto$alumacc.cc:485:replace_alu$1387
creating $alu cell for $techmap\RV32I.$add$Procesador_V2.0b/RV32nexpo.v:100$264: $auto$alumacc.cc:485:replace_alu$1390
creating $alu cell for $techmap\RV32I.$add$Procesador_V2.0b/RV32nexpo.v:347$298: $auto$alumacc.cc:485:replace_alu$1393
creating $alu cell for $techmap\RV32I.$add$Procesador_V2.0b/RV32nexpo.v:492$319: $auto$alumacc.cc:485:replace_alu$1396
creating $alu cell for $techmap\RV32I.$add$Procesador_V2.0b/RV32nexpo.v:493$321: $auto$alumacc.cc:485:replace_alu$1399
creating $alu cell for $techmap\UART_TX.bclk.$add$uart.v:39$602: $auto$alumacc.cc:485:replace_alu$1402
creating $alu cell for $techmap\RV32I.alu.$add$Procesador_V2.0b/ALU.v:47$191: $auto$alumacc.cc:485:replace_alu$1405
creating $alu cell for $techmap\RV32I.alu.$add$Procesador_V2.0b/ALU.v:56$198: $auto$alumacc.cc:485:replace_alu$1408
creating $alu cell for $techmap\UART_RX.$add$uart.v:172$422: $auto$alumacc.cc:485:replace_alu$1411
creating $alu cell for $techmap\UART_RX.$add$uart.v:207$429: $auto$alumacc.cc:485:replace_alu$1414
creating $alu cell for $techmap\UART_RX.bclk.$add$uart.v:39$602: $auto$alumacc.cc:485:replace_alu$1417
creating $alu cell for $techmap\UART_TX.$add$uart.v:98$405: $auto$alumacc.cc:485:replace_alu$1420
created 15 $alu and 0 $macc cells.

4.19. Executing OPT pass (performing simple optimizations).

4.19.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module SOCnexpo.

4.19.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\SOCnexpo'.
Removed a total of 3 cells.

4.19.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \SOCnexpo..
Creating internal representation of mux trees.
Evaluating internal representation of mux trees.
Analyzing evaluation results.
Removed 0 multiplexer ports.

4.19.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
Optimizing cells in module \SOCnexpo.
New input vector for $reduce_or cell $auto$alumacc.cc:520:replace_alu$1382: { $auto$rtlil.cc:1862:Not$1381 $auto$rtlil.cc:1865:ReduceAnd$1377 }
New input vector for $reduce_and cell $auto$alumacc.cc:75:get_eq$1376: { $auto$alumacc.cc:501:replace_alu$1372 [0] $auto$alumacc.cc:501:replace_alu$1372 [1] $auto$alumacc.cc:501:replace_alu$1372 [2] $auto$alumacc.cc:501:replace_alu$1372 [3] $auto$alumacc.cc:501:replace_alu$1372 [4] $auto$alumacc.cc:501:replace_alu$1372 [5] $auto$alumacc.cc:501:replace_alu$1372 [6] $auto$alumacc.cc:501:replace_alu$1372 [7] $auto$alumacc.cc:501:replace_alu$1372 [8] $auto$alumacc.cc:501:replace_alu$1372 [9] }
New input vector for $reduce_and cell $auto$alumacc.cc:75:get_eq$1365: { $auto$alumacc.cc:501:replace_alu$1361 [0] $auto$alumacc.cc:501:replace_alu$1361 [1] $auto$alumacc.cc:501:replace_alu$1361 [2] $auto$alumacc.cc:501:replace_alu$1361 [3] $auto$alumacc.cc:501:replace_alu$1361 [4] $auto$alumacc.cc:501:replace_alu$1361 [5] $auto$alumacc.cc:501:replace_alu$1361 [6] }
Optimizing cells in module \SOCnexpo.
Performed a total of 3 changes.

4.19.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\SOCnexpo'.
Removed a total of 0 cells.

4.19.6. Executing OPT_RMDFF pass (remove dff with constant values).

4.19.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \SOCnexpo..
Removed 2 unused cells and 8 unused wires.

4.19.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module SOCnexpo.

4.19.9. Rerunning OPT passes. (Maybe there is more to do..)

4.19.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \SOCnexpo..
Creating internal representation of mux trees.
Evaluating internal representation of mux trees.
Analyzing evaluation results.
Removed 0 multiplexer ports.

4.19.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
Optimizing cells in module \SOCnexpo.
Performed a total of 0 changes.

4.19.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\SOCnexpo'.
Removed a total of 0 cells.

4.19.13. Executing OPT_RMDFF pass (remove dff with constant values).

4.19.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \SOCnexpo..

4.19.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module SOCnexpo.

4.19.16. Finished OPT passes. (There is nothing left to do.)

4.20. Executing FSM pass (extract and optimize FSM).

4.20.1. Executing FSM_DETECT pass (finding FSMs in design).
Not marking SOCnexpo.LEDS8_4.act_row as FSM state register:
Register is connected to module port.
Users of register don't seem to benefit from recoding.

4.20.2. Executing FSM_EXTRACT pass (extracting FSM from design).

4.20.3. Executing FSM_OPT pass (simple optimizations of FSMs).

4.20.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \SOCnexpo..

4.20.5. Executing FSM_OPT pass (simple optimizations of FSMs).

4.20.6. Executing FSM_RECODE pass (re-assigning FSM state encoding).

4.20.7. Executing FSM_INFO pass (dumping all available information on FSM cells).

4.20.8. Executing FSM_MAP pass (mapping FSMs to basic logic).

4.21. Executing OPT pass (performing simple optimizations).

4.21.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module SOCnexpo.

4.21.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\SOCnexpo'.
Removed a total of 0 cells.

4.21.3. Executing OPT_RMDFF pass (remove dff with constant values).

4.21.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \SOCnexpo..

4.21.5. Finished fast OPT passes.

4.22. Executing MEMORY pass.

4.22.1. Executing OPT_MEM pass (optimize memories).
Performed a total of 0 transformations.

4.22.2. Executing MEMORY_DFF pass (merging $dff cells to $memrd and $memwr).
Checking cell `$techmap\RAM.$memwr$\memArray$SOCnexpoV8_.v:263$594' in module `\SOCnexpo': merged $dff to cell.
Checking cell `$techmap\RAM.$memwr$\memArray$SOCnexpoV8_.v:264$595' in module `\SOCnexpo': merged $dff to cell.
Checking cell `$techmap\RAM.$memwr$\memArray$SOCnexpoV8_.v:265$596' in module `\SOCnexpo': merged $dff to cell.
Checking cell `$techmap\RAM.$memwr$\memArray$SOCnexpoV8_.v:266$597' in module `\SOCnexpo': merged $dff to cell.
Checking cell `$techmap\RV32I.reg32.$memwr$\WORKREG$Procesador_V2.0b/registros_32.v:43$116' in module `\SOCnexpo': merged $dff to cell.
Checking cell `$memrd$\MEMROM$SOCnexpoV8_.v:47$329' in module `\SOCnexpo': merged data $dff to cell.
Checking cell `$techmap\RAM.$memrd$\memArray$SOCnexpoV8_.v:268$592' in module `\SOCnexpo': merged data $dff to cell.
Checking cell `$techmap\RV32I.reg32.$memrd$\WORKREG$Procesador_V2.0b/registros_32.v:35$78' in module `\SOCnexpo': merged data $dff to cell.
Checking cell `$techmap\RV32I.reg32.$memrd$\WORKREG$Procesador_V2.0b/registros_32.v:38$79' in module `\SOCnexpo': merged data $dff to cell.

4.22.3. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \SOCnexpo..
Removed 16 unused cells and 22 unused wires.

4.22.4. Executing MEMORY_SHARE pass (consolidating $memrd/$memwr cells).
Consolidating write ports of memory SOCnexpo.RAM.memArray by address:
New clock domain: posedge \clk12MHz
Port 0 ($techmap\RAM.$memwr$\memArray$SOCnexpoV8_.v:263$594) has addr \RV32I.EM_resultado [12:2].
Active bits: 00000000000000000000000011111111
Port 1 ($techmap\RAM.$memwr$\memArray$SOCnexpoV8_.v:264$595) has addr \RV32I.EM_resultado [12:2].
Active bits: 00000000000000001111111100000000
Merging port 0 into this one.
Active bits: 00000000000000001111111111111111
Port 2 ($techmap\RAM.$memwr$\memArray$SOCnexpoV8_.v:265$596) has addr \RV32I.EM_resultado [12:2].
Active bits: 00000000111111110000000000000000
Merging port 1 into this one.
Active bits: 00000000111111111111111111111111
Port 3 ($techmap\RAM.$memwr$\memArray$SOCnexpoV8_.v:266$597) has addr \RV32I.EM_resultado [12:2].
Active bits: 11111111000000000000000000000000
Merging port 2 into this one.
Active bits: 11111111111111111111111111111111

4.22.5. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \SOCnexpo..

4.22.6. Executing MEMORY_COLLECT pass (generating $mem cells).
Collecting $memrd, $memwr and $meminit for memory `\MEMROM' in module `\SOCnexpo':
$meminit$\MEMROM$SOCnexpoV8_.v:42$356 ($meminit)
$memrd$\MEMROM$SOCnexpoV8_.v:47$329 ($memrd)
Collecting $memrd, $memwr and $meminit for memory `\RAM.memArray' in module `\SOCnexpo':
$techmap\RAM.$meminit$\memArray$SOCnexpoV8_.v:258$593 ($meminit)
$techmap\RAM.$memwr$\memArray$SOCnexpoV8_.v:266$597 ($memwr)
$techmap\RAM.$memrd$\memArray$SOCnexpoV8_.v:268$592 ($memrd)
Collecting $memrd, $memwr and $meminit for memory `\RV32I.reg32.WORKREG' in module `\SOCnexpo':
$techmap\RV32I.reg32.$meminit$\WORKREG$Procesador_V2.0b/registros_32.v:30$84 ($meminit)
$techmap\RV32I.reg32.$meminit$\WORKREG$Procesador_V2.0b/registros_32.v:30$85 ($meminit)
$techmap\RV32I.reg32.$meminit$\WORKREG$Procesador_V2.0b/registros_32.v:30$86 ($meminit)
$techmap\RV32I.reg32.$meminit$\WORKREG$Procesador_V2.0b/registros_32.v:30$87 ($meminit)
$techmap\RV32I.reg32.$meminit$\WORKREG$Procesador_V2.0b/registros_32.v:30$88 ($meminit)
$techmap\RV32I.reg32.$meminit$\WORKREG$Procesador_V2.0b/registros_32.v:30$89 ($meminit)
$techmap\RV32I.reg32.$meminit$\WORKREG$Procesador_V2.0b/registros_32.v:30$90 ($meminit)
$techmap\RV32I.reg32.$meminit$\WORKREG$Procesador_V2.0b/registros_32.v:30$91 ($meminit)
$techmap\RV32I.reg32.$meminit$\WORKREG$Procesador_V2.0b/registros_32.v:30$92 ($meminit)
$techmap\RV32I.reg32.$meminit$\WORKREG$Procesador_V2.0b/registros_32.v:30$93 ($meminit)
$techmap\RV32I.reg32.$meminit$\WORKREG$Procesador_V2.0b/registros_32.v:30$94 ($meminit)
$techmap\RV32I.reg32.$meminit$\WORKREG$Procesador_V2.0b/registros_32.v:30$95 ($meminit)
$techmap\RV32I.reg32.$meminit$\WORKREG$Procesador_V2.0b/registros_32.v:30$96 ($meminit)
$techmap\RV32I.reg32.$meminit$\WORKREG$Procesador_V2.0b/registros_32.v:30$97 ($meminit)
$techmap\RV32I.reg32.$meminit$\WORKREG$Procesador_V2.0b/registros_32.v:30$98 ($meminit)
$techmap\RV32I.reg32.$meminit$\WORKREG$Procesador_V2.0b/registros_32.v:30$99 ($meminit)
$techmap\RV32I.reg32.$meminit$\WORKREG$Procesador_V2.0b/registros_32.v:30$100 ($meminit)
$techmap\RV32I.reg32.$meminit$\WORKREG$Procesador_V2.0b/registros_32.v:30$101 ($meminit)
$techmap\RV32I.reg32.$meminit$\WORKREG$Procesador_V2.0b/registros_32.v:30$102 ($meminit)
$techmap\RV32I.reg32.$meminit$\WORKREG$Procesador_V2.0b/registros_32.v:30$103 ($meminit)
$techmap\RV32I.reg32.$meminit$\WORKREG$Procesador_V2.0b/registros_32.v:30$104 ($meminit)
$techmap\RV32I.reg32.$meminit$\WORKREG$Procesador_V2.0b/registros_32.v:30$105 ($meminit)
$techmap\RV32I.reg32.$meminit$\WORKREG$Procesador_V2.0b/registros_32.v:30$106 ($meminit)
$techmap\RV32I.reg32.$meminit$\WORKREG$Procesador_V2.0b/registros_32.v:30$107 ($meminit)
$techmap\RV32I.reg32.$meminit$\WORKREG$Procesador_V2.0b/registros_32.v:30$108 ($meminit)
$techmap\RV32I.reg32.$meminit$\WORKREG$Procesador_V2.0b/registros_32.v:30$109 ($meminit)
$techmap\RV32I.reg32.$meminit$\WORKREG$Procesador_V2.0b/registros_32.v:30$110 ($meminit)
$techmap\RV32I.reg32.$meminit$\WORKREG$Procesador_V2.0b/registros_32.v:30$111 ($meminit)
$techmap\RV32I.reg32.$meminit$\WORKREG$Procesador_V2.0b/registros_32.v:30$112 ($meminit)
$techmap\RV32I.reg32.$meminit$\WORKREG$Procesador_V2.0b/registros_32.v:30$113 ($meminit)
$techmap\RV32I.reg32.$meminit$\WORKREG$Procesador_V2.0b/registros_32.v:30$114 ($meminit)
$techmap\RV32I.reg32.$meminit$\WORKREG$Procesador_V2.0b/registros_32.v:30$115 ($meminit)
$techmap\RV32I.reg32.$memwr$\WORKREG$Procesador_V2.0b/registros_32.v:43$116 ($memwr)
$techmap\RV32I.reg32.$memrd$\WORKREG$Procesador_V2.0b/registros_32.v:38$79 ($memrd)
$techmap\RV32I.reg32.$memrd$\WORKREG$Procesador_V2.0b/registros_32.v:35$78 ($memrd)

4.23. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \SOCnexpo..

4.24. Executing MEMORY_BRAM pass (mapping $mem cells to block memories).
Processing SOCnexpo.MEMROM:
Properties: ports=1 bits=65536 rports=1 wports=0 dbits=32 abits=11 words=2048
Checking rule #1 for bram type $__ICE40_RAM4K_M0 (variant 1):
Bram geometry: abits=8 dbits=16 wports=0 rports=0
Estimated number of duplicates for more read ports: dups=1
Metrics for $__ICE40_RAM4K_M0: awaste=0 dwaste=0 bwaste=0 waste=0 efficiency=100
Rule #1 for bram type $__ICE40_RAM4K_M0 (variant 1) accepted.
Mapping to bram type $__ICE40_RAM4K_M0 (variant 1):
Read port #0 is in clock domain \clk12MHz.
Mapped to bram port A1.1.
Updated properties: dups=1 waste=0 efficiency=100
Storing for later selection.
Checking rule #2 for bram type $__ICE40_RAM4K_M123 (variant 1):
Bram geometry: abits=9 dbits=8 wports=0 rports=0
Estimated number of duplicates for more read ports: dups=1
Metrics for $__ICE40_RAM4K_M123: awaste=0 dwaste=0 bwaste=0 waste=0 efficiency=100
Rule #2 for bram type $__ICE40_RAM4K_M123 (variant 1) accepted.
Mapping to bram type $__ICE40_RAM4K_M123 (variant 1):
Read port #0 is in clock domain \clk12MHz.
Mapped to bram port A1.1.
Updated properties: dups=1 waste=0 efficiency=100
Storing for later selection.
Checking rule #2 for bram type $__ICE40_RAM4K_M123 (variant 2):
Bram geometry: abits=10 dbits=4 wports=0 rports=0
Estimated number of duplicates for more read ports: dups=1
Metrics for $__ICE40_RAM4K_M123: awaste=0 dwaste=0 bwaste=0 waste=0 efficiency=100
Rule #2 for bram type $__ICE40_RAM4K_M123 (variant 2) accepted.
Mapping to bram type $__ICE40_RAM4K_M123 (variant 2):
Read port #0 is in clock domain \clk12MHz.
Mapped to bram port A1.1.
Updated properties: dups=1 waste=0 efficiency=100
Storing for later selection.
Checking rule #2 for bram type $__ICE40_RAM4K_M123 (variant 3):
Bram geometry: abits=11 dbits=2 wports=0 rports=0
Estimated number of duplicates for more read ports: dups=1
Metrics for $__ICE40_RAM4K_M123: awaste=0 dwaste=0 bwaste=0 waste=0 efficiency=100
Rule #2 for bram type $__ICE40_RAM4K_M123 (variant 3) accepted.
Mapping to bram type $__ICE40_RAM4K_M123 (variant 3):
Read port #0 is in clock domain \clk12MHz.
Mapped to bram port A1.1.
Updated properties: dups=1 waste=0 efficiency=100
Storing for later selection.
Selecting best of 4 rules:
Efficiency for rule 2.3: efficiency=100, cells=16, acells=1
Efficiency for rule 2.2: efficiency=100, cells=16, acells=2
Efficiency for rule 2.1: efficiency=100, cells=16, acells=4
Efficiency for rule 1.1: efficiency=100, cells=16, acells=8
Selected rule 2.3 with efficiency 100.
Mapping to bram type $__ICE40_RAM4K_M123 (variant 3):
Read port #0 is in clock domain \clk12MHz.
Mapped to bram port A1.1.
Creating $__ICE40_RAM4K_M123 cell at grid position <0 0 0>: MEMROM.0.0.0
Creating $__ICE40_RAM4K_M123 cell at grid position <1 0 0>: MEMROM.1.0.0
Creating $__ICE40_RAM4K_M123 cell at grid position <2 0 0>: MEMROM.2.0.0
Creating $__ICE40_RAM4K_M123 cell at grid position <3 0 0>: MEMROM.3.0.0
Creating $__ICE40_RAM4K_M123 cell at grid position <4 0 0>: MEMROM.4.0.0
Creating $__ICE40_RAM4K_M123 cell at grid position <5 0 0>: MEMROM.5.0.0
Creating $__ICE40_RAM4K_M123 cell at grid position <6 0 0>: MEMROM.6.0.0
Creating $__ICE40_RAM4K_M123 cell at grid position <7 0 0>: MEMROM.7.0.0
Creating $__ICE40_RAM4K_M123 cell at grid position <8 0 0>: MEMROM.8.0.0
Creating $__ICE40_RAM4K_M123 cell at grid position <9 0 0>: MEMROM.9.0.0
Creating $__ICE40_RAM4K_M123 cell at grid position <10 0 0>: MEMROM.10.0.0
Creating $__ICE40_RAM4K_M123 cell at grid position <11 0 0>: MEMROM.11.0.0
Creating $__ICE40_RAM4K_M123 cell at grid position <12 0 0>: MEMROM.12.0.0
Creating $__ICE40_RAM4K_M123 cell at grid position <13 0 0>: MEMROM.13.0.0
Creating $__ICE40_RAM4K_M123 cell at grid position <14 0 0>: MEMROM.14.0.0
Creating $__ICE40_RAM4K_M123 cell at grid position <15 0 0>: MEMROM.15.0.0
Processing SOCnexpo.RAM.memArray:
Properties: ports=2 bits=65536 rports=1 wports=1 dbits=32 abits=11 words=2048
Checking rule #1 for bram type $__ICE40_RAM4K_M0 (variant 1):
Bram geometry: abits=8 dbits=16 wports=0 rports=0
Estimated number of duplicates for more read ports: dups=1
Metrics for $__ICE40_RAM4K_M0: awaste=0 dwaste=0 bwaste=0 waste=0 efficiency=100
Rule #1 for bram type $__ICE40_RAM4K_M0 (variant 1) accepted.
Mapping to bram type $__ICE40_RAM4K_M0 (variant 1):
Write port #0 is in clock domain \clk12MHz.
Mapped to bram port B1.
Read port #0 is in clock domain \clk12MHz.
Mapped to bram port A1.1.
Updated properties: dups=1 waste=0 efficiency=100
Storing for later selection.
Checking rule #2 for bram type $__ICE40_RAM4K_M123 (variant 1):
Bram geometry: abits=9 dbits=8 wports=0 rports=0
Estimated number of duplicates for more read ports: dups=1
Metrics for $__ICE40_RAM4K_M123: awaste=0 dwaste=0 bwaste=0 waste=0 efficiency=100
Rule #2 for bram type $__ICE40_RAM4K_M123 (variant 1) accepted.
Mapping to bram type $__ICE40_RAM4K_M123 (variant 1):
Write port #0 is in clock domain \clk12MHz.
Mapped to bram port B1.
Read port #0 is in clock domain \clk12MHz.
Mapped to bram port A1.1.
Updated properties: dups=1 waste=0 efficiency=100
Storing for later selection.
Checking rule #2 for bram type $__ICE40_RAM4K_M123 (variant 2):
Bram geometry: abits=10 dbits=4 wports=0 rports=0
Estimated number of duplicates for more read ports: dups=1
Metrics for $__ICE40_RAM4K_M123: awaste=0 dwaste=0 bwaste=0 waste=0 efficiency=100
Rule #2 for bram type $__ICE40_RAM4K_M123 (variant 2) accepted.
Mapping to bram type $__ICE40_RAM4K_M123 (variant 2):
Write port #0 is in clock domain \clk12MHz.
Mapped to bram port B1.
Read port #0 is in clock domain \clk12MHz.
Mapped to bram port A1.1.
Updated properties: dups=1 waste=0 efficiency=100
Storing for later selection.
Checking rule #2 for bram type $__ICE40_RAM4K_M123 (variant 3):
Bram geometry: abits=11 dbits=2 wports=0 rports=0
Estimated number of duplicates for more read ports: dups=1
Metrics for $__ICE40_RAM4K_M123: awaste=0 dwaste=0 bwaste=0 waste=0 efficiency=100
Rule #2 for bram type $__ICE40_RAM4K_M123 (variant 3) accepted.
Mapping to bram type $__ICE40_RAM4K_M123 (variant 3):
Write port #0 is in clock domain \clk12MHz.
Mapped to bram port B1.
Read port #0 is in clock domain \clk12MHz.
Mapped to bram port A1.1.
Updated properties: dups=1 waste=0 efficiency=100
Storing for later selection.
Selecting best of 4 rules:
Efficiency for rule 2.3: efficiency=100, cells=16, acells=1
Efficiency for rule 2.2: efficiency=100, cells=16, acells=2
Efficiency for rule 2.1: efficiency=100, cells=16, acells=4
Efficiency for rule 1.1: efficiency=100, cells=16, acells=8
Selected rule 2.3 with efficiency 100.
Mapping to bram type $__ICE40_RAM4K_M123 (variant 3):
Write port #0 is in clock domain \clk12MHz.
Mapped to bram port B1.
Read port #0 is in clock domain \clk12MHz.
Mapped to bram port A1.1.
Creating $__ICE40_RAM4K_M123 cell at grid position <0 0 0>: RAM.memArray.0.0.0
Creating $__ICE40_RAM4K_M123 cell at grid position <1 0 0>: RAM.memArray.1.0.0
Creating $__ICE40_RAM4K_M123 cell at grid position <2 0 0>: RAM.memArray.2.0.0
Creating $__ICE40_RAM4K_M123 cell at grid position <3 0 0>: RAM.memArray.3.0.0
Creating $__ICE40_RAM4K_M123 cell at grid position <4 0 0>: RAM.memArray.4.0.0
Creating $__ICE40_RAM4K_M123 cell at grid position <5 0 0>: RAM.memArray.5.0.0
Creating $__ICE40_RAM4K_M123 cell at grid position <6 0 0>: RAM.memArray.6.0.0
Creating $__ICE40_RAM4K_M123 cell at grid position <7 0 0>: RAM.memArray.7.0.0
Creating $__ICE40_RAM4K_M123 cell at grid position <8 0 0>: RAM.memArray.8.0.0
Creating $__ICE40_RAM4K_M123 cell at grid position <9 0 0>: RAM.memArray.9.0.0
Creating $__ICE40_RAM4K_M123 cell at grid position <10 0 0>: RAM.memArray.10.0.0
Creating $__ICE40_RAM4K_M123 cell at grid position <11 0 0>: RAM.memArray.11.0.0
Creating $__ICE40_RAM4K_M123 cell at grid position <12 0 0>: RAM.memArray.12.0.0
Creating $__ICE40_RAM4K_M123 cell at grid position <13 0 0>: RAM.memArray.13.0.0
Creating $__ICE40_RAM4K_M123 cell at grid position <14 0 0>: RAM.memArray.14.0.0
Creating $__ICE40_RAM4K_M123 cell at grid position <15 0 0>: RAM.memArray.15.0.0
Processing SOCnexpo.RV32I.reg32.WORKREG:
Properties: ports=3 bits=1024 rports=2 wports=1 dbits=32 abits=5 words=32
Checking rule #1 for bram type $__ICE40_RAM4K_M0 (variant 1):
Bram geometry: abits=8 dbits=16 wports=0 rports=0
Estimated number of duplicates for more read ports: dups=1
Metrics for $__ICE40_RAM4K_M0: awaste=224 dwaste=0 bwaste=3584 waste=3584 efficiency=12
Rule #1 for bram type $__ICE40_RAM4K_M0 (variant 1) accepted.
Mapping to bram type $__ICE40_RAM4K_M0 (variant 1):
Write port #0 is in clock domain !\clk12MHz.
Mapped to bram port B1.
Read port #0 is in clock domain \clk12MHz.
Mapped to bram port A1.1.
Read port #1 is in clock domain \clk12MHz.
Failed to map read port #1.
Growing more read ports by duplicating bram cells.
Read port #0 is in clock domain \clk12MHz.
Mapped to bram port A1.1.
Read port #1 is in clock domain \clk12MHz.
Mapped to bram port A1.2.
Updated properties: dups=2 waste=7168 efficiency=6
Storing for later selection.
Checking rule #2 for bram type $__ICE40_RAM4K_M123 (variant 1):
Bram geometry: abits=9 dbits=8 wports=0 rports=0
Estimated number of duplicates for more read ports: dups=1
Metrics for $__ICE40_RAM4K_M123: awaste=480 dwaste=0 bwaste=3840 waste=3840 efficiency=6
Rule #2 for bram type $__ICE40_RAM4K_M123 (variant 1) accepted.
Mapping to bram type $__ICE40_RAM4K_M123 (variant 1):
Write port #0 is in clock domain !\clk12MHz.
Mapped to bram port B1.
Read port #0 is in clock domain \clk12MHz.
Mapped to bram port A1.1.
Read port #1 is in clock domain \clk12MHz.
Failed to map read port #1.
Growing more read ports by duplicating bram cells.
Read port #0 is in clock domain \clk12MHz.
Mapped to bram port A1.1.
Read port #1 is in clock domain \clk12MHz.
Mapped to bram port A1.2.
Updated properties: dups=2 waste=7680 efficiency=3
Storing for later selection.
Checking rule #2 for bram type $__ICE40_RAM4K_M123 (variant 2):
Bram geometry: abits=10 dbits=4 wports=0 rports=0
Estimated number of duplicates for more read ports: dups=1
Metrics for $__ICE40_RAM4K_M123: awaste=992 dwaste=0 bwaste=3968 waste=3968 efficiency=3
Rule #2 for bram type $__ICE40_RAM4K_M123 (variant 2) accepted.
Mapping to bram type $__ICE40_RAM4K_M123 (variant 2):
Write port #0 is in clock domain !\clk12MHz.
Mapped to bram port B1.
Read port #0 is in clock domain \clk12MHz.
Mapped to bram port A1.1.
Read port #1 is in clock domain \clk12MHz.
Failed to map read port #1.
Growing more read ports by duplicating bram cells.
Read port #0 is in clock domain \clk12MHz.
Mapped to bram port A1.1.
Read port #1 is in clock domain \clk12MHz.
Mapped to bram port A1.2.
Updated properties: dups=2 waste=7936 efficiency=1
Rule for bram type $__ICE40_RAM4K_M123 rejected: requirement 'min efficiency 2' not met.
Mapping to bram type $__ICE40_RAM4K_M123 failed.
Checking rule #2 for bram type $__ICE40_RAM4K_M123 (variant 3):
Bram geometry: abits=11 dbits=2 wports=0 rports=0
Estimated number of duplicates for more read ports: dups=1
Metrics for $__ICE40_RAM4K_M123: awaste=2016 dwaste=0 bwaste=4032 waste=4032 efficiency=1
Rule #2 for bram type $__ICE40_RAM4K_M123 (variant 3) rejected: requirement 'min efficiency 2' not met.
Selecting best of 2 rules:
Efficiency for rule 2.1: efficiency=3, cells=8, acells=1
Efficiency for rule 1.1: efficiency=6, cells=4, acells=1
Selected rule 1.1 with efficiency 6.
Mapping to bram type $__ICE40_RAM4K_M0 (variant 1):
Write port #0 is in clock domain !\clk12MHz.
Mapped to bram port B1.
Read port #0 is in clock domain \clk12MHz.
Mapped to bram port A1.1.
Read port #1 is in clock domain \clk12MHz.
Failed to map read port #1.
Growing more read ports by duplicating bram cells.
Read port #0 is in clock domain \clk12MHz.
Mapped to bram port A1.1.
Read port #1 is in clock domain \clk12MHz.
Mapped to bram port A1.2.
Creating $__ICE40_RAM4K_M0 cell at grid position <0 0 0>: RV32I.reg32.WORKREG.0.0.0
Creating $__ICE40_RAM4K_M0 cell at grid position <0 0 1>: RV32I.reg32.WORKREG.0.0.1
Creating $__ICE40_RAM4K_M0 cell at grid position <1 0 0>: RV32I.reg32.WORKREG.1.0.0
Creating $__ICE40_RAM4K_M0 cell at grid position <1 0 1>: RV32I.reg32.WORKREG.1.0.1

4.25. Executing TECHMAP pass (map to technology primitives).

4.25.1. Executing Verilog-2005 frontend: /home/jfdava/.apio/packages/toolchain-yosys/bin/../share/yosys/ice40/brams_map.v
Parsing Verilog input from `/home/jfdava/.apio/packages/toolchain-yosys/bin/../share/yosys/ice40/brams_map.v' to AST representation.
Generating RTLIL representation for module `\$__ICE40_RAM4K'.
Generating RTLIL representation for module `\$__ICE40_RAM4K_M0'.
Generating RTLIL representation for module `\$__ICE40_RAM4K_M123'.
Successfully finished Verilog frontend.

4.25.2. Continuing TECHMAP pass.
Using template $paramod$49da78f14376c226e3f73898b86349d2523b6092\$__ICE40_RAM4K_M123 for cells of type $__ICE40_RAM4K_M123.
Using template $paramod$a8aa7d12844ac8b0d870ac804d4149ae6f078986\$__ICE40_RAM4K_M123 for cells of type $__ICE40_RAM4K_M123.
Using template $paramod$e7da016e61eb174bc4a157898a70972884970ec1\$__ICE40_RAM4K_M123 for cells of type $__ICE40_RAM4K_M123.
Using template $paramod$6848f3359059f5598f1765e6b527c876a18fe714\$__ICE40_RAM4K_M0 for cells of type $__ICE40_RAM4K_M0.
Using template $paramod$8c9caa9c316a640b79d653050021d5a2b518ca58\$__ICE40_RAM4K_M123 for cells of type $__ICE40_RAM4K_M123.
Using template $paramod$8065e31cc199b6cff6b083f1ad4bbb23eb7038da\$__ICE40_RAM4K_M123 for cells of type $__ICE40_RAM4K_M123.
Using template $paramod$43e316d8c83333e77d3cda6acbe2e82aee4ba905\$__ICE40_RAM4K_M123 for cells of type $__ICE40_RAM4K_M123.
Using template $paramod$0e44341c6359cd699a4f2624e0c6abd2aaa97866\$__ICE40_RAM4K_M123 for cells of type $__ICE40_RAM4K_M123.
Using template $paramod$253ec975b63a5a47e1562e71285c7fdecc505f28\$__ICE40_RAM4K_M123 for cells of type $__ICE40_RAM4K_M123.
Using template $paramod$d39ff6d1e4c8175799ee3dc79aed312674933750\$__ICE40_RAM4K_M123 for cells of type $__ICE40_RAM4K_M123.
Using template $paramod$d7dc27f0be80a639292a2b7c5f939f4b572c8541\$__ICE40_RAM4K_M123 for cells of type $__ICE40_RAM4K_M123.
Using template $paramod$ef3795b17e30aa643d5036c6dfc722da236e6e25\$__ICE40_RAM4K_M123 for cells of type $__ICE40_RAM4K_M123.
Using template $paramod$04a91933b7c4f704d0da0f1a9143463ab94e1526\$__ICE40_RAM4K_M123 for cells of type $__ICE40_RAM4K_M123.
Using template $paramod$ef61f3b15c1b8a8796d63c7c136e0deeb92ae25a\$__ICE40_RAM4K_M123 for cells of type $__ICE40_RAM4K_M123.
Using template $paramod$1ea0f20111d0936fdb52ae728dd91e890aab8f17\$__ICE40_RAM4K_M123 for cells of type $__ICE40_RAM4K_M123.
Using template $paramod$e316530381baf3e4177deadcaaf0acb6f41e4f8d\$__ICE40_RAM4K_M123 for cells of type $__ICE40_RAM4K_M123.
Using template $paramod$b4fa3dd6f6d32c6c412d9a1a8f9680eb73d43084\$__ICE40_RAM4K_M123 for cells of type $__ICE40_RAM4K_M123.
Using template $paramod$5b3a546462178891c10942a5739f8be9ea8c9310\$__ICE40_RAM4K_M123 for cells of type $__ICE40_RAM4K_M123.
Using template $paramod$9efb18edb8de02bad1a7094f5e96d3699b439d6d\$__ICE40_RAM4K_M123 for cells of type $__ICE40_RAM4K_M123.
Using template $paramod$9c3de4fde3caf232a36174b45213ceae29494249\$__ICE40_RAM4K_M123 for cells of type $__ICE40_RAM4K_M123.
Using template $paramod$ad71a841cb7560dd185296d03b6e23729c25ddb1\$__ICE40_RAM4K_M123 for cells of type $__ICE40_RAM4K_M123.
Using template $paramod$c968b0013a165f3634e5c92d29081f0d392b5770\$__ICE40_RAM4K_M123 for cells of type $__ICE40_RAM4K_M123.
Using template $paramod$97cde197a967de7b4af14f3d3b27b3b7f2ff1eb3\$__ICE40_RAM4K_M123 for cells of type $__ICE40_RAM4K_M123.
Using template $paramod$c299441b407b39a3eed06ffb52e1d5f8b024d123\$__ICE40_RAM4K_M123 for cells of type $__ICE40_RAM4K_M123.
Using template $paramod$631aa3d8085982bec08e3c6462eb04a92cf6ea98\$__ICE40_RAM4K_M123 for cells of type $__ICE40_RAM4K_M123.
Using template $paramod$3cac6450a894b4e9da8ffe19af6571a02c73b999\$__ICE40_RAM4K_M123 for cells of type $__ICE40_RAM4K_M123.
Using template $paramod$bbe8445093f44dd5346ea54bfbfffb984fe06ac1\$__ICE40_RAM4K_M123 for cells of type $__ICE40_RAM4K_M123.
Using template $paramod$11e971eef5d171a268adb0d67074bada7e5847c6\$__ICE40_RAM4K_M123 for cells of type $__ICE40_RAM4K_M123.
Using template $paramod$0f1abeea0452129e2da1b5b4af3205daf6f62996\$__ICE40_RAM4K for cells of type $__ICE40_RAM4K.
Using template $paramod$fe63ec2ab6634e93d6eb73a2d422aa8c63752778\$__ICE40_RAM4K for cells of type $__ICE40_RAM4K.
Using template $paramod$6583422058d296b054b8f17a5973c9c276116928\$__ICE40_RAM4K for cells of type $__ICE40_RAM4K.
Using template $paramod$2d99f85ef83aa950a288ec9b60ddf3213e3287b1\$__ICE40_RAM4K for cells of type $__ICE40_RAM4K.
Using template $paramod$a99a0694763cb9c4bfe6aef49cb7fd96bc2d56a2\$__ICE40_RAM4K for cells of type $__ICE40_RAM4K.
Using template $paramod$19c8f5c5865cd3db63daf576d0474b888e1da522\$__ICE40_RAM4K for cells of type $__ICE40_RAM4K.
Using template $paramod$44870a8530cb3ab4e7642ea0523cbc6664165311\$__ICE40_RAM4K for cells of type $__ICE40_RAM4K.
Using template $paramod$bd5ae792e284658ab9479e6718256c6e5cbe74bd\$__ICE40_RAM4K for cells of type $__ICE40_RAM4K.
Using template $paramod$d9f430b26a8f802b8897ed6d8702c74f582ca96b\$__ICE40_RAM4K for cells of type $__ICE40_RAM4K.
Using template $paramod$d05de495dde6bb70860f9129064bfff9f6763c10\$__ICE40_RAM4K for cells of type $__ICE40_RAM4K.
Using template $paramod$622fc6a661b18ed5b926d36c52950e5152072fad\$__ICE40_RAM4K for cells of type $__ICE40_RAM4K.
Using template $paramod$dabb5c3961102dbebaf39564c774caa0adba5d45\$__ICE40_RAM4K for cells of type $__ICE40_RAM4K.
Using template $paramod$3f99c3a72696703ff7cfa334b2933aba4c8d0425\$__ICE40_RAM4K for cells of type $__ICE40_RAM4K.
Using template $paramod$44c3ede37ee5e397586e794c35ae8d78d8c226d5\$__ICE40_RAM4K for cells of type $__ICE40_RAM4K.
Using template $paramod$8fc1ea870b69862a705dbd6f2c96f45ccc7f768c\$__ICE40_RAM4K for cells of type $__ICE40_RAM4K.
Using template $paramod$48a496dfb2a3148cf50ade5fd1c59eda856af1e7\$__ICE40_RAM4K for cells of type $__ICE40_RAM4K.
Using template $paramod$54aab2e17318fee33c9f5f74decaf5df4782f578\$__ICE40_RAM4K for cells of type $__ICE40_RAM4K.
Using template $paramod$64e33e362b91afce25de47c67eff862b2a9b9eec\$__ICE40_RAM4K for cells of type $__ICE40_RAM4K.
Using template $paramod$019ddcf982d74081f554bd2465497fdf78ee4917\$__ICE40_RAM4K for cells of type $__ICE40_RAM4K.
Using template $paramod$3b62b2558518b799c357a045fad41a9b4cc26cca\$__ICE40_RAM4K for cells of type $__ICE40_RAM4K.
Using template $paramod$d58b47ffcfc063077771eab072f3ca381b742177\$__ICE40_RAM4K for cells of type $__ICE40_RAM4K.
Using template $paramod$1e99678737b2cd4ee98a7e5b173390505a9d3fc4\$__ICE40_RAM4K for cells of type $__ICE40_RAM4K.
Using template $paramod$902085627fd59a6b268dff8bd9ce895169f304f6\$__ICE40_RAM4K for cells of type $__ICE40_RAM4K.
Using template $paramod$8d1dd2c7d7f45163b6190bc987af418ed338ad34\$__ICE40_RAM4K for cells of type $__ICE40_RAM4K.
Using template $paramod$b03cd6bb204a56f8104ccd8441ff4f1d11137e7a\$__ICE40_RAM4K for cells of type $__ICE40_RAM4K.
Using template $paramod$84b3f69eba997ca69281cdead1cfd0c79b03fdd3\$__ICE40_RAM4K for cells of type $__ICE40_RAM4K.
Using template $paramod$2a28e4b01580b8da3604211d655b7a30cfba2b78\$__ICE40_RAM4K for cells of type $__ICE40_RAM4K.
Using template $paramod$a39408acb3a0fc515cdfe0eb701254c4be50fda9\$__ICE40_RAM4K for cells of type $__ICE40_RAM4K.
No more expansions possible.

4.26. Executing ICE40_BRAMINIT pass.

4.27. Executing OPT pass (performing simple optimizations).

4.27.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module SOCnexpo.

4.27.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\SOCnexpo'.
Removed a total of 3 cells.

4.27.3. Executing OPT_RMDFF pass (remove dff with constant values).

4.27.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \SOCnexpo..
Removed 2 unused cells and 890 unused wires.

4.27.5. Finished fast OPT passes.

4.28. Executing MEMORY_MAP pass (converting $mem cells to logic and flip-flops).

4.29. Executing OPT pass (performing simple optimizations).

4.29.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module SOCnexpo.

4.29.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\SOCnexpo'.
Removed a total of 0 cells.

4.29.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \SOCnexpo..
Creating internal representation of mux trees.
Evaluating internal representation of mux trees.
Analyzing evaluation results.
Removed 0 multiplexer ports.

4.29.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
Optimizing cells in module \SOCnexpo.
Consolidated identical input bits for $pmux cell $procmux$763:
Old ports: A=31'1100001011011000110111101001000, B=93'110111001110101010011010010000001000000010000001101111011001000000000000000000000000000000000, Y=\palabra
New ports: A=7'1011010, B=21'111010000111010000000, Y={ \palabra [18] \palabra [16] \palabra [8] \palabra [6:5] \palabra [3:2] }
New connections: { \palabra [30:19] \palabra [17] \palabra [15:9] \palabra [7] \palabra [4] \palabra [1:0] } = { \palabra [18] \palabra [8] 1'0 \palabra [16] \palabra [16] \palabra [16] \palabra [3] 1'0 \palabra [18] \palabra [8] \palabra [16] \palabra [3] 2'00 \palabra [8] \palabra [6] 1'0 \palabra [8] \palabra [8] \palabra [6] 4'0000 }
Consolidated identical input bits for $mux cell $techmap\RV32I.$procmux$1084:
Old ports: A={ \RV32I.FD_instr [31] \RV32I.FD_instr [31] \RV32I.FD_instr [31] \RV32I.FD_instr [31] \RV32I.FD_instr [31] \RV32I.FD_instr [31] \RV32I.FD_instr [31] \RV32I.FD_instr [31] \RV32I.FD_instr [31:20] }, B={ \RV32I.FD_instr [19:12] \RV32I.FD_instr [20] \RV32I.FD_instr [30:21] 1'0 }, Y=$techmap\RV32I.$procmux$1084_Y [19:0]
New ports: A={ \RV32I.FD_instr [31] \RV32I.FD_instr [31] \RV32I.FD_instr [31] \RV32I.FD_instr [31] \RV32I.FD_instr [31] \RV32I.FD_instr [31] \RV32I.FD_instr [31] \RV32I.FD_instr [31] \RV32I.FD_instr [31] \RV32I.FD_instr [20] }, B={ \RV32I.FD_instr [19:12] \RV32I.FD_instr [20] 1'0 }, Y={ $techmap\RV32I.$procmux$1084_Y [19:11] $techmap\RV32I.$procmux$1084_Y [0] }
New connections: $techmap\RV32I.$procmux$1084_Y [10:1] = \RV32I.FD_instr [30:21]
Consolidated identical input bits for $mux cell $techmap\RV32I.load.$ternary$Procesador_V2.0b/interfaz_mem.v:67$260:
Old ports: A={ \RV32I.load.signo_byte \RV32I.load.signo_byte \RV32I.load.signo_byte \RV32I.load.signo_byte \RV32I.load.signo_byte \RV32I.load.signo_byte \RV32I.load.signo_byte \RV32I.load.signo_byte \RV32I.load.signo_byte \RV32I.load.signo_byte \RV32I.load.signo_byte \RV32I.load.signo_byte \RV32I.load.signo_byte \RV32I.load.signo_byte \RV32I.load.signo_byte \RV32I.load.signo_byte \RV32I.load.signo_byte \RV32I.load.signo_byte \RV32I.load.signo_byte \RV32I.load.signo_byte \RV32I.load.signo_byte \RV32I.load.signo_byte \RV32I.load.signo_byte \RV32I.load.signo_byte \RV32I.load.data_byte }, B={ \RV32I.load.signo_half \RV32I.load.signo_half \RV32I.load.signo_half \RV32I.load.signo_half \RV32I.load.signo_half \RV32I.load.signo_half \RV32I.load.signo_half \RV32I.load.signo_half \RV32I.load.signo_half \RV32I.load.signo_half \RV32I.load.signo_half \RV32I.load.signo_half \RV32I.load.signo_half \RV32I.load.signo_half \RV32I.load.signo_half \RV32I.load.signo_half \RV32I.load.data_half }, Y=$techmap\RV32I.load.$ternary$Procesador_V2.0b/interfaz_mem.v:67$260_Y
New ports: A={ \RV32I.load.signo_byte \RV32I.load.signo_byte \RV32I.load.signo_byte \RV32I.load.signo_byte \RV32I.load.signo_byte \RV32I.load.signo_byte \RV32I.load.signo_byte \RV32I.load.signo_byte \RV32I.load.signo_byte \RV32I.load.data_byte }, B={ \RV32I.load.signo_half \RV32I.load.data_half }, Y=$techmap\RV32I.load.$ternary$Procesador_V2.0b/interfaz_mem.v:67$260_Y [16:0]
New connections: $techmap\RV32I.load.$ternary$Procesador_V2.0b/interfaz_mem.v:67$260_Y [31:17] = { $techmap\RV32I.load.$ternary$Procesador_V2.0b/interfaz_mem.v:67$260_Y [16] $techmap\RV32I.load.$ternary$Procesador_V2.0b/interfaz_mem.v:67$260_Y [16] $techmap\RV32I.load.$ternary$Procesador_V2.0b/interfaz_mem.v:67$260_Y [16] $techmap\RV32I.load.$ternary$Procesador_V2.0b/interfaz_mem.v:67$260_Y [16] $techmap\RV32I.load.$ternary$Procesador_V2.0b/interfaz_mem.v:67$260_Y [16] $techmap\RV32I.load.$ternary$Procesador_V2.0b/interfaz_mem.v:67$260_Y [16] $techmap\RV32I.load.$ternary$Procesador_V2.0b/interfaz_mem.v:67$260_Y [16] $techmap\RV32I.load.$ternary$Procesador_V2.0b/interfaz_mem.v:67$260_Y [16] $techmap\RV32I.load.$ternary$Procesador_V2.0b/interfaz_mem.v:67$260_Y [16] $techmap\RV32I.load.$ternary$Procesador_V2.0b/interfaz_mem.v:67$260_Y [16] $techmap\RV32I.load.$ternary$Procesador_V2.0b/interfaz_mem.v:67$260_Y [16] $techmap\RV32I.load.$ternary$Procesador_V2.0b/interfaz_mem.v:67$260_Y [16] $techmap\RV32I.load.$ternary$Procesador_V2.0b/interfaz_mem.v:67$260_Y [16] $techmap\RV32I.load.$ternary$Procesador_V2.0b/interfaz_mem.v:67$260_Y [16] $techmap\RV32I.load.$ternary$Procesador_V2.0b/interfaz_mem.v:67$260_Y [16] }
Consolidated identical input bits for $mux cell $techmap\RV32I.store.$ternary$Procesador_V2.0b/interfaz_mem.v:33$248:
Old ports: A=4'0011, B=4'1100, Y=$techmap\RV32I.store.$ternary$Procesador_V2.0b/interfaz_mem.v:33$248_Y
New ports: A=2'01, B=2'10, Y={ $techmap\RV32I.store.$ternary$Procesador_V2.0b/interfaz_mem.v:33$248_Y [2] $techmap\RV32I.store.$ternary$Procesador_V2.0b/interfaz_mem.v:33$248_Y [0] }
New connections: { $techmap\RV32I.store.$ternary$Procesador_V2.0b/interfaz_mem.v:33$248_Y [3] $techmap\RV32I.store.$ternary$Procesador_V2.0b/interfaz_mem.v:33$248_Y [1] } = { $techmap\RV32I.store.$ternary$Procesador_V2.0b/interfaz_mem.v:33$248_Y [2] $techmap\RV32I.store.$ternary$Procesador_V2.0b/interfaz_mem.v:33$248_Y [0] }
Consolidated identical input bits for $mux cell $techmap\RV32I.store.$ternary$Procesador_V2.0b/interfaz_mem.v:34$249:
Old ports: A=4'0100, B=4'1000, Y=$techmap\RV32I.store.$ternary$Procesador_V2.0b/interfaz_mem.v:34$249_Y
New ports: A=2'01, B=2'10, Y=$techmap\RV32I.store.$ternary$Procesador_V2.0b/interfaz_mem.v:34$249_Y [3:2]
New connections: $techmap\RV32I.store.$ternary$Procesador_V2.0b/interfaz_mem.v:34$249_Y [1:0] = 2'00
Consolidated identical input bits for $mux cell $ternary$SOCnexpoV8_.v:101$344:
Old ports: A=0, B={ 1'0 \palabra }, Y=$ternary$SOCnexpoV8_.v:101$344_Y
New ports: A=31'0000000000000000000000000000000, B=\palabra, Y=$ternary$SOCnexpoV8_.v:101$344_Y [30:0]
New connections: $ternary$SOCnexpoV8_.v:101$344_Y [31] = 1'0
Optimizing cells in module \SOCnexpo.
Consolidated identical input bits for $mux cell $techmap\RV32I.$procmux$1086:
Old ports: A=$techmap\RV32I.$procmux$1084_Y [19:0], B={ \RV32I.FD_instr [31] \RV32I.FD_instr [31] \RV32I.FD_instr [31] \RV32I.FD_instr [31] \RV32I.FD_instr [31] \RV32I.FD_instr [31] \RV32I.FD_instr [31] \RV32I.FD_instr [31] \RV32I.FD_instr [31:25] \RV32I.FD_instr [11:7] }, Y=$techmap\RV32I.$procmux$1086_Y [19:0]
New ports: A={ $techmap\RV32I.$procmux$1084_Y [19:11] \RV32I.FD_instr [24:21] $techmap\RV32I.$procmux$1084_Y [0] }, B={ \RV32I.FD_instr [31] \RV32I.FD_instr [31] \RV32I.FD_instr [31] \RV32I.FD_instr [31] \RV32I.FD_instr [31] \RV32I.FD_instr [31] \RV32I.FD_instr [31] \RV32I.FD_instr [31] \RV32I.FD_instr [31] \RV32I.FD_instr [11:7] }, Y={ $techmap\RV32I.$procmux$1086_Y [19:11] $techmap\RV32I.$procmux$1086_Y [4:0] }
New connections: $techmap\RV32I.$procmux$1086_Y [10:5] = \RV32I.FD_instr [30:25]
Consolidated identical input bits for $mux cell $ternary$SOCnexpoV8_.v:101$344:
Old ports: A=31'0000000000000000000000000000000, B=\palabra, Y=$ternary$SOCnexpoV8_.v:101$344_Y [30:0]
New ports: A=7'0000000, B={ \palabra [18] \palabra [16] \palabra [8] \palabra [6:5] \palabra [3:2] }, Y={ $ternary$SOCnexpoV8_.v:101$344_Y [18] $ternary$SOCnexpoV8_.v:101$344_Y [16] $ternary$SOCnexpoV8_.v:101$344_Y [8] $ternary$SOCnexpoV8_.v:101$344_Y [6:5] $ternary$SOCnexpoV8_.v:101$344_Y [3:2] }
New connections: { $ternary$SOCnexpoV8_.v:101$344_Y [30:19] $ternary$SOCnexpoV8_.v:101$344_Y [17] $ternary$SOCnexpoV8_.v:101$344_Y [15:9] $ternary$SOCnexpoV8_.v:101$344_Y [7] $ternary$SOCnexpoV8_.v:101$344_Y [4] $ternary$SOCnexpoV8_.v:101$344_Y [1:0] } = { $ternary$SOCnexpoV8_.v:101$344_Y [18] $ternary$SOCnexpoV8_.v:101$344_Y [8] 1'0 $ternary$SOCnexpoV8_.v:101$344_Y [16] $ternary$SOCnexpoV8_.v:101$344_Y [16] $ternary$SOCnexpoV8_.v:101$344_Y [16] $ternary$SOCnexpoV8_.v:101$344_Y [3] 1'0 $ternary$SOCnexpoV8_.v:101$344_Y [18] $ternary$SOCnexpoV8_.v:101$344_Y [8] $ternary$SOCnexpoV8_.v:101$344_Y [16] $ternary$SOCnexpoV8_.v:101$344_Y [3] 2'00 $ternary$SOCnexpoV8_.v:101$344_Y [8] $ternary$SOCnexpoV8_.v:101$344_Y [6] 1'0 $ternary$SOCnexpoV8_.v:101$344_Y [8] $ternary$SOCnexpoV8_.v:101$344_Y [8] $ternary$SOCnexpoV8_.v:101$344_Y [6] 4'0000 }
Consolidated identical input bits for $mux cell $ternary$SOCnexpoV8_.v:101$345:
Old ports: A=$ternary$SOCnexpoV8_.v:101$344_Y, B={ 23'00000000000000000000000 \tx_ready \UART_RX.data }, Y=$ternary$SOCnexpoV8_.v:101$345_Y
New ports: A=$ternary$SOCnexpoV8_.v:101$344_Y [30:0], B={ 22'0000000000000000000000 \tx_ready \UART_RX.data }, Y=$ternary$SOCnexpoV8_.v:101$345_Y [30:0]
New connections: $ternary$SOCnexpoV8_.v:101$345_Y [31] = 1'0
Optimizing cells in module \SOCnexpo.
Consolidated identical input bits for $mux cell $techmap\RV32I.$procmux$1088:
Old ports: A=$techmap\RV32I.$procmux$1086_Y [19:0], B={ \RV32I.FD_instr [31] \RV32I.FD_instr [31] \RV32I.FD_instr [31] \RV32I.FD_instr [31] \RV32I.FD_instr [31] \RV32I.FD_instr [31] \RV32I.FD_instr [31] \RV32I.FD_instr [31] \RV32I.FD_instr [7] \RV32I.FD_instr [30:25] \RV32I.FD_instr [11:8] 1'0 }, Y=$techmap\RV32I.$procmux$1088_Y [19:0]
New ports: A={ $techmap\RV32I.$procmux$1086_Y [19:11] $techmap\RV32I.$procmux$1086_Y [4:0] }, B={ \RV32I.FD_instr [31] \RV32I.FD_instr [31] \RV32I.FD_instr [31] \RV32I.FD_instr [31] \RV32I.FD_instr [31] \RV32I.FD_instr [31] \RV32I.FD_instr [31] \RV32I.FD_instr [31] \RV32I.FD_instr [7] \RV32I.FD_instr [11:8] 1'0 }, Y={ $techmap\RV32I.$procmux$1088_Y [19:11] $techmap\RV32I.$procmux$1088_Y [4:0] }
New connections: $techmap\RV32I.$procmux$1088_Y [10:5] = \RV32I.FD_instr [30:25]
Consolidated identical input bits for $mux cell $ternary$SOCnexpoV8_.v:101$345:
Old ports: A=$ternary$SOCnexpoV8_.v:101$344_Y [30:0], B={ 22'0000000000000000000000 \tx_ready \UART_RX.data }, Y=$ternary$SOCnexpoV8_.v:101$345_Y [30:0]
New ports: A={ $ternary$SOCnexpoV8_.v:101$344_Y [3] $ternary$SOCnexpoV8_.v:101$344_Y [18] $ternary$SOCnexpoV8_.v:101$344_Y [16] $ternary$SOCnexpoV8_.v:101$344_Y [8] $ternary$SOCnexpoV8_.v:101$344_Y [6] $ternary$SOCnexpoV8_.v:101$344_Y [8] 1'0 $ternary$SOCnexpoV8_.v:101$344_Y [6:5] 1'0 $ternary$SOCnexpoV8_.v:101$344_Y [3:2] 2'00 }, B={ 5'00000 \tx_ready \UART_RX.data }, Y={ $ternary$SOCnexpoV8_.v:101$345_Y [19:18] $ternary$SOCnexpoV8_.v:101$345_Y [16] $ternary$SOCnexpoV8_.v:101$345_Y [10:0] }
New connections: { $ternary$SOCnexpoV8_.v:101$345_Y [30:20] $ternary$SOCnexpoV8_.v:101$345_Y [17] $ternary$SOCnexpoV8_.v:101$345_Y [15:11] } = { $ternary$SOCnexpoV8_.v:101$345_Y [18] $ternary$SOCnexpoV8_.v:101$345_Y [10] 1'0 $ternary$SOCnexpoV8_.v:101$345_Y [16] $ternary$SOCnexpoV8_.v:101$345_Y [16] $ternary$SOCnexpoV8_.v:101$345_Y [16] $ternary$SOCnexpoV8_.v:101$345_Y [19] 1'0 $ternary$SOCnexpoV8_.v:101$345_Y [18] $ternary$SOCnexpoV8_.v:101$345_Y [10] $ternary$SOCnexpoV8_.v:101$345_Y [16] 2'00 $ternary$SOCnexpoV8_.v:101$345_Y [10:9] 1'0 $ternary$SOCnexpoV8_.v:101$345_Y [10] }
Consolidated identical input bits for $mux cell $ternary$SOCnexpoV8_.v:101$346:
Old ports: A=$ternary$SOCnexpoV8_.v:101$345_Y, B={ 31'0000000000000000000000000000000 \leds_en }, Y=$ternary$SOCnexpoV8_.v:101$346_Y
New ports: A=$ternary$SOCnexpoV8_.v:101$345_Y [30:0], B={ 30'000000000000000000000000000000 \leds_en }, Y=$ternary$SOCnexpoV8_.v:101$346_Y [30:0]
New connections: $ternary$SOCnexpoV8_.v:101$346_Y [31] = 1'0
Optimizing cells in module \SOCnexpo.
Consolidated identical input bits for $mux cell $ternary$SOCnexpoV8_.v:101$346:
Old ports: A=$ternary$SOCnexpoV8_.v:101$345_Y [30:0], B={ 30'000000000000000000000000000000 \leds_en }, Y=$ternary$SOCnexpoV8_.v:101$346_Y [30:0]
New ports: A={ $ternary$SOCnexpoV8_.v:101$345_Y [19:18] $ternary$SOCnexpoV8_.v:101$345_Y [16] $ternary$SOCnexpoV8_.v:101$345_Y [10:0] }, B={ 13'0000000000000 \leds_en }, Y={ $ternary$SOCnexpoV8_.v:101$346_Y [19:18] $ternary$SOCnexpoV8_.v:101$346_Y [16] $ternary$SOCnexpoV8_.v:101$346_Y [10:0] }
New connections: { $ternary$SOCnexpoV8_.v:101$346_Y [30:20] $ternary$SOCnexpoV8_.v:101$346_Y [17] $ternary$SOCnexpoV8_.v:101$346_Y [15:11] } = { $ternary$SOCnexpoV8_.v:101$346_Y [18] $ternary$SOCnexpoV8_.v:101$346_Y [10] 1'0 $ternary$SOCnexpoV8_.v:101$346_Y [16] $ternary$SOCnexpoV8_.v:101$346_Y [16] $ternary$SOCnexpoV8_.v:101$346_Y [16] $ternary$SOCnexpoV8_.v:101$346_Y [19] 1'0 $ternary$SOCnexpoV8_.v:101$346_Y [18] $ternary$SOCnexpoV8_.v:101$346_Y [10] $ternary$SOCnexpoV8_.v:101$346_Y [16] 2'00 $ternary$SOCnexpoV8_.v:101$346_Y [10:9] 1'0 $ternary$SOCnexpoV8_.v:101$346_Y [10] }
Optimizing cells in module \SOCnexpo.
Performed a total of 13 changes.

4.29.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\SOCnexpo'.
Removed a total of 1 cells.

4.29.6. Executing OPT_RMDFF pass (remove dff with constant values).

4.29.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \SOCnexpo..
Removed 0 unused cells and 1 unused wires.

4.29.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module SOCnexpo.

4.29.9. Rerunning OPT passes. (Maybe there is more to do..)

4.29.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \SOCnexpo..
Creating internal representation of mux trees.
Evaluating internal representation of mux trees.
Analyzing evaluation results.
Removed 0 multiplexer ports.

4.29.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
Optimizing cells in module \SOCnexpo.
Performed a total of 0 changes.

4.29.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\SOCnexpo'.
Removed a total of 0 cells.

4.29.13. Executing OPT_RMDFF pass (remove dff with constant values).

4.29.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \SOCnexpo..

4.29.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module SOCnexpo.

4.29.16. Finished OPT passes. (There is nothing left to do.)

4.30. Executing ICE40_WRAPCARRY pass (wrap carries).

4.31. Executing TECHMAP pass (map to technology primitives).

4.31.1. Executing Verilog-2005 frontend: /home/jfdava/.apio/packages/toolchain-yosys/bin/../share/yosys/techmap.v
Parsing Verilog input from `/home/jfdava/.apio/packages/toolchain-yosys/bin/../share/yosys/techmap.v' to AST representation.
Generating RTLIL representation for module `\_90_simplemap_bool_ops'.
Generating RTLIL representation for module `\_90_simplemap_reduce_ops'.
Generating RTLIL representation for module `\_90_simplemap_logic_ops'.
Generating RTLIL representation for module `\_90_simplemap_compare_ops'.
Generating RTLIL representation for module `\_90_simplemap_various'.
Generating RTLIL representation for module `\_90_simplemap_registers'.
Generating RTLIL representation for module `\_90_shift_ops_shr_shl_sshl_sshr'.
Generating RTLIL representation for module `\_90_shift_shiftx'.
Generating RTLIL representation for module `\_90_fa'.
Generating RTLIL representation for module `\_90_lcu'.
Generating RTLIL representation for module `\_90_alu'.
Generating RTLIL representation for module `\_90_macc'.
Generating RTLIL representation for module `\_90_alumacc'.
Generating RTLIL representation for module `\$__div_mod_u'.
Generating RTLIL representation for module `\$__div_mod'.
Generating RTLIL representation for module `\_90_div'.
Generating RTLIL representation for module `\_90_mod'.
Generating RTLIL representation for module `\_90_pow'.
Generating RTLIL representation for module `\_90_pmux'.
Generating RTLIL representation for module `\_90_lut'.
Successfully finished Verilog frontend.

4.31.2. Executing Verilog-2005 frontend: /home/jfdava/.apio/packages/toolchain-yosys/bin/../share/yosys/ice40/arith_map.v
Parsing Verilog input from `/home/jfdava/.apio/packages/toolchain-yosys/bin/../share/yosys/ice40/arith_map.v' to AST representation.
Generating RTLIL representation for module `\_80_ice40_alu'.
Successfully finished Verilog frontend.

4.31.3. Continuing TECHMAP pass.
Using template $paramod\_80_ice40_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=1\B_WIDTH=12\Y_WIDTH=12 for cells of type $alu.
Using extmapper simplemap for cells of type $eq.
Using extmapper simplemap for cells of type $logic_not.
Using extmapper simplemap for cells of type $and.
Using extmapper simplemap for cells of type $not.
Using extmapper simplemap for cells of type $mux.
Using template $paramod\_90_pmux\WIDTH=7\S_WIDTH=3 for cells of type $pmux.
Using extmapper simplemap for cells of type $dff.
Using template $paramod\_80_ice40_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=6\B_WIDTH=7\Y_WIDTH=7 for cells of type $alu.
Using extmapper simplemap for cells of type $or.
Using extmapper simplemap for cells of type $reduce_and.
Using extmapper simplemap for cells of type $reduce_or.
Using template $paramod\_90_pmux\WIDTH=32\S_WIDTH=5 for cells of type $pmux.
Using template $paramod\_80_ice40_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=1\B_WIDTH=7\Y_WIDTH=7 for cells of type $alu.
Using template $paramod\_80_ice40_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=1\B_WIDTH=64\Y_WIDTH=64 for cells of type $alu.
Using extmapper simplemap for cells of type $logic_or.
Using extmapper simplemap for cells of type $logic_and.
Using template $paramod\_80_ice40_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=32\B_WIDTH=32\Y_WIDTH=32 for cells of type $alu.
Using template $paramod\_90_pmux\WIDTH=4\S_WIDTH=3 for cells of type $pmux.
Using template $paramod\_90_pmux\WIDTH=8\S_WIDTH=3 for cells of type $pmux.
Using template $paramod\_80_ice40_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=1\B_WIDTH=8\Y_WIDTH=8 for cells of type $alu.
Using template $paramod\_80_ice40_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=1\B_WIDTH=30\Y_WIDTH=30 for cells of type $alu.
Using template $paramod\_80_ice40_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=7\B_WIDTH=10\Y_WIDTH=10 for cells of type $alu.
Using template $paramod\_80_ice40_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=1\B_WIDTH=5\Y_WIDTH=5 for cells of type $alu.
Using extmapper simplemap for cells of type $xor.
Using template $paramod$constmap:87f69c0bea22f84de4bcd0314b57cb19e61b5eb7$paramod$88abf4b792300efa328894e6936be740fdc22f6d\_90_shift_ops_shr_shl_sshl_sshr for cells of type $sshr.
Using template $paramod$constmap:1b6115d36d46c0296d0024e3e3623593810ba834$paramod$2c522b46cc21505f45a595eaa4706e490799228e\_90_shift_ops_shr_shl_sshl_sshr for cells of type $shl.
Using template $paramod\_80_ice40_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=32\B_WIDTH=33\Y_WIDTH=33 for cells of type $alu.
Using template $paramod\_80_ice40_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=1\B_WIDTH=4\Y_WIDTH=4 for cells of type $alu.
Using extmapper simplemap for cells of type $pos.
No more expansions possible.

4.32. Executing ICE40_OPT pass (performing simple optimizations).

4.32.1. Running ICE40 specific optimizations.

4.32.2. Executing OPT_EXPR pass (perform const folding).
Optimizing module SOCnexpo.

4.32.3. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\SOCnexpo'.
Removed a total of 241 cells.

4.32.4. Executing OPT_RMDFF pass (remove dff with constant values).

4.32.5. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \SOCnexpo..
Removed 299 unused cells and 491 unused wires.

4.32.6. Rerunning OPT passes. (Removed registers in this run.)

4.32.7. Running ICE40 specific optimizations.
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) SOCnexpo.$auto$alumacc.cc:485:replace_alu$1360.slice[0].carry: CO=$auto$alumacc.cc:485:replace_alu$1360.BB [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) SOCnexpo.$auto$alumacc.cc:485:replace_alu$1371.slice[0].carry: CO=$auto$alumacc.cc:485:replace_alu$1371.BB [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) SOCnexpo.$auto$alumacc.cc:485:replace_alu$1384.slice[0].carry: CO=\Espera [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) SOCnexpo.$auto$alumacc.cc:485:replace_alu$1387.slice[0].carry: CO=\LEDS8_4.timer [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) SOCnexpo.$auto$alumacc.cc:485:replace_alu$1390.slice[0].carry: CO=\RV32I.F_pc [2]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) SOCnexpo.$auto$alumacc.cc:485:replace_alu$1396.slice[0].carry: CO=\RV32I.cycle [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) SOCnexpo.$auto$alumacc.cc:485:replace_alu$1402.slice[0].carry: CO=\UART_TX.bclk.divcounter [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) SOCnexpo.$auto$alumacc.cc:485:replace_alu$1405.slice[32].carry: CO=$auto$alumacc.cc:485:replace_alu$1405.C [32]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) SOCnexpo.$auto$alumacc.cc:485:replace_alu$1411.slice[0].carry: CO=\UART_RX.div2counter [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) SOCnexpo.$auto$alumacc.cc:485:replace_alu$1414.slice[0].carry: CO=\UART_RX.cont [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) SOCnexpo.$auto$alumacc.cc:485:replace_alu$1417.slice[0].carry: CO=\UART_RX.bclk.divcounter [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) SOCnexpo.$auto$alumacc.cc:485:replace_alu$1420.slice[0].carry: CO=\UART_TX.bits [0]

4.32.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module SOCnexpo.

4.32.9. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\SOCnexpo'.
Removed a total of 0 cells.

4.32.10. Executing OPT_RMDFF pass (remove dff with constant values).

4.32.11. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \SOCnexpo..
Removed 2 unused cells and 1 unused wires.

4.32.12. Rerunning OPT passes. (Removed registers in this run.)

4.32.13. Running ICE40 specific optimizations.

4.32.14. Executing OPT_EXPR pass (perform const folding).
Optimizing module SOCnexpo.

4.32.15. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\SOCnexpo'.
Removed a total of 0 cells.

4.32.16. Executing OPT_RMDFF pass (remove dff with constant values).

4.32.17. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \SOCnexpo..

4.32.18. Finished OPT passes. (There is nothing left to do.)

4.33. Executing DFFSR2DFF pass (mapping DFFSR cells to simpler FFs).

4.34. Executing DFF2DFFE pass (transform $dff to $dffe where applicable).
Selected cell types for direct conversion:
$_DFF_PP1_ -> $__DFFE_PP1
$_DFF_PP0_ -> $__DFFE_PP0
$_DFF_PN1_ -> $__DFFE_PN1
$_DFF_PN0_ -> $__DFFE_PN0
$_DFF_NP1_ -> $__DFFE_NP1
$_DFF_NP0_ -> $__DFFE_NP0
$_DFF_NN1_ -> $__DFFE_NN1
$_DFF_NN0_ -> $__DFFE_NN0
$_DFF_N_ -> $_DFFE_NP_
$_DFF_P_ -> $_DFFE_PP_
Transforming FF to FF+Enable cells in module SOCnexpo:
converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2065 to $_DFFE_PP_ for $0\tx_ready[0:0] -> \tx_ready.
converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2066 to $_DFFE_PP_ for $0\leds_en[0:0] -> \leds_en.
converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2067 to $_DFFE_PP_ for $0\leds1[7:0] [0] -> \leds1 [0].
converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2068 to $_DFFE_PP_ for $0\leds1[7:0] [1] -> \leds1 [1].
converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2069 to $_DFFE_PP_ for $0\leds1[7:0] [2] -> \leds1 [2].
converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2070 to $_DFFE_PP_ for $0\leds1[7:0] [3] -> \leds1 [3].
converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2071 to $_DFFE_PP_ for $0\leds1[7:0] [4] -> \leds1 [4].
converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2072 to $_DFFE_PP_ for $0\leds1[7:0] [5] -> \leds1 [5].
converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2073 to $_DFFE_PP_ for $0\leds1[7:0] [6] -> \leds1 [6].
converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2074 to $_DFFE_PP_ for $0\leds1[7:0] [7] -> \leds1 [7].
converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2075 to $_DFFE_PP_ for $0\leds2[7:0] [0] -> \leds2 [0].
converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2076 to $_DFFE_PP_ for $0\leds2[7:0] [1] -> \leds2 [1].
converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2077 to $_DFFE_PP_ for $0\leds2[7:0] [2] -> \leds2 [2].
converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2078 to $_DFFE_PP_ for $0\leds2[7:0] [3] -> \leds2 [3].
converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2079 to $_DFFE_PP_ for $0\leds2[7:0] [4] -> \leds2 [4].
converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2080 to $_DFFE_PP_ for $0\leds2[7:0] [5] -> \leds2 [5].
converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2081 to $_DFFE_PP_ for $0\leds2[7:0] [6] -> \leds2 [6].
converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2082 to $_DFFE_PP_ for $0\leds2[7:0] [7] -> \leds2 [7].
converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2083 to $_DFFE_PP_ for $0\leds3[7:0] [0] -> \leds3 [0].
converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2084 to $_DFFE_PP_ for $0\leds3[7:0] [1] -> \leds3 [1].
converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2085 to $_DFFE_PP_ for $0\leds3[7:0] [2] -> \leds3 [2].
converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2086 to $_DFFE_PP_ for $0\leds3[7:0] [3] -> \leds3 [3].
converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2087 to $_DFFE_PP_ for $0\leds3[7:0] [4] -> \leds3 [4].
converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2088 to $_DFFE_PP_ for $0\leds3[7:0] [5] -> \leds3 [5].
converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2089 to $_DFFE_PP_ for $0\leds3[7:0] [6] -> \leds3 [6].
converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2090 to $_DFFE_PP_ for $0\leds3[7:0] [7] -> \leds3 [7].
converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2091 to $_DFFE_PP_ for $0\leds4[7:0] [0] -> \leds4 [0].
converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2092 to $_DFFE_PP_ for $0\leds4[7:0] [1] -> \leds4 [1].
converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2093 to $_DFFE_PP_ for $0\leds4[7:0] [2] -> \leds4 [2].
converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2094 to $_DFFE_PP_ for $0\leds4[7:0] [3] -> \leds4 [3].
converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2095 to $_DFFE_PP_ for $0\leds4[7:0] [4] -> \leds4 [4].
converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2096 to $_DFFE_PP_ for $0\leds4[7:0] [5] -> \leds4 [5].
converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2097 to $_DFFE_PP_ for $0\leds4[7:0] [6] -> \leds4 [6].
converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2098 to $_DFFE_PP_ for $0\leds4[7:0] [7] -> \leds4 [7].
converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2099 to $_DFFE_PP_ for $0\rst[0:0] -> \rst.
converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2146 to $_DFFE_PP_ for $techmap\RV32I.$0\F_pc[31:0] [0] -> \RV32I.F_pc [0].
converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2147 to $_DFFE_PP_ for $techmap\RV32I.$0\F_pc[31:0] [1] -> \RV32I.F_pc [1].
converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2437 to $_DFFE_PP_ for $techmap\RV32I.$0\PWM_[31:0] [0] -> \RV32I.PWM_ [0].
converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2438 to $_DFFE_PP_ for $techmap\RV32I.$0\PWM_[31:0] [1] -> \RV32I.PWM_ [1].
converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2439 to $_DFFE_PP_ for $techmap\RV32I.$0\PWM_[31:0] [2] -> \RV32I.PWM_ [2].
converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2440 to $_DFFE_PP_ for $techmap\RV32I.$0\PWM_[31:0] [3] -> \RV32I.PWM_ [3].
converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2441 to $_DFFE_PP_ for $techmap\RV32I.$0\PWM_[31:0] [4] -> \RV32I.PWM_ [4].
converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2442 to $_DFFE_PP_ for $techmap\RV32I.$0\PWM_[31:0] [5] -> \RV32I.PWM_ [5].
converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2443 to $_DFFE_PP_ for $techmap\RV32I.$0\PWM_[31:0] [6] -> \RV32I.PWM_ [6].
converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2444 to $_DFFE_PP_ for $techmap\RV32I.$0\PWM_[31:0] [7] -> \RV32I.PWM_ [7].
converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2445 to $_DFFE_PP_ for $techmap\RV32I.$0\PWM_[31:0] [8] -> \RV32I.PWM_ [8].
converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2446 to $_DFFE_PP_ for $techmap\RV32I.$0\PWM_[31:0] [9] -> \RV32I.PWM_ [9].
converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2447 to $_DFFE_PP_ for $techmap\RV32I.$0\PWM_[31:0] [10] -> \RV32I.PWM_ [10].
converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2448 to $_DFFE_PP_ for $techmap\RV32I.$0\PWM_[31:0] [11] -> \RV32I.PWM_ [11].
converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2449 to $_DFFE_PP_ for $techmap\RV32I.$0\PWM_[31:0] [12] -> \RV32I.PWM_ [12].
converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2450 to $_DFFE_PP_ for $techmap\RV32I.$0\PWM_[31:0] [13] -> \RV32I.PWM_ [13].
converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2451 to $_DFFE_PP_ for $techmap\RV32I.$0\PWM_[31:0] [14] -> \RV32I.PWM_ [14].
converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2452 to $_DFFE_PP_ for $techmap\RV32I.$0\PWM_[31:0] [15] -> \RV32I.PWM_ [15].
converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2453 to $_DFFE_PP_ for $techmap\RV32I.$0\PWM_[31:0] [16] -> \RV32I.PWM_ [16].
converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2454 to $_DFFE_PP_ for $techmap\RV32I.$0\PWM_[31:0] [17] -> \RV32I.PWM_ [17].
converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2455 to $_DFFE_PP_ for $techmap\RV32I.$0\PWM_[31:0] [18] -> \RV32I.PWM_ [18].
converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2456 to $_DFFE_PP_ for $techmap\RV32I.$0\PWM_[31:0] [19] -> \RV32I.PWM_ [19].
converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2457 to $_DFFE_PP_ for $techmap\RV32I.$0\PWM_[31:0] [20] -> \RV32I.PWM_ [20].
converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2458 to $_DFFE_PP_ for $techmap\RV32I.$0\PWM_[31:0] [21] -> \RV32I.PWM_ [21].
converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2459 to $_DFFE_PP_ for $techmap\RV32I.$0\PWM_[31:0] [22] -> \RV32I.PWM_ [22].
converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2460 to $_DFFE_PP_ for $techmap\RV32I.$0\PWM_[31:0] [23] -> \RV32I.PWM_ [23].
converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2461 to $_DFFE_PP_ for $techmap\RV32I.$0\PWM_[31:0] [24] -> \RV32I.PWM_ [24].
converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2462 to $_DFFE_PP_ for $techmap\RV32I.$0\PWM_[31:0] [25] -> \RV32I.PWM_ [25].
converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2463 to $_DFFE_PP_ for $techmap\RV32I.$0\PWM_[31:0] [26] -> \RV32I.PWM_ [26].
converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2464 to $_DFFE_PP_ for $techmap\RV32I.$0\PWM_[31:0] [27] -> \RV32I.PWM_ [27].
converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2465 to $_DFFE_PP_ for $techmap\RV32I.$0\PWM_[31:0] [28] -> \RV32I.PWM_ [28].
converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2466 to $_DFFE_PP_ for $techmap\RV32I.$0\PWM_[31:0] [29] -> \RV32I.PWM_ [29].
converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2467 to $_DFFE_PP_ for $techmap\RV32I.$0\PWM_[31:0] [30] -> \RV32I.PWM_ [30].
converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2468 to $_DFFE_PP_ for $techmap\RV32I.$0\PWM_[31:0] [31] -> \RV32I.PWM_ [31].
converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4238 to $_DFFE_PP_ for $techmap\UART_TX.$0\state[0:0] -> \UART_TX.state.
converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4239 to $_DFFE_PP_ for $techmap\UART_TX.$0\q[8:0] [0] -> \UART_TX.q [0].
converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4240 to $_DFFE_PP_ for $techmap\UART_TX.$0\q[8:0] [1] -> \UART_TX.q [1].
converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4241 to $_DFFE_PP_ for $techmap\UART_TX.$0\q[8:0] [2] -> \UART_TX.q [2].
converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4242 to $_DFFE_PP_ for $techmap\UART_TX.$0\q[8:0] [3] -> \UART_TX.q [3].
converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4243 to $_DFFE_PP_ for $techmap\UART_TX.$0\q[8:0] [4] -> \UART_TX.q [4].
converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4244 to $_DFFE_PP_ for $techmap\UART_TX.$0\q[8:0] [5] -> \UART_TX.q [5].
converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4245 to $_DFFE_PP_ for $techmap\UART_TX.$0\q[8:0] [6] -> \UART_TX.q [6].
converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4246 to $_DFFE_PP_ for $techmap\UART_TX.$0\q[8:0] [7] -> \UART_TX.q [7].
converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4247 to $_DFFE_PP_ for $techmap\UART_TX.$0\q[8:0] [8] -> \UART_TX.q [8].
converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4249 to $_DFFE_PP_ for $techmap\UART_TX.$0\bits[3:0] [0] -> \UART_TX.bits [0].
converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4250 to $_DFFE_PP_ for $techmap\UART_TX.$0\bits[3:0] [1] -> \UART_TX.bits [1].
converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4251 to $_DFFE_PP_ for $techmap\UART_TX.$0\bits[3:0] [2] -> \UART_TX.bits [2].
converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4252 to $_DFFE_PP_ for $techmap\UART_TX.$0\bits[3:0] [3] -> \UART_TX.bits [3].
converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4302 to $_DFFE_PP_ for $techmap\UART_RX.$0\state[0:0] -> \UART_RX.state.
converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4303 to $_DFFE_PP_ for $techmap\UART_RX.$0\div2counter[6:0] [0] -> \UART_RX.div2counter [0].
converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4304 to $_DFFE_PP_ for $techmap\UART_RX.$0\div2counter[6:0] [1] -> \UART_RX.div2counter [1].
converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4305 to $_DFFE_PP_ for $techmap\UART_RX.$0\div2counter[6:0] [2] -> \UART_RX.div2counter [2].
converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4306 to $_DFFE_PP_ for $techmap\UART_RX.$0\div2counter[6:0] [3] -> \UART_RX.div2counter [3].
converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4307 to $_DFFE_PP_ for $techmap\UART_RX.$0\div2counter[6:0] [4] -> \UART_RX.div2counter [4].
converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4308 to $_DFFE_PP_ for $techmap\UART_RX.$0\div2counter[6:0] [5] -> \UART_RX.div2counter [5].
converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4309 to $_DFFE_PP_ for $techmap\UART_RX.$0\div2counter[6:0] [6] -> \UART_RX.div2counter [6].
converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4310 to $_DFFE_PP_ for $techmap\UART_RX.$0\sr[8:0] [0] -> \UART_RX.sr [0].
converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4311 to $_DFFE_PP_ for $techmap\UART_RX.$0\sr[8:0] [1] -> \UART_RX.sr [1].
converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4312 to $_DFFE_PP_ for $techmap\UART_RX.$0\sr[8:0] [2] -> \UART_RX.sr [2].
converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4313 to $_DFFE_PP_ for $techmap\UART_RX.$0\sr[8:0] [3] -> \UART_RX.sr [3].
converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4314 to $_DFFE_PP_ for $techmap\UART_RX.$0\sr[8:0] [4] -> \UART_RX.sr [4].
converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4315 to $_DFFE_PP_ for $techmap\UART_RX.$0\sr[8:0] [5] -> \UART_RX.sr [5].
converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4316 to $_DFFE_PP_ for $techmap\UART_RX.$0\sr[8:0] [6] -> \UART_RX.sr [6].
converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4317 to $_DFFE_PP_ for $techmap\UART_RX.$0\sr[8:0] [7] -> \UART_RX.sr [7].
converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4318 to $_DFFE_PP_ for $techmap\UART_RX.$0\sr[8:0] [8] -> \UART_RX.sr [8].
converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4319 to $_DFFE_PP_ for $techmap\UART_RX.$0\cont[4:0] [0] -> \UART_RX.cont [0].
converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4320 to $_DFFE_PP_ for $techmap\UART_RX.$0\cont[4:0] [1] -> \UART_RX.cont [1].
converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4321 to $_DFFE_PP_ for $techmap\UART_RX.$0\cont[4:0] [2] -> \UART_RX.cont [2].
converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4322 to $_DFFE_PP_ for $techmap\UART_RX.$0\cont[4:0] [3] -> \UART_RX.cont [3].
converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4323 to $_DFFE_PP_ for $techmap\UART_RX.$0\cont[4:0] [4] -> \UART_RX.cont [4].
converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4324 to $_DFFE_PP_ for $techmap\UART_RX.$0\data[7:0] [0] -> \UART_RX.data [0].
converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4325 to $_DFFE_PP_ for $techmap\UART_RX.$0\data[7:0] [1] -> \UART_RX.data [1].
converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4326 to $_DFFE_PP_ for $techmap\UART_RX.$0\data[7:0] [2] -> \UART_RX.data [2].
converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4327 to $_DFFE_PP_ for $techmap\UART_RX.$0\data[7:0] [3] -> \UART_RX.data [3].
converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4328 to $_DFFE_PP_ for $techmap\UART_RX.$0\data[7:0] [4] -> \UART_RX.data [4].
converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4329 to $_DFFE_PP_ for $techmap\UART_RX.$0\data[7:0] [5] -> \UART_RX.data [5].
converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4330 to $_DFFE_PP_ for $techmap\UART_RX.$0\data[7:0] [6] -> \UART_RX.data [6].
converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4331 to $_DFFE_PP_ for $techmap\UART_RX.$0\data[7:0] [7] -> \UART_RX.data [7].

4.35. Executing TECHMAP pass (map to technology primitives).

4.35.1. Executing Verilog-2005 frontend: /home/jfdava/.apio/packages/toolchain-yosys/bin/../share/yosys/ice40/cells_map.v
Parsing Verilog input from `/home/jfdava/.apio/packages/toolchain-yosys/bin/../share/yosys/ice40/cells_map.v' to AST representation.
Generating RTLIL representation for module `\$_DFF_N_'.
Generating RTLIL representation for module `\$_DFF_P_'.
Generating RTLIL representation for module `\$_DFFE_NN_'.
Generating RTLIL representation for module `\$_DFFE_PN_'.
Generating RTLIL representation for module `\$_DFFE_NP_'.
Generating RTLIL representation for module `\$_DFFE_PP_'.
Generating RTLIL representation for module `\$_DFF_NN0_'.
Generating RTLIL representation for module `\$_DFF_NN1_'.
Generating RTLIL representation for module `\$_DFF_PN0_'.
Generating RTLIL representation for module `\$_DFF_PN1_'.
Generating RTLIL representation for module `\$_DFF_NP0_'.
Generating RTLIL representation for module `\$_DFF_NP1_'.
Generating RTLIL representation for module `\$_DFF_PP0_'.
Generating RTLIL representation for module `\$_DFF_PP1_'.
Generating RTLIL representation for module `\$__DFFE_NN0'.
Generating RTLIL representation for module `\$__DFFE_NN1'.
Generating RTLIL representation for module `\$__DFFE_PN0'.
Generating RTLIL representation for module `\$__DFFE_PN1'.
Generating RTLIL representation for module `\$__DFFE_NP0'.
Generating RTLIL representation for module `\$__DFFE_NP1'.
Generating RTLIL representation for module `\$__DFFE_PP0'.
Generating RTLIL representation for module `\$__DFFE_PP1'.
Successfully finished Verilog frontend.

4.35.2. Continuing TECHMAP pass.
Using template \$_DFF_P_ for cells of type $_DFF_P_.
Using template \$_DFFE_PP_ for cells of type $_DFFE_PP_.
No more expansions possible.

4.36. Executing OPT_EXPR pass (perform const folding).
Optimizing module SOCnexpo.

4.37. Executing SIMPLEMAP pass (map simple cells to gate primitives).
Mapping SOCnexpo.$auto$alumacc.cc:485:replace_alu$1384.slice[0].carry ($lut).
Mapping SOCnexpo.$auto$alumacc.cc:485:replace_alu$1387.slice[0].carry ($lut).
Mapping SOCnexpo.$auto$alumacc.cc:485:replace_alu$1390.slice[0].carry ($lut).
Mapping SOCnexpo.$auto$alumacc.cc:485:replace_alu$1396.slice[0].carry ($lut).
Mapping SOCnexpo.$auto$alumacc.cc:485:replace_alu$1402.slice[0].carry ($lut).
Mapping SOCnexpo.$auto$alumacc.cc:485:replace_alu$1405.slice[32].carry ($lut).
Mapping SOCnexpo.$auto$alumacc.cc:485:replace_alu$1411.slice[0].carry ($lut).
Mapping SOCnexpo.$auto$alumacc.cc:485:replace_alu$1414.slice[0].carry ($lut).
Mapping SOCnexpo.$auto$alumacc.cc:485:replace_alu$1417.slice[0].carry ($lut).
Mapping SOCnexpo.$auto$alumacc.cc:485:replace_alu$1420.slice[0].carry ($lut).

4.38. Executing ICE40_FFINIT pass (implement FF init values).
Handling FF init values in SOCnexpo.
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5855 (SB_DFF): \UART_RX.bclk.divcounter [6] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2066 (SB_DFFE): \leds_en = 1
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2101 (SB_DFF): \Espera [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4097 (SB_DFF): \LEDS8_4.timer [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4246 (SB_DFFE): \UART_TX.q [7] = 1
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2102 (SB_DFF): \Espera [2] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2107 (SB_DFF): \Espera [7] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2105 (SB_DFF): \Espera [5] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2103 (SB_DFF): \Espera [3] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2106 (SB_DFF): \Espera [6] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2115 (SB_DFF): \RV32I.FD_pc [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2116 (SB_DFF): \RV32I.FD_pc [2] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4324 (SB_DFFE): \UART_RX.data [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2127 (SB_DFF): \RV32I.FD_pc [13] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2154 (SB_DFF): \RV32I.F_pc [8] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2128 (SB_DFF): \RV32I.FD_pc [14] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2119 (SB_DFF): \RV32I.FD_pc [5] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2124 (SB_DFF): \RV32I.FD_pc [10] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2129 (SB_DFF): \RV32I.FD_pc [15] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2114 (SB_DFF): \RV32I.FD_pc [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2168 (SB_DFF): \RV32I.F_pc [22] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2155 (SB_DFF): \RV32I.F_pc [9] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2162 (SB_DFF): \RV32I.F_pc [16] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2122 (SB_DFF): \RV32I.FD_pc [8] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2149 (SB_DFF): \RV32I.F_pc [3] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2169 (SB_DFF): \RV32I.F_pc [23] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2167 (SB_DFF): \RV32I.F_pc [21] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2166 (SB_DFF): \RV32I.F_pc [20] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2164 (SB_DFF): \RV32I.F_pc [18] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2163 (SB_DFF): \RV32I.F_pc [17] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2161 (SB_DFF): \RV32I.F_pc [15] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2165 (SB_DFF): \RV32I.F_pc [19] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2160 (SB_DFF): \RV32I.F_pc [14] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2159 (SB_DFF): \RV32I.F_pc [13] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2148 (SB_DFF): \RV32I.F_pc [2] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2158 (SB_DFF): \RV32I.F_pc [12] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2157 (SB_DFF): \RV32I.F_pc [11] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2170 (SB_DFF): \RV32I.F_pc [24] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2146 (SB_DFFE): \RV32I.F_pc [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2173 (SB_DFF): \RV32I.F_pc [27] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2172 (SB_DFF): \RV32I.F_pc [26] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2099 (SB_DFFE): \rst = 1
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2125 (SB_DFF): \RV32I.FD_pc [11] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2104 (SB_DFF): \Espera [4] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2171 (SB_DFF): \RV32I.F_pc [25] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2126 (SB_DFF): \RV32I.FD_pc [12] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2131 (SB_DFF): \RV32I.FD_pc [17] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2132 (SB_DFF): \RV32I.FD_pc [18] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2133 (SB_DFF): \RV32I.FD_pc [19] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2134 (SB_DFF): \RV32I.FD_pc [20] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2135 (SB_DFF): \RV32I.FD_pc [21] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2136 (SB_DFF): \RV32I.FD_pc [22] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2137 (SB_DFF): \RV32I.FD_pc [23] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2138 (SB_DFF): \RV32I.FD_pc [24] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2139 (SB_DFF): \RV32I.FD_pc [25] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2140 (SB_DFF): \RV32I.FD_pc [26] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2141 (SB_DFF): \RV32I.FD_pc [27] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2142 (SB_DFF): \RV32I.FD_pc [28] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2143 (SB_DFF): \RV32I.FD_pc [29] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2144 (SB_DFF): \RV32I.FD_pc [30] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2145 (SB_DFF): \RV32I.FD_pc [31] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2174 (SB_DFF): \RV32I.F_pc [28] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2150 (SB_DFF): \RV32I.F_pc [4] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2100 (SB_DFF): \Espera [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2156 (SB_DFF): \RV32I.F_pc [10] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2120 (SB_DFF): \RV32I.FD_pc [6] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5811 (SB_DFF): \UART_TX.bclk.divcounter [3] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2118 (SB_DFF): \RV32I.FD_pc [4] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2130 (SB_DFF): \RV32I.FD_pc [16] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4105 (SB_DFF): \LEDS8_4.timer [8] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4106 (SB_DFF): \LEDS8_4.timer [9] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2121 (SB_DFF): \RV32I.FD_pc [7] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2151 (SB_DFF): \RV32I.F_pc [5] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2175 (SB_DFF): \RV32I.F_pc [29] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4253 (SB_DFF): \UART_TX.done = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2117 (SB_DFF): \RV32I.FD_pc [3] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5849 (SB_DFF): \UART_RX.bclk.divcounter [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2177 (SB_DFF): \RV32I.F_pc [31] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2176 (SB_DFF): \RV32I.F_pc [30] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2153 (SB_DFF): \RV32I.F_pc [7] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2152 (SB_DFF): \RV32I.F_pc [6] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2113 (SB_DFF): \RV32I.FD_nop = 1
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2147 (SB_DFFE): \RV32I.F_pc [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2123 (SB_DFF): \RV32I.FD_pc [9] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4098 (SB_DFF): \LEDS8_4.timer [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4099 (SB_DFF): \LEDS8_4.timer [2] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4100 (SB_DFF): \LEDS8_4.timer [3] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4101 (SB_DFF): \LEDS8_4.timer [4] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4102 (SB_DFF): \LEDS8_4.timer [5] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4103 (SB_DFF): \LEDS8_4.timer [6] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4104 (SB_DFF): \LEDS8_4.timer [7] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4107 (SB_DFF): \LEDS8_4.timer [10] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4108 (SB_DFF): \LEDS8_4.timer [11] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4238 (SB_DFFE): \UART_TX.state = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4237 (SB_DFF): \UART_TX.q_re = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4240 (SB_DFFE): \UART_TX.q [1] = 1
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4241 (SB_DFFE): \UART_TX.q [2] = 1
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4242 (SB_DFFE): \UART_TX.q [3] = 1
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4243 (SB_DFFE): \UART_TX.q [4] = 1
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4244 (SB_DFFE): \UART_TX.q [5] = 1
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4245 (SB_DFFE): \UART_TX.q [6] = 1
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4239 (SB_DFFE): \UART_TX.q [0] = 1
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4248 (SB_DFF): \UART_TX.TX = 1
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4247 (SB_DFFE): \UART_TX.q [8] = 1
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4250 (SB_DFFE): \UART_TX.bits [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4251 (SB_DFFE): \UART_TX.bits [2] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4249 (SB_DFFE): \UART_TX.bits [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4301 (SB_DFF): \UART_RX.q_t0 = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4302 (SB_DFFE): \UART_RX.state = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4252 (SB_DFFE): \UART_TX.bits [3] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4304 (SB_DFFE): \UART_RX.div2counter [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4305 (SB_DFFE): \UART_RX.div2counter [2] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4306 (SB_DFFE): \UART_RX.div2counter [3] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4307 (SB_DFFE): \UART_RX.div2counter [4] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4308 (SB_DFFE): \UART_RX.div2counter [5] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4303 (SB_DFFE): \UART_RX.div2counter [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4309 (SB_DFFE): \UART_RX.div2counter [6] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4311 (SB_DFFE): \UART_RX.sr [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4312 (SB_DFFE): \UART_RX.sr [2] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4313 (SB_DFFE): \UART_RX.sr [3] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4314 (SB_DFFE): \UART_RX.sr [4] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4315 (SB_DFFE): \UART_RX.sr [5] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4316 (SB_DFFE): \UART_RX.sr [6] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4317 (SB_DFFE): \UART_RX.sr [7] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4310 (SB_DFFE): \UART_RX.sr [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4318 (SB_DFFE): \UART_RX.sr [8] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4320 (SB_DFFE): \UART_RX.cont [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4321 (SB_DFFE): \UART_RX.cont [2] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4322 (SB_DFFE): \UART_RX.cont [3] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4319 (SB_DFFE): \UART_RX.cont [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4323 (SB_DFFE): \UART_RX.cont [4] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4325 (SB_DFFE): \UART_RX.data [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4326 (SB_DFFE): \UART_RX.data [2] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4327 (SB_DFFE): \UART_RX.data [3] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4328 (SB_DFFE): \UART_RX.data [4] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4329 (SB_DFFE): \UART_RX.data [5] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4330 (SB_DFFE): \UART_RX.data [6] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4331 (SB_DFFE): \UART_RX.data [7] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5808 (SB_DFF): \UART_TX.bclk.divcounter [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5809 (SB_DFF): \UART_TX.bclk.divcounter [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5810 (SB_DFF): \UART_TX.bclk.divcounter [2] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5812 (SB_DFF): \UART_TX.bclk.divcounter [4] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5813 (SB_DFF): \UART_TX.bclk.divcounter [5] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5814 (SB_DFF): \UART_TX.bclk.divcounter [6] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5850 (SB_DFF): \UART_RX.bclk.divcounter [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5851 (SB_DFF): \UART_RX.bclk.divcounter [2] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5852 (SB_DFF): \UART_RX.bclk.divcounter [3] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5853 (SB_DFF): \UART_RX.bclk.divcounter [4] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5854 (SB_DFF): \UART_RX.bclk.divcounter [5] = 0

4.39. Executing ICE40_FFSSR pass (merge synchronous set/reset into FF cells).
Merging set/reset $_MUX_ cells into SB_FFs in SOCnexpo.
Merging $auto$simplemap.cc:277:simplemap_mux$5862 (A=$auto$wreduce.cc:460:run$1352 [6], B=1'0, S=\UART_RX.bclk.reset) into $auto$simplemap.cc:420:simplemap_dff$5855 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$1923 (A=$procmux$701_Y, B=1'1, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$2065 (SB_DFFE).
Merging $auto$simplemap.cc:277:simplemap_mux$1967 (A=\RV32I.EM_rs2Data [1], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$2068 (SB_DFFE).
Merging $auto$simplemap.cc:277:simplemap_mux$1968 (A=\RV32I.EM_rs2Data [2], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$2069 (SB_DFFE).
Merging $auto$simplemap.cc:277:simplemap_mux$1969 (A=\RV32I.EM_rs2Data [3], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$2070 (SB_DFFE).
Merging $auto$simplemap.cc:277:simplemap_mux$1949 (A=\DatatoWrite [31], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$2098 (SB_DFFE).
Merging $auto$simplemap.cc:277:simplemap_mux$1947 (A=\DatatoWrite [29], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$2096 (SB_DFFE).
Merging $auto$simplemap.cc:277:simplemap_mux$2020 (A=\DatatoWrite [14], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$2081 (SB_DFFE).
Merging $auto$simplemap.cc:277:simplemap_mux$1966 (A=\RV32I.EM_rs2Data [0], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$2067 (SB_DFFE).
Merging $auto$simplemap.cc:277:simplemap_mux$3262 (A=$techmap\RV32I.$add$Procesador_V2.0b/RV32nexpo.v:493$321_Y [9], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$2478 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$3302 (A=$techmap\RV32I.$add$Procesador_V2.0b/RV32nexpo.v:493$321_Y [49], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$2518 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$3589 (A=\RV32I.DE_rs1Data [8], B=1'0, S=\RV32I.DE_funct3 [2]) into $auto$simplemap.cc:420:simplemap_dff$2304 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$2019 (A=\DatatoWrite [13], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$2080 (SB_DFFE).
Merging $auto$simplemap.cc:277:simplemap_mux$1973 (A=\RV32I.EM_rs2Data [7], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$2074 (SB_DFFE).
Merging $auto$simplemap.cc:277:simplemap_mux$2014 (A=\DatatoWrite [8], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$2075 (SB_DFFE).
Merging $auto$simplemap.cc:277:simplemap_mux$3115 (A=\RV32I.M_CSRtoWrite [22], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$2459 (SB_DFFE).
Merging $auto$simplemap.cc:277:simplemap_mux$1945 (A=\DatatoWrite [27], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$2094 (SB_DFFE).
Merging $auto$simplemap.cc:277:simplemap_mux$1944 (A=\DatatoWrite [26], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$2093 (SB_DFFE).
Merging $auto$simplemap.cc:277:simplemap_mux$1997 (A=\DatatoWrite [23], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$2090 (SB_DFFE).
Merging $auto$simplemap.cc:277:simplemap_mux$4121 (A=$auto$simplemap.cc:309:simplemap_lut$10094, B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$4097 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$1990 (A=\DatatoWrite [16], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$2083 (SB_DFFE).
Merging $auto$simplemap.cc:277:simplemap_mux$1995 (A=\DatatoWrite [21], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$2088 (SB_DFFE).
Merging $auto$simplemap.cc:277:simplemap_mux$1943 (A=\DatatoWrite [25], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$2092 (SB_DFFE).
Merging $auto$simplemap.cc:277:simplemap_mux$1994 (A=\DatatoWrite [20], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$2087 (SB_DFFE).
Merging $auto$simplemap.cc:277:simplemap_mux$1993 (A=\DatatoWrite [19], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$2086 (SB_DFFE).
Merging $auto$simplemap.cc:277:simplemap_mux$3299 (A=$techmap\RV32I.$add$Procesador_V2.0b/RV32nexpo.v:493$321_Y [46], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$2515 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$1992 (A=\DatatoWrite [18], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$2085 (SB_DFFE).
Merging $auto$simplemap.cc:277:simplemap_mux$1942 (A=\DatatoWrite [24], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$2091 (SB_DFFE).
Merging $auto$simplemap.cc:277:simplemap_mux$1972 (A=\RV32I.EM_rs2Data [6], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$2073 (SB_DFFE).
Merging $auto$simplemap.cc:277:simplemap_mux$4062 (A=\instr [31], B=1'0, S=\RV32I.FD_nop) into $auto$simplemap.cc:420:simplemap_dff$2237 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$3258 (A=$techmap\RV32I.$add$Procesador_V2.0b/RV32nexpo.v:493$321_Y [5], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$2474 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$2662 (A=\RV32I.F_pc [1], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$2115 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$2663 (A=\RV32I.F_pc [2], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$2116 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$2674 (A=\RV32I.F_pc [13], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$2127 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$3295 (A=$techmap\RV32I.$add$Procesador_V2.0b/RV32nexpo.v:493$321_Y [42], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$2511 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$3095 (A=\RV32I.M_CSRtoWrite [2], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$2439 (SB_DFFE).
Merging $auto$simplemap.cc:277:simplemap_mux$2605 (A=$techmap\RV32I.$procmux$1102_Y [8], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$2154 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$2675 (A=\RV32I.F_pc [14], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$2128 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$2021 (A=\DatatoWrite [15], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$2082 (SB_DFFE).
Merging $auto$simplemap.cc:277:simplemap_mux$3297 (A=$techmap\RV32I.$add$Procesador_V2.0b/RV32nexpo.v:493$321_Y [44], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$2513 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$2666 (A=\RV32I.F_pc [5], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$2119 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$2671 (A=\RV32I.F_pc [10], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$2124 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$2676 (A=\RV32I.F_pc [15], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$2129 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$3281 (A=$techmap\RV32I.$add$Procesador_V2.0b/RV32nexpo.v:493$321_Y [28], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$2497 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$4133 (A=1'1, B=$techmap$techmap\LEDS8_4.$procmux$1125.$ternary$/home/jfdava/.apio/packages/toolchain-yosys/bin/../share/yosys/techmap.v:445$4138_Y [0], S=$techmap\LEDS8_4.$and$ControladorMatrizLed.v:42$6_Y) into $auto$simplemap.cc:420:simplemap_dff$4117 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$3256 (A=$techmap\RV32I.$add$Procesador_V2.0b/RV32nexpo.v:493$321_Y [3], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$2472 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$3215 (A=$techmap\RV32I.$add$Procesador_V2.0b/RV32nexpo.v:492$319_Y [26], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$2559 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$3305 (A=$techmap\RV32I.$add$Procesador_V2.0b/RV32nexpo.v:493$321_Y [52], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$2521 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$3257 (A=$techmap\RV32I.$add$Procesador_V2.0b/RV32nexpo.v:493$321_Y [4], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$2473 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$2661 (A=\RV32I.F_pc [0], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$2114 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$4050 (A=\instr [19], B=1'0, S=\RV32I.FD_nop) into $auto$simplemap.cc:420:simplemap_dff$2205 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$2619 (A=$techmap\RV32I.$procmux$1102_Y [22], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$2168 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$2606 (A=$techmap\RV32I.$procmux$1102_Y [9], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$2155 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$2613 (A=$techmap\RV32I.$procmux$1102_Y [16], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$2162 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$3122 (A=\RV32I.M_CSRtoWrite [29], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$2466 (SB_DFFE).
Merging $auto$simplemap.cc:277:simplemap_mux$3294 (A=$techmap\RV32I.$add$Procesador_V2.0b/RV32nexpo.v:493$321_Y [41], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$2510 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$3293 (A=$techmap\RV32I.$add$Procesador_V2.0b/RV32nexpo.v:493$321_Y [40], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$2509 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$2669 (A=\RV32I.F_pc [8], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$2122 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$2600 (A=$techmap\RV32I.$procmux$1102_Y [3], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$2149 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$3291 (A=$techmap\RV32I.$add$Procesador_V2.0b/RV32nexpo.v:493$321_Y [38], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$2507 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$2620 (A=$techmap\RV32I.$procmux$1102_Y [23], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$2169 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$2618 (A=$techmap\RV32I.$procmux$1102_Y [21], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$2167 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$2617 (A=$techmap\RV32I.$procmux$1102_Y [20], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$2166 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$2615 (A=$techmap\RV32I.$procmux$1102_Y [18], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$2164 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$3587 (A=\RV32I.DE_rs1Data [6], B=1'0, S=\RV32I.DE_funct3 [2]) into $auto$simplemap.cc:420:simplemap_dff$2302 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$2614 (A=$techmap\RV32I.$procmux$1102_Y [17], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$2163 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$2612 (A=$techmap\RV32I.$procmux$1102_Y [15], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$2161 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$2616 (A=$techmap\RV32I.$procmux$1102_Y [19], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$2165 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$2611 (A=$techmap\RV32I.$procmux$1102_Y [14], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$2160 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$2610 (A=$techmap\RV32I.$procmux$1102_Y [13], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$2159 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$2599 (A=$techmap\RV32I.$procmux$1102_Y [2], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$2148 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$2609 (A=$techmap\RV32I.$procmux$1102_Y [12], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$2158 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$3217 (A=$techmap\RV32I.$add$Procesador_V2.0b/RV32nexpo.v:492$319_Y [28], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$2561 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$3746 (A=1'0, B=\RV32I.FD_instr [14], S=\RV32I.D_ALUFun) into $auto$simplemap.cc:420:simplemap_dff$2194 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$2608 (A=$techmap\RV32I.$procmux$1102_Y [11], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$2157 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$2621 (A=$techmap\RV32I.$procmux$1102_Y [24], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$2170 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$3123 (A=\RV32I.M_CSRtoWrite [30], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$2467 (SB_DFFE).
Merging $auto$simplemap.cc:277:simplemap_mux$3292 (A=$techmap\RV32I.$add$Procesador_V2.0b/RV32nexpo.v:493$321_Y [39], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$2508 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$2597 (A=\RV32I.E_JumpAddr [0], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$2146 (SB_DFFE).
Merging $auto$simplemap.cc:277:simplemap_mux$2813 (A=1'0, B=$techmap\RV32I.$procmux$1035_Y, S=$auto$simplemap.cc:256:simplemap_eqne$4013) into $auto$simplemap.cc:420:simplemap_dff$2178 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$2832 (A=1'1, B=$techmap\RV32I.$procmux$894_Y, S=$auto$simplemap.cc:256:simplemap_eqne$4013) into $auto$simplemap.cc:420:simplemap_dff$2183 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$2794 (A=1'0, B=$techmap\RV32I.$procmux$1079_Y, S=$auto$simplemap.cc:256:simplemap_eqne$4013) into $auto$simplemap.cc:420:simplemap_dff$2184 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$3612 (A=\RV32I.DE_rs1Data [31], B=1'0, S=\RV32I.DE_funct3 [2]) into $auto$simplemap.cc:420:simplemap_dff$2327 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$3611 (A=\RV32I.DE_rs1Data [30], B=1'0, S=\RV32I.DE_funct3 [2]) into $auto$simplemap.cc:420:simplemap_dff$2326 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$4043 (A=\instr [12], B=1'0, S=\RV32I.FD_nop) into $auto$simplemap.cc:420:simplemap_dff$2189 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$2624 (A=$techmap\RV32I.$procmux$1102_Y [27], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$2173 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$3745 (A=1'0, B=\RV32I.FD_instr [13], S=\RV32I.D_ALUFun) into $auto$simplemap.cc:420:simplemap_dff$2193 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$2623 (A=$techmap\RV32I.$procmux$1102_Y [26], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$2172 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$3744 (A=1'0, B=\RV32I.FD_instr [12], S=\RV32I.D_ALUFun) into $auto$simplemap.cc:420:simplemap_dff$2192 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$3610 (A=\RV32I.DE_rs1Data [29], B=1'0, S=\RV32I.DE_funct3 [2]) into $auto$simplemap.cc:420:simplemap_dff$2325 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$3609 (A=\RV32I.DE_rs1Data [28], B=1'0, S=\RV32I.DE_funct3 [2]) into $auto$simplemap.cc:420:simplemap_dff$2324 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$3301 (A=$techmap\RV32I.$add$Procesador_V2.0b/RV32nexpo.v:493$321_Y [48], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$2517 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$4038 (A=\instr [7], B=1'0, S=\RV32I.FD_nop) into $auto$simplemap.cc:420:simplemap_dff$2196 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$3124 (A=\RV32I.M_CSRtoWrite [31], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$2468 (SB_DFFE).
Merging $auto$simplemap.cc:277:simplemap_mux$3290 (A=$techmap\RV32I.$add$Procesador_V2.0b/RV32nexpo.v:493$321_Y [37], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$2506 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$3289 (A=$techmap\RV32I.$add$Procesador_V2.0b/RV32nexpo.v:493$321_Y [36], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$2505 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$4046 (A=\instr [15], B=1'0, S=\RV32I.FD_nop) into $auto$simplemap.cc:420:simplemap_dff$2201 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$3216 (A=$techmap\RV32I.$add$Procesador_V2.0b/RV32nexpo.v:492$319_Y [27], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$2560 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$3586 (A=\RV32I.DE_rs1Data [5], B=1'0, S=\RV32I.DE_funct3 [2]) into $auto$simplemap.cc:420:simplemap_dff$2301 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$2672 (A=\RV32I.F_pc [11], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$2125 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$3219 (A=$techmap\RV32I.$add$Procesador_V2.0b/RV32nexpo.v:492$319_Y [30], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$2563 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$1996 (A=\DatatoWrite [22], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$2089 (SB_DFFE).
Merging $auto$simplemap.cc:277:simplemap_mux$2622 (A=$techmap\RV32I.$procmux$1102_Y [25], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$2171 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$3254 (A=$techmap\RV32I.$add$Procesador_V2.0b/RV32nexpo.v:493$321_Y [1], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$2470 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$3288 (A=$techmap\RV32I.$add$Procesador_V2.0b/RV32nexpo.v:493$321_Y [35], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$2504 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$3287 (A=$techmap\RV32I.$add$Procesador_V2.0b/RV32nexpo.v:493$321_Y [34], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$2503 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$2694 (A=1'0, B=$techmap\RV32I.$procmux$1090_Y [0], S=$auto$simplemap.cc:256:simplemap_eqne$3947) into $auto$simplemap.cc:420:simplemap_dff$2206 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$3286 (A=$techmap\RV32I.$add$Procesador_V2.0b/RV32nexpo.v:493$321_Y [33], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$2502 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$3284 (A=$techmap\RV32I.$add$Procesador_V2.0b/RV32nexpo.v:493$321_Y [31], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$2500 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$3285 (A=$techmap\RV32I.$add$Procesador_V2.0b/RV32nexpo.v:493$321_Y [32], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$2501 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$3283 (A=$techmap\RV32I.$add$Procesador_V2.0b/RV32nexpo.v:493$321_Y [30], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$2499 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$2673 (A=\RV32I.F_pc [12], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$2126 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$3260 (A=$techmap\RV32I.$add$Procesador_V2.0b/RV32nexpo.v:493$321_Y [7], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$2476 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$3277 (A=$techmap\RV32I.$add$Procesador_V2.0b/RV32nexpo.v:493$321_Y [24], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$2493 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$2678 (A=\RV32I.F_pc [17], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$2131 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$2679 (A=\RV32I.F_pc [18], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$2132 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$2680 (A=\RV32I.F_pc [19], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$2133 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$2681 (A=\RV32I.F_pc [20], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$2134 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$2682 (A=\RV32I.F_pc [21], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$2135 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$2683 (A=\RV32I.F_pc [22], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$2136 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$2684 (A=\RV32I.F_pc [23], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$2137 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$2685 (A=\RV32I.F_pc [24], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$2138 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$2686 (A=\RV32I.F_pc [25], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$2139 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$2687 (A=\RV32I.F_pc [26], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$2140 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$2688 (A=\RV32I.F_pc [27], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$2141 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$2689 (A=\RV32I.F_pc [28], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$2142 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$2690 (A=\RV32I.F_pc [29], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$2143 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$2691 (A=\RV32I.F_pc [30], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$2144 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$2692 (A=\RV32I.F_pc [31], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$2145 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$4044 (A=\instr [13], B=1'0, S=\RV32I.FD_nop) into $auto$simplemap.cc:420:simplemap_dff$2190 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$4045 (A=\instr [14], B=1'0, S=\RV32I.FD_nop) into $auto$simplemap.cc:420:simplemap_dff$2191 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$4039 (A=\instr [8], B=1'0, S=\RV32I.FD_nop) into $auto$simplemap.cc:420:simplemap_dff$2197 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$4040 (A=\instr [9], B=1'0, S=\RV32I.FD_nop) into $auto$simplemap.cc:420:simplemap_dff$2198 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$4041 (A=\instr [10], B=1'0, S=\RV32I.FD_nop) into $auto$simplemap.cc:420:simplemap_dff$2199 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$3261 (A=$techmap\RV32I.$add$Procesador_V2.0b/RV32nexpo.v:493$321_Y [8], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$2477 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$2695 (A=1'0, B=$techmap\RV32I.$procmux$1090_Y [1], S=$auto$simplemap.cc:256:simplemap_eqne$3947) into $auto$simplemap.cc:420:simplemap_dff$2207 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$2696 (A=1'0, B=$techmap\RV32I.$procmux$1090_Y [2], S=$auto$simplemap.cc:256:simplemap_eqne$3947) into $auto$simplemap.cc:420:simplemap_dff$2208 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$2697 (A=1'0, B=$techmap\RV32I.$procmux$1090_Y [3], S=$auto$simplemap.cc:256:simplemap_eqne$3947) into $auto$simplemap.cc:420:simplemap_dff$2209 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$2698 (A=1'0, B=$techmap\RV32I.$procmux$1090_Y [4], S=$auto$simplemap.cc:256:simplemap_eqne$3947) into $auto$simplemap.cc:420:simplemap_dff$2210 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$2699 (A=1'0, B=$techmap\RV32I.$procmux$1090_Y [5], S=$auto$simplemap.cc:256:simplemap_eqne$3947) into $auto$simplemap.cc:420:simplemap_dff$2211 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$2700 (A=1'0, B=$techmap\RV32I.$procmux$1090_Y [6], S=$auto$simplemap.cc:256:simplemap_eqne$3947) into $auto$simplemap.cc:420:simplemap_dff$2212 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$2701 (A=1'0, B=$techmap\RV32I.$procmux$1090_Y [7], S=$auto$simplemap.cc:256:simplemap_eqne$3947) into $auto$simplemap.cc:420:simplemap_dff$2213 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$2703 (A=1'0, B=$techmap\RV32I.$procmux$1090_Y [9], S=$auto$simplemap.cc:256:simplemap_eqne$3947) into $auto$simplemap.cc:420:simplemap_dff$2215 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$2704 (A=1'0, B=$techmap\RV32I.$procmux$1090_Y [10], S=$auto$simplemap.cc:256:simplemap_eqne$3947) into $auto$simplemap.cc:420:simplemap_dff$2216 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$2705 (A=1'0, B=$techmap\RV32I.$procmux$1090_Y [11], S=$auto$simplemap.cc:256:simplemap_eqne$3947) into $auto$simplemap.cc:420:simplemap_dff$2217 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$3309 (A=$techmap\RV32I.$add$Procesador_V2.0b/RV32nexpo.v:493$321_Y [56], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$2525 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$4042 (A=\instr [11], B=1'0, S=\RV32I.FD_nop) into $auto$simplemap.cc:420:simplemap_dff$2200 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$2625 (A=$techmap\RV32I.$procmux$1102_Y [28], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$2174 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$2601 (A=$techmap\RV32I.$procmux$1102_Y [4], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$2150 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$1991 (A=\DatatoWrite [17], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$2084 (SB_DFFE).
Merging $auto$simplemap.cc:277:simplemap_mux$3593 (A=\RV32I.DE_rs1Data [12], B=1'0, S=\RV32I.DE_funct3 [2]) into $auto$simplemap.cc:420:simplemap_dff$2308 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$3594 (A=\RV32I.DE_rs1Data [13], B=1'0, S=\RV32I.DE_funct3 [2]) into $auto$simplemap.cc:420:simplemap_dff$2309 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$3595 (A=\RV32I.DE_rs1Data [14], B=1'0, S=\RV32I.DE_funct3 [2]) into $auto$simplemap.cc:420:simplemap_dff$2310 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$3596 (A=\RV32I.DE_rs1Data [15], B=1'0, S=\RV32I.DE_funct3 [2]) into $auto$simplemap.cc:420:simplemap_dff$2311 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$3597 (A=\RV32I.DE_rs1Data [16], B=1'0, S=\RV32I.DE_funct3 [2]) into $auto$simplemap.cc:420:simplemap_dff$2312 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$3598 (A=\RV32I.DE_rs1Data [17], B=1'0, S=\RV32I.DE_funct3 [2]) into $auto$simplemap.cc:420:simplemap_dff$2313 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$3599 (A=\RV32I.DE_rs1Data [18], B=1'0, S=\RV32I.DE_funct3 [2]) into $auto$simplemap.cc:420:simplemap_dff$2314 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$3600 (A=\RV32I.DE_rs1Data [19], B=1'0, S=\RV32I.DE_funct3 [2]) into $auto$simplemap.cc:420:simplemap_dff$2315 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$3601 (A=\RV32I.DE_rs1Data [20], B=1'0, S=\RV32I.DE_funct3 [2]) into $auto$simplemap.cc:420:simplemap_dff$2316 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$3602 (A=\RV32I.DE_rs1Data [21], B=1'0, S=\RV32I.DE_funct3 [2]) into $auto$simplemap.cc:420:simplemap_dff$2317 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$3603 (A=\RV32I.DE_rs1Data [22], B=1'0, S=\RV32I.DE_funct3 [2]) into $auto$simplemap.cc:420:simplemap_dff$2318 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$3604 (A=\RV32I.DE_rs1Data [23], B=1'0, S=\RV32I.DE_funct3 [2]) into $auto$simplemap.cc:420:simplemap_dff$2319 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$3264 (A=$techmap\RV32I.$add$Procesador_V2.0b/RV32nexpo.v:493$321_Y [11], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$2480 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$3266 (A=$techmap\RV32I.$add$Procesador_V2.0b/RV32nexpo.v:493$321_Y [13], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$2482 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$3607 (A=\RV32I.DE_rs1Data [26], B=1'0, S=\RV32I.DE_funct3 [2]) into $auto$simplemap.cc:420:simplemap_dff$2322 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$3608 (A=\RV32I.DE_rs1Data [27], B=1'0, S=\RV32I.DE_funct3 [2]) into $auto$simplemap.cc:420:simplemap_dff$2323 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$3282 (A=$techmap\RV32I.$add$Procesador_V2.0b/RV32nexpo.v:493$321_Y [29], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$2498 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$3118 (A=\RV32I.M_CSRtoWrite [25], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$2462 (SB_DFFE).
Merging $auto$simplemap.cc:277:simplemap_mux$3304 (A=$techmap\RV32I.$add$Procesador_V2.0b/RV32nexpo.v:493$321_Y [51], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$2520 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$3094 (A=\RV32I.M_CSRtoWrite [1], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$2438 (SB_DFFE).
Merging $auto$simplemap.cc:277:simplemap_mux$3200 (A=$techmap\RV32I.$add$Procesador_V2.0b/RV32nexpo.v:492$319_Y [11], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$2544 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$3202 (A=$techmap\RV32I.$add$Procesador_V2.0b/RV32nexpo.v:492$319_Y [13], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$2546 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$3206 (A=$techmap\RV32I.$add$Procesador_V2.0b/RV32nexpo.v:492$319_Y [17], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$2550 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$2807 (A=1'0, B=$techmap\RV32I.$procmux$1054_Y, S=$auto$simplemap.cc:256:simplemap_eqne$4013) into $auto$simplemap.cc:420:simplemap_dff$2195 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$2607 (A=$techmap\RV32I.$procmux$1102_Y [10], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$2156 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$3218 (A=$techmap\RV32I.$add$Procesador_V2.0b/RV32nexpo.v:492$319_Y [29], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$2562 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$3276 (A=$techmap\RV32I.$add$Procesador_V2.0b/RV32nexpo.v:493$321_Y [23], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$2492 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$2667 (A=\RV32I.F_pc [6], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$2120 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$5818 (A=$auto$wreduce.cc:460:run$1353 [3], B=1'0, S=\UART_TX.bclk.reset) into $auto$simplemap.cc:420:simplemap_dff$5811 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$3259 (A=$techmap\RV32I.$add$Procesador_V2.0b/RV32nexpo.v:493$321_Y [6], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$2475 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$2665 (A=\RV32I.F_pc [4], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$2118 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$1948 (A=\DatatoWrite [30], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$2097 (SB_DFFE).
Merging $auto$simplemap.cc:277:simplemap_mux$1970 (A=\RV32I.EM_rs2Data [4], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$2071 (SB_DFFE).
Merging $auto$simplemap.cc:277:simplemap_mux$3303 (A=$techmap\RV32I.$add$Procesador_V2.0b/RV32nexpo.v:493$321_Y [50], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$2519 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$3231 (A=$techmap\RV32I.$add$Procesador_V2.0b/RV32nexpo.v:492$319_Y [42], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$2575 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$3214 (A=$techmap\RV32I.$add$Procesador_V2.0b/RV32nexpo.v:492$319_Y [25], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$2558 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$3211 (A=$techmap\RV32I.$add$Procesador_V2.0b/RV32nexpo.v:492$319_Y [22], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$2555 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$3232 (A=$techmap\RV32I.$add$Procesador_V2.0b/RV32nexpo.v:492$319_Y [43], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$2576 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$3220 (A=$techmap\RV32I.$add$Procesador_V2.0b/RV32nexpo.v:492$319_Y [31], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$2564 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$3606 (A=\RV32I.DE_rs1Data [25], B=1'0, S=\RV32I.DE_funct3 [2]) into $auto$simplemap.cc:420:simplemap_dff$2321 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$3311 (A=$techmap\RV32I.$add$Procesador_V2.0b/RV32nexpo.v:493$321_Y [58], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$2527 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$3313 (A=$techmap\RV32I.$add$Procesador_V2.0b/RV32nexpo.v:493$321_Y [60], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$2529 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$3315 (A=$techmap\RV32I.$add$Procesador_V2.0b/RV32nexpo.v:493$321_Y [62], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$2531 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$3190 (A=$techmap\RV32I.$add$Procesador_V2.0b/RV32nexpo.v:492$319_Y [1], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$2534 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$3192 (A=$techmap\RV32I.$add$Procesador_V2.0b/RV32nexpo.v:492$319_Y [3], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$2536 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$3194 (A=$techmap\RV32I.$add$Procesador_V2.0b/RV32nexpo.v:492$319_Y [5], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$2538 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$3196 (A=$techmap\RV32I.$add$Procesador_V2.0b/RV32nexpo.v:492$319_Y [7], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$2540 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$3198 (A=$techmap\RV32I.$add$Procesador_V2.0b/RV32nexpo.v:492$319_Y [9], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$2542 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$3255 (A=$techmap\RV32I.$add$Procesador_V2.0b/RV32nexpo.v:493$321_Y [2], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$2471 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$3280 (A=$techmap\RV32I.$add$Procesador_V2.0b/RV32nexpo.v:493$321_Y [27], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$2496 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$3204 (A=$techmap\RV32I.$add$Procesador_V2.0b/RV32nexpo.v:492$319_Y [15], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$2548 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$3101 (A=\RV32I.M_CSRtoWrite [8], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$2445 (SB_DFFE).
Merging $auto$simplemap.cc:277:simplemap_mux$3100 (A=\RV32I.M_CSRtoWrite [7], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$2444 (SB_DFFE).
Merging $auto$simplemap.cc:277:simplemap_mux$3592 (A=\RV32I.DE_rs1Data [11], B=1'0, S=\RV32I.DE_funct3 [2]) into $auto$simplemap.cc:420:simplemap_dff$2307 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$3591 (A=\RV32I.DE_rs1Data [10], B=1'0, S=\RV32I.DE_funct3 [2]) into $auto$simplemap.cc:420:simplemap_dff$2306 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$2677 (A=\RV32I.F_pc [16], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$2130 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$2015 (A=\DatatoWrite [9], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$2076 (SB_DFFE).
Merging $auto$simplemap.cc:277:simplemap_mux$3212 (A=$techmap\RV32I.$add$Procesador_V2.0b/RV32nexpo.v:492$319_Y [23], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$2556 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$3224 (A=$techmap\RV32I.$add$Procesador_V2.0b/RV32nexpo.v:492$319_Y [35], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$2568 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$3226 (A=$techmap\RV32I.$add$Procesador_V2.0b/RV32nexpo.v:492$319_Y [37], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$2570 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$3590 (A=\RV32I.DE_rs1Data [9], B=1'0, S=\RV32I.DE_funct3 [2]) into $auto$simplemap.cc:420:simplemap_dff$2305 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$3117 (A=\RV32I.M_CSRtoWrite [24], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$2461 (SB_DFFE).
Merging $auto$simplemap.cc:277:simplemap_mux$3268 (A=$techmap\RV32I.$add$Procesador_V2.0b/RV32nexpo.v:493$321_Y [15], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$2484 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$3120 (A=\RV32I.M_CSRtoWrite [27], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$2464 (SB_DFFE).
Merging $auto$simplemap.cc:277:simplemap_mux$4129 (A=$auto$wreduce.cc:460:run$1328 [8], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$4105 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$4130 (A=$auto$wreduce.cc:460:run$1328 [9], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$4106 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$2668 (A=\RV32I.F_pc [7], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$2121 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$3096 (A=\RV32I.M_CSRtoWrite [3], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$2440 (SB_DFFE).
Merging $auto$simplemap.cc:277:simplemap_mux$3097 (A=\RV32I.M_CSRtoWrite [4], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$2441 (SB_DFFE).
Merging $auto$simplemap.cc:277:simplemap_mux$3098 (A=\RV32I.M_CSRtoWrite [5], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$2442 (SB_DFFE).
Merging $auto$simplemap.cc:277:simplemap_mux$3099 (A=\RV32I.M_CSRtoWrite [6], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$2443 (SB_DFFE).
Merging $auto$simplemap.cc:277:simplemap_mux$3307 (A=$techmap\RV32I.$add$Procesador_V2.0b/RV32nexpo.v:493$321_Y [54], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$2523 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$2016 (A=\DatatoWrite [10], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$2077 (SB_DFFE).
Merging $auto$simplemap.cc:277:simplemap_mux$2602 (A=$techmap\RV32I.$procmux$1102_Y [5], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$2151 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$2626 (A=$techmap\RV32I.$procmux$1102_Y [29], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$2175 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$4047 (A=\instr [16], B=1'0, S=\RV32I.FD_nop) into $auto$simplemap.cc:420:simplemap_dff$2202 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$3093 (A=\RV32I.M_CSRtoWrite [0], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$2437 (SB_DFFE).
Merging $auto$simplemap.cc:277:simplemap_mux$3279 (A=$techmap\RV32I.$add$Procesador_V2.0b/RV32nexpo.v:493$321_Y [26], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$2495 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$3278 (A=$techmap\RV32I.$add$Procesador_V2.0b/RV32nexpo.v:493$321_Y [25], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$2494 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$3588 (A=\RV32I.DE_rs1Data [7], B=1'0, S=\RV32I.DE_funct3 [2]) into $auto$simplemap.cc:420:simplemap_dff$2303 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$3269 (A=$techmap\RV32I.$add$Procesador_V2.0b/RV32nexpo.v:493$321_Y [16], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$2485 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$3265 (A=$techmap\RV32I.$add$Procesador_V2.0b/RV32nexpo.v:493$321_Y [12], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$2481 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$3263 (A=$techmap\RV32I.$add$Procesador_V2.0b/RV32nexpo.v:493$321_Y [10], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$2479 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$3270 (A=$techmap\RV32I.$add$Procesador_V2.0b/RV32nexpo.v:493$321_Y [17], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$2486 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$3267 (A=$techmap\RV32I.$add$Procesador_V2.0b/RV32nexpo.v:493$321_Y [14], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$2483 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$3605 (A=\RV32I.DE_rs1Data [24], B=1'0, S=\RV32I.DE_funct3 [2]) into $auto$simplemap.cc:420:simplemap_dff$2320 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$2664 (A=\RV32I.F_pc [3], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$2117 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$3274 (A=$techmap\RV32I.$add$Procesador_V2.0b/RV32nexpo.v:493$321_Y [21], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$2490 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$3273 (A=$techmap\RV32I.$add$Procesador_V2.0b/RV32nexpo.v:493$321_Y [20], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$2489 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$5856 (A=$auto$simplemap.cc:309:simplemap_lut$10227, B=1'0, S=\UART_RX.bclk.reset) into $auto$simplemap.cc:420:simplemap_dff$5849 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$4049 (A=\instr [18], B=1'0, S=\RV32I.FD_nop) into $auto$simplemap.cc:420:simplemap_dff$2204 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$4048 (A=\instr [17], B=1'0, S=\RV32I.FD_nop) into $auto$simplemap.cc:420:simplemap_dff$2203 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$2628 (A=$techmap\RV32I.$procmux$1102_Y [31], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$2177 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$2627 (A=$techmap\RV32I.$procmux$1102_Y [30], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$2176 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$2604 (A=$techmap\RV32I.$procmux$1102_Y [7], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$2153 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$2603 (A=$techmap\RV32I.$procmux$1102_Y [6], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$2152 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$3296 (A=$techmap\RV32I.$add$Procesador_V2.0b/RV32nexpo.v:493$321_Y [43], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$2512 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$3121 (A=\RV32I.M_CSRtoWrite [28], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$2465 (SB_DFFE).
Merging $auto$simplemap.cc:277:simplemap_mux$3300 (A=$techmap\RV32I.$add$Procesador_V2.0b/RV32nexpo.v:493$321_Y [47], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$2516 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$3119 (A=\RV32I.M_CSRtoWrite [26], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$2463 (SB_DFFE).
Merging $auto$simplemap.cc:277:simplemap_mux$2018 (A=\DatatoWrite [12], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$2079 (SB_DFFE).
Merging $auto$simplemap.cc:277:simplemap_mux$2017 (A=\DatatoWrite [11], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$2078 (SB_DFFE).
Merging $auto$simplemap.cc:277:simplemap_mux$3298 (A=$techmap\RV32I.$add$Procesador_V2.0b/RV32nexpo.v:493$321_Y [45], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$2514 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$3306 (A=$techmap\RV32I.$add$Procesador_V2.0b/RV32nexpo.v:493$321_Y [53], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$2522 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$3116 (A=\RV32I.M_CSRtoWrite [23], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$2460 (SB_DFFE).
Merging $auto$simplemap.cc:277:simplemap_mux$3308 (A=$techmap\RV32I.$add$Procesador_V2.0b/RV32nexpo.v:493$321_Y [55], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$2524 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$3310 (A=$techmap\RV32I.$add$Procesador_V2.0b/RV32nexpo.v:493$321_Y [57], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$2526 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$3114 (A=\RV32I.M_CSRtoWrite [21], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$2458 (SB_DFFE).
Merging $auto$simplemap.cc:277:simplemap_mux$3312 (A=$techmap\RV32I.$add$Procesador_V2.0b/RV32nexpo.v:493$321_Y [59], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$2528 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$3113 (A=\RV32I.M_CSRtoWrite [20], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$2457 (SB_DFFE).
Merging $auto$simplemap.cc:277:simplemap_mux$3314 (A=$techmap\RV32I.$add$Procesador_V2.0b/RV32nexpo.v:493$321_Y [61], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$2530 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$3112 (A=\RV32I.M_CSRtoWrite [19], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$2456 (SB_DFFE).
Merging $auto$simplemap.cc:277:simplemap_mux$3316 (A=$techmap\RV32I.$add$Procesador_V2.0b/RV32nexpo.v:493$321_Y [63], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$2532 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$3111 (A=\RV32I.M_CSRtoWrite [18], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$2455 (SB_DFFE).
Merging $auto$simplemap.cc:277:simplemap_mux$3253 (A=$techmap\RV32I.$add$Procesador_V2.0b/RV32nexpo.v:493$321_Y [0], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$2469 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$3191 (A=$techmap\RV32I.$add$Procesador_V2.0b/RV32nexpo.v:492$319_Y [2], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$2535 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$3110 (A=\RV32I.M_CSRtoWrite [17], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$2454 (SB_DFFE).
Merging $auto$simplemap.cc:277:simplemap_mux$3193 (A=$techmap\RV32I.$add$Procesador_V2.0b/RV32nexpo.v:492$319_Y [4], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$2537 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$3109 (A=\RV32I.M_CSRtoWrite [16], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$2453 (SB_DFFE).
Merging $auto$simplemap.cc:277:simplemap_mux$3195 (A=$techmap\RV32I.$add$Procesador_V2.0b/RV32nexpo.v:492$319_Y [6], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$2539 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$3108 (A=\RV32I.M_CSRtoWrite [15], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$2452 (SB_DFFE).
Merging $auto$simplemap.cc:277:simplemap_mux$3197 (A=$techmap\RV32I.$add$Procesador_V2.0b/RV32nexpo.v:492$319_Y [8], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$2541 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$3107 (A=\RV32I.M_CSRtoWrite [14], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$2451 (SB_DFFE).
Merging $auto$simplemap.cc:277:simplemap_mux$3199 (A=$techmap\RV32I.$add$Procesador_V2.0b/RV32nexpo.v:492$319_Y [10], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$2543 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$3106 (A=\RV32I.M_CSRtoWrite [13], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$2450 (SB_DFFE).
Merging $auto$simplemap.cc:277:simplemap_mux$3201 (A=$techmap\RV32I.$add$Procesador_V2.0b/RV32nexpo.v:492$319_Y [12], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$2545 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$3105 (A=\RV32I.M_CSRtoWrite [12], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$2449 (SB_DFFE).
Merging $auto$simplemap.cc:277:simplemap_mux$3203 (A=$techmap\RV32I.$add$Procesador_V2.0b/RV32nexpo.v:492$319_Y [14], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$2547 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$3104 (A=\RV32I.M_CSRtoWrite [11], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$2448 (SB_DFFE).
Merging $auto$simplemap.cc:277:simplemap_mux$3205 (A=$techmap\RV32I.$add$Procesador_V2.0b/RV32nexpo.v:492$319_Y [16], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$2549 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$3103 (A=\RV32I.M_CSRtoWrite [10], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$2447 (SB_DFFE).
Merging $auto$simplemap.cc:277:simplemap_mux$3207 (A=$techmap\RV32I.$add$Procesador_V2.0b/RV32nexpo.v:492$319_Y [18], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$2551 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$3102 (A=\RV32I.M_CSRtoWrite [9], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$2446 (SB_DFFE).
Merging $auto$simplemap.cc:277:simplemap_mux$3208 (A=$techmap\RV32I.$add$Procesador_V2.0b/RV32nexpo.v:492$319_Y [19], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$2552 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$3209 (A=$techmap\RV32I.$add$Procesador_V2.0b/RV32nexpo.v:492$319_Y [20], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$2553 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$3210 (A=$techmap\RV32I.$add$Procesador_V2.0b/RV32nexpo.v:492$319_Y [21], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$2554 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$2702 (A=1'0, B=$techmap\RV32I.$procmux$1090_Y [8], S=$auto$simplemap.cc:256:simplemap_eqne$3947) into $auto$simplemap.cc:420:simplemap_dff$2214 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$3213 (A=$techmap\RV32I.$add$Procesador_V2.0b/RV32nexpo.v:492$319_Y [24], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$2557 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$2598 (A=\RV32I.E_JumpAddr [1], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$2147 (SB_DFFE).
Merging $auto$simplemap.cc:277:simplemap_mux$3272 (A=$techmap\RV32I.$add$Procesador_V2.0b/RV32nexpo.v:493$321_Y [19], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$2488 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$3221 (A=$techmap\RV32I.$add$Procesador_V2.0b/RV32nexpo.v:492$319_Y [32], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$2565 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$2670 (A=\RV32I.F_pc [9], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$2123 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$3251 (A=$techmap\RV32I.$add$Procesador_V2.0b/RV32nexpo.v:492$319_Y [62], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$2595 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$3250 (A=$techmap\RV32I.$add$Procesador_V2.0b/RV32nexpo.v:492$319_Y [61], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$2594 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$3247 (A=$techmap\RV32I.$add$Procesador_V2.0b/RV32nexpo.v:492$319_Y [58], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$2591 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$3244 (A=$techmap\RV32I.$add$Procesador_V2.0b/RV32nexpo.v:492$319_Y [55], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$2588 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$3241 (A=$techmap\RV32I.$add$Procesador_V2.0b/RV32nexpo.v:492$319_Y [52], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$2585 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$3238 (A=$techmap\RV32I.$add$Procesador_V2.0b/RV32nexpo.v:492$319_Y [49], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$2582 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$3235 (A=$techmap\RV32I.$add$Procesador_V2.0b/RV32nexpo.v:492$319_Y [46], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$2579 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$3228 (A=$techmap\RV32I.$add$Procesador_V2.0b/RV32nexpo.v:492$319_Y [39], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$2572 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$3229 (A=$techmap\RV32I.$add$Procesador_V2.0b/RV32nexpo.v:492$319_Y [40], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$2573 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$3234 (A=$techmap\RV32I.$add$Procesador_V2.0b/RV32nexpo.v:492$319_Y [45], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$2578 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$3230 (A=$techmap\RV32I.$add$Procesador_V2.0b/RV32nexpo.v:492$319_Y [41], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$2574 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$3227 (A=$techmap\RV32I.$add$Procesador_V2.0b/RV32nexpo.v:492$319_Y [38], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$2571 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$3237 (A=$techmap\RV32I.$add$Procesador_V2.0b/RV32nexpo.v:492$319_Y [48], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$2581 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$3233 (A=$techmap\RV32I.$add$Procesador_V2.0b/RV32nexpo.v:492$319_Y [44], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$2577 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$3240 (A=$techmap\RV32I.$add$Procesador_V2.0b/RV32nexpo.v:492$319_Y [51], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$2584 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$3236 (A=$techmap\RV32I.$add$Procesador_V2.0b/RV32nexpo.v:492$319_Y [47], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$2580 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$3225 (A=$techmap\RV32I.$add$Procesador_V2.0b/RV32nexpo.v:492$319_Y [36], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$2569 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$3243 (A=$techmap\RV32I.$add$Procesador_V2.0b/RV32nexpo.v:492$319_Y [54], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$2587 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$3239 (A=$techmap\RV32I.$add$Procesador_V2.0b/RV32nexpo.v:492$319_Y [50], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$2583 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$3246 (A=$techmap\RV32I.$add$Procesador_V2.0b/RV32nexpo.v:492$319_Y [57], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$2590 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$3242 (A=$techmap\RV32I.$add$Procesador_V2.0b/RV32nexpo.v:492$319_Y [53], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$2586 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$3223 (A=$techmap\RV32I.$add$Procesador_V2.0b/RV32nexpo.v:492$319_Y [34], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$2567 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$3249 (A=$techmap\RV32I.$add$Procesador_V2.0b/RV32nexpo.v:492$319_Y [60], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$2593 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$3245 (A=$techmap\RV32I.$add$Procesador_V2.0b/RV32nexpo.v:492$319_Y [56], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$2589 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$3222 (A=$techmap\RV32I.$add$Procesador_V2.0b/RV32nexpo.v:492$319_Y [33], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$2566 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$3252 (A=$techmap\RV32I.$add$Procesador_V2.0b/RV32nexpo.v:492$319_Y [63], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$2596 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$3248 (A=$techmap\RV32I.$add$Procesador_V2.0b/RV32nexpo.v:492$319_Y [59], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$2592 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$3189 (A=$auto$simplemap.cc:309:simplemap_lut$10132, B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$2533 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$4122 (A=$auto$wreduce.cc:460:run$1328 [1], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$4098 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$4123 (A=$auto$wreduce.cc:460:run$1328 [2], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$4099 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$4124 (A=$auto$wreduce.cc:460:run$1328 [3], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$4100 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$4125 (A=$auto$wreduce.cc:460:run$1328 [4], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$4101 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$4126 (A=$auto$wreduce.cc:460:run$1328 [5], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$4102 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$4127 (A=$auto$wreduce.cc:460:run$1328 [6], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$4103 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$4128 (A=$auto$wreduce.cc:460:run$1328 [7], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$4104 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$4131 (A=$auto$wreduce.cc:460:run$1328 [10], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$4107 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$4132 (A=$auto$wreduce.cc:460:run$1328 [11], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$4108 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$4147 (A=1'1, B=$techmap$techmap\LEDS8_4.$procmux$1117.$ternary$/home/jfdava/.apio/packages/toolchain-yosys/bin/../share/yosys/techmap.v:445$4175_Y [1], S=$techmap\LEDS8_4.$and$ControladorMatrizLed.v:42$6_Y) into $auto$simplemap.cc:420:simplemap_dff$4110 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$1946 (A=\DatatoWrite [28], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$2095 (SB_DFFE).
Merging $auto$simplemap.cc:277:simplemap_mux$4148 (A=1'1, B=$techmap$techmap\LEDS8_4.$procmux$1117.$ternary$/home/jfdava/.apio/packages/toolchain-yosys/bin/../share/yosys/techmap.v:445$4175_Y [2], S=$techmap\LEDS8_4.$and$ControladorMatrizLed.v:42$6_Y) into $auto$simplemap.cc:420:simplemap_dff$4111 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$4149 (A=1'1, B=$techmap$techmap\LEDS8_4.$procmux$1117.$ternary$/home/jfdava/.apio/packages/toolchain-yosys/bin/../share/yosys/techmap.v:445$4175_Y [3], S=$techmap\LEDS8_4.$and$ControladorMatrizLed.v:42$6_Y) into $auto$simplemap.cc:420:simplemap_dff$4112 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$4150 (A=1'1, B=$techmap$techmap\LEDS8_4.$procmux$1117.$ternary$/home/jfdava/.apio/packages/toolchain-yosys/bin/../share/yosys/techmap.v:445$4175_Y [4], S=$techmap\LEDS8_4.$and$ControladorMatrizLed.v:42$6_Y) into $auto$simplemap.cc:420:simplemap_dff$4113 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$4151 (A=1'1, B=$techmap$techmap\LEDS8_4.$procmux$1117.$ternary$/home/jfdava/.apio/packages/toolchain-yosys/bin/../share/yosys/techmap.v:445$4175_Y [5], S=$techmap\LEDS8_4.$and$ControladorMatrizLed.v:42$6_Y) into $auto$simplemap.cc:420:simplemap_dff$4114 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$4152 (A=1'1, B=$techmap$techmap\LEDS8_4.$procmux$1117.$ternary$/home/jfdava/.apio/packages/toolchain-yosys/bin/../share/yosys/techmap.v:445$4175_Y [6], S=$techmap\LEDS8_4.$and$ControladorMatrizLed.v:42$6_Y) into $auto$simplemap.cc:420:simplemap_dff$4115 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$4153 (A=1'1, B=$techmap$techmap\LEDS8_4.$procmux$1117.$ternary$/home/jfdava/.apio/packages/toolchain-yosys/bin/../share/yosys/techmap.v:445$4175_Y [7], S=$techmap\LEDS8_4.$and$ControladorMatrizLed.v:42$6_Y) into $auto$simplemap.cc:420:simplemap_dff$4116 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$4146 (A=1'1, B=$techmap$techmap\LEDS8_4.$procmux$1117.$ternary$/home/jfdava/.apio/packages/toolchain-yosys/bin/../share/yosys/techmap.v:445$4175_Y [0], S=$techmap\LEDS8_4.$and$ControladorMatrizLed.v:42$6_Y) into $auto$simplemap.cc:420:simplemap_dff$4109 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$4134 (A=1'1, B=$techmap$techmap\LEDS8_4.$procmux$1125.$ternary$/home/jfdava/.apio/packages/toolchain-yosys/bin/../share/yosys/techmap.v:445$4138_Y [1], S=$techmap\LEDS8_4.$and$ControladorMatrizLed.v:42$6_Y) into $auto$simplemap.cc:420:simplemap_dff$4118 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$4135 (A=1'1, B=$techmap$techmap\LEDS8_4.$procmux$1125.$ternary$/home/jfdava/.apio/packages/toolchain-yosys/bin/../share/yosys/techmap.v:445$4138_Y [2], S=$techmap\LEDS8_4.$and$ControladorMatrizLed.v:42$6_Y) into $auto$simplemap.cc:420:simplemap_dff$4119 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$4136 (A=1'1, B=$techmap$techmap\LEDS8_4.$procmux$1125.$ternary$/home/jfdava/.apio/packages/toolchain-yosys/bin/../share/yosys/techmap.v:445$4138_Y [3], S=$techmap\LEDS8_4.$and$ControladorMatrizLed.v:42$6_Y) into $auto$simplemap.cc:420:simplemap_dff$4120 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$1971 (A=\RV32I.EM_rs2Data [5], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$2072 (SB_DFFE).
Merging $auto$simplemap.cc:277:simplemap_mux$4275 (A=1'0, B=$techmap\UART_TX.$add$uart.v:98$405_Y [1], S=$auto$simplemap.cc:256:simplemap_eqne$4288) into $auto$simplemap.cc:420:simplemap_dff$4250 (SB_DFFE).
Merging $auto$simplemap.cc:277:simplemap_mux$4276 (A=1'0, B=$techmap\UART_TX.$add$uart.v:98$405_Y [2], S=$auto$simplemap.cc:256:simplemap_eqne$4288) into $auto$simplemap.cc:420:simplemap_dff$4251 (SB_DFFE).
Merging $auto$simplemap.cc:277:simplemap_mux$4274 (A=1'0, B=$auto$simplemap.cc:309:simplemap_lut$10246, S=$auto$simplemap.cc:256:simplemap_eqne$4288) into $auto$simplemap.cc:420:simplemap_dff$4249 (SB_DFFE).
Merging $auto$simplemap.cc:277:simplemap_mux$3271 (A=$techmap\RV32I.$add$Procesador_V2.0b/RV32nexpo.v:493$321_Y [18], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$2487 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$3275 (A=$techmap\RV32I.$add$Procesador_V2.0b/RV32nexpo.v:493$321_Y [22], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$2491 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$4277 (A=1'0, B=$techmap\UART_TX.$add$uart.v:98$405_Y [3], S=$auto$simplemap.cc:256:simplemap_eqne$4288) into $auto$simplemap.cc:420:simplemap_dff$4252 (SB_DFFE).
Merging $auto$simplemap.cc:277:simplemap_mux$4335 (A=1'0, B=$auto$wreduce.cc:460:run$1350 [1], S=\UART_RX.state) into $auto$simplemap.cc:420:simplemap_dff$4304 (SB_DFFE).
Merging $auto$simplemap.cc:277:simplemap_mux$4336 (A=1'0, B=$auto$wreduce.cc:460:run$1350 [2], S=\UART_RX.state) into $auto$simplemap.cc:420:simplemap_dff$4305 (SB_DFFE).
Merging $auto$simplemap.cc:277:simplemap_mux$4337 (A=1'0, B=$auto$wreduce.cc:460:run$1350 [3], S=\UART_RX.state) into $auto$simplemap.cc:420:simplemap_dff$4306 (SB_DFFE).
Merging $auto$simplemap.cc:277:simplemap_mux$4338 (A=1'0, B=$auto$wreduce.cc:460:run$1350 [4], S=\UART_RX.state) into $auto$simplemap.cc:420:simplemap_dff$4307 (SB_DFFE).
Merging $auto$simplemap.cc:277:simplemap_mux$4339 (A=1'0, B=$auto$wreduce.cc:460:run$1350 [5], S=\UART_RX.state) into $auto$simplemap.cc:420:simplemap_dff$4308 (SB_DFFE).
Merging $auto$simplemap.cc:277:simplemap_mux$4334 (A=1'0, B=$auto$simplemap.cc:309:simplemap_lut$10189, S=\UART_RX.state) into $auto$simplemap.cc:420:simplemap_dff$4303 (SB_DFFE).
Merging $auto$simplemap.cc:277:simplemap_mux$4340 (A=1'0, B=$auto$wreduce.cc:460:run$1350 [6], S=\UART_RX.state) into $auto$simplemap.cc:420:simplemap_dff$4309 (SB_DFFE).
Merging $auto$simplemap.cc:277:simplemap_mux$4358 (A=$auto$wreduce.cc:460:run$1351 [1], B=1'0, S=$techmap\UART_RX.$or$uart.v:203$428_Y) into $auto$simplemap.cc:420:simplemap_dff$4320 (SB_DFFE).
Merging $auto$simplemap.cc:277:simplemap_mux$4359 (A=$auto$wreduce.cc:460:run$1351 [2], B=1'0, S=$techmap\UART_RX.$or$uart.v:203$428_Y) into $auto$simplemap.cc:420:simplemap_dff$4321 (SB_DFFE).
Merging $auto$simplemap.cc:277:simplemap_mux$4360 (A=$auto$wreduce.cc:460:run$1351 [3], B=1'0, S=$techmap\UART_RX.$or$uart.v:203$428_Y) into $auto$simplemap.cc:420:simplemap_dff$4322 (SB_DFFE).
Merging $auto$simplemap.cc:277:simplemap_mux$4357 (A=$auto$simplemap.cc:309:simplemap_lut$10208, B=1'0, S=$techmap\UART_RX.$or$uart.v:203$428_Y) into $auto$simplemap.cc:420:simplemap_dff$4319 (SB_DFFE).
Merging $auto$simplemap.cc:277:simplemap_mux$4361 (A=$auto$wreduce.cc:460:run$1351 [4], B=1'0, S=$techmap\UART_RX.$or$uart.v:203$428_Y) into $auto$simplemap.cc:420:simplemap_dff$4323 (SB_DFFE).
Merging $auto$simplemap.cc:277:simplemap_mux$5815 (A=$auto$simplemap.cc:309:simplemap_lut$10151, B=1'0, S=\UART_TX.bclk.reset) into $auto$simplemap.cc:420:simplemap_dff$5808 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$5816 (A=$auto$wreduce.cc:460:run$1353 [1], B=1'0, S=\UART_TX.bclk.reset) into $auto$simplemap.cc:420:simplemap_dff$5809 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$5817 (A=$auto$wreduce.cc:460:run$1353 [2], B=1'0, S=\UART_TX.bclk.reset) into $auto$simplemap.cc:420:simplemap_dff$5810 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$5819 (A=$auto$wreduce.cc:460:run$1353 [4], B=1'0, S=\UART_TX.bclk.reset) into $auto$simplemap.cc:420:simplemap_dff$5812 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$5820 (A=$auto$wreduce.cc:460:run$1353 [5], B=1'0, S=\UART_TX.bclk.reset) into $auto$simplemap.cc:420:simplemap_dff$5813 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$5821 (A=$auto$wreduce.cc:460:run$1353 [6], B=1'0, S=\UART_TX.bclk.reset) into $auto$simplemap.cc:420:simplemap_dff$5814 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$5857 (A=$auto$wreduce.cc:460:run$1352 [1], B=1'0, S=\UART_RX.bclk.reset) into $auto$simplemap.cc:420:simplemap_dff$5850 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$5858 (A=$auto$wreduce.cc:460:run$1352 [2], B=1'0, S=\UART_RX.bclk.reset) into $auto$simplemap.cc:420:simplemap_dff$5851 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$5859 (A=$auto$wreduce.cc:460:run$1352 [3], B=1'0, S=\UART_RX.bclk.reset) into $auto$simplemap.cc:420:simplemap_dff$5852 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$5860 (A=$auto$wreduce.cc:460:run$1352 [4], B=1'0, S=\UART_RX.bclk.reset) into $auto$simplemap.cc:420:simplemap_dff$5853 (SB_DFF).
Merging $auto$simplemap.cc:277:simplemap_mux$5861 (A=$auto$wreduce.cc:460:run$1352 [5], B=1'0, S=\UART_RX.bclk.reset) into $auto$simplemap.cc:420:simplemap_dff$5854 (SB_DFF).

4.40. Executing ICE40_OPT pass (performing simple optimizations).

4.40.1. Running ICE40 specific optimizations.

4.40.2. Executing OPT_EXPR pass (perform const folding).
Optimizing module SOCnexpo.

4.40.3. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\SOCnexpo'.
Removed a total of 452 cells.

4.40.4. Executing OPT_RMDFF pass (remove dff with constant values).

4.40.5. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \SOCnexpo..
Removed 358 unused cells and 2759 unused wires.

4.40.6. Rerunning OPT passes. (Removed registers in this run.)

4.40.7. Running ICE40 specific optimizations.

4.40.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module SOCnexpo.

4.40.9. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\SOCnexpo'.
Removed a total of 0 cells.

4.40.10. Executing OPT_RMDFF pass (remove dff with constant values).

4.40.11. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \SOCnexpo..

4.40.12. Rerunning OPT passes. (Removed registers in this run.)

4.40.13. Running ICE40 specific optimizations.

4.40.14. Executing OPT_EXPR pass (perform const folding).
Optimizing module SOCnexpo.

4.40.15. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\SOCnexpo'.
Removed a total of 0 cells.

4.40.16. Executing OPT_RMDFF pass (remove dff with constant values).

4.40.17. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \SOCnexpo..

4.40.18. Finished OPT passes. (There is nothing left to do.)

4.41. Executing TECHMAP pass (map to technology primitives).

4.41.1. Executing Verilog-2005 frontend: /home/jfdava/.apio/packages/toolchain-yosys/bin/../share/yosys/ice40/latches_map.v
Parsing Verilog input from `/home/jfdava/.apio/packages/toolchain-yosys/bin/../share/yosys/ice40/latches_map.v' to AST representation.
Generating RTLIL representation for module `\$_DLATCH_N_'.
Generating RTLIL representation for module `\$_DLATCH_P_'.
Successfully finished Verilog frontend.

4.41.2. Continuing TECHMAP pass.
No more expansions possible.

4.42. Executing ABC pass (technology mapping using ABC).

4.42.1. Extracting gate netlist of module `\SOCnexpo' to `<abc-temp-dir>/input.blif'..
Extracted 2386 gates and 3182 wires to a netlist network with 794 inputs and 423 outputs.

4.42.1.1. Executing ABC.
Running ABC command: <yosys-exe-dir>/yosys-abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC:
ABC: + read_blif <abc-temp-dir>/input.blif
ABC: + read_lut <abc-temp-dir>/lutdefs.txt
ABC: + strash
ABC: + ifraig
ABC: + scorr
ABC: Warning: The network is combinational (run "fraig" or "fraig_sweep").
ABC: + dc2
ABC: + dretime
ABC: + retime
ABC: + strash
ABC: + dch -f
ABC: + if
ABC: + mfs2
ABC: + lutpack -S 1
ABC: + dress
ABC: Total number of equiv classes                =     675.
ABC: Participating nodes from both networks       =    1508.
ABC: Participating nodes from the first network   =     708. (  58.85 % of nodes)
ABC: Participating nodes from the second network  =     800. (  66.50 % of nodes)
ABC: Node pairs (any polarity)                    =     708. (  58.85 % of names can be moved)
ABC: Node pairs (same polarity)                   =     516. (  42.89 % of names can be moved)
ABC: Total runtime =     0.48 sec
ABC: + write_blif <abc-temp-dir>/output.blif

4.42.1.2. Re-integrating ABC results.
ABC RESULTS:              $lut cells:     1202
ABC RESULTS:        internal signals:     1965
ABC RESULTS:           input signals:      794
ABC RESULTS:          output signals:      423
Removing temp directory.

4.43. Executing ICE40_WRAPCARRY pass (wrap carries).

4.44. Executing TECHMAP pass (map to technology primitives).

4.44.1. Executing Verilog-2005 frontend: /home/jfdava/.apio/packages/toolchain-yosys/bin/../share/yosys/ice40/cells_map.v
Parsing Verilog input from `/home/jfdava/.apio/packages/toolchain-yosys/bin/../share/yosys/ice40/cells_map.v' to AST representation.
Generating RTLIL representation for module `\$_DFF_N_'.
Generating RTLIL representation for module `\$_DFF_P_'.
Generating RTLIL representation for module `\$_DFFE_NN_'.
Generating RTLIL representation for module `\$_DFFE_PN_'.
Generating RTLIL representation for module `\$_DFFE_NP_'.
Generating RTLIL representation for module `\$_DFFE_PP_'.
Generating RTLIL representation for module `\$_DFF_NN0_'.
Generating RTLIL representation for module `\$_DFF_NN1_'.
Generating RTLIL representation for module `\$_DFF_PN0_'.
Generating RTLIL representation for module `\$_DFF_PN1_'.
Generating RTLIL representation for module `\$_DFF_NP0_'.
Generating RTLIL representation for module `\$_DFF_NP1_'.
Generating RTLIL representation for module `\$_DFF_PP0_'.
Generating RTLIL representation for module `\$_DFF_PP1_'.
Generating RTLIL representation for module `\$__DFFE_NN0'.
Generating RTLIL representation for module `\$__DFFE_NN1'.
Generating RTLIL representation for module `\$__DFFE_PN0'.
Generating RTLIL representation for module `\$__DFFE_PN1'.
Generating RTLIL representation for module `\$__DFFE_NP0'.
Generating RTLIL representation for module `\$__DFFE_NP1'.
Generating RTLIL representation for module `\$__DFFE_PP0'.
Generating RTLIL representation for module `\$__DFFE_PP1'.
Successfully finished Verilog frontend.

4.44.2. Continuing TECHMAP pass.
No more expansions possible.
Removed 27 unused cells and 1495 unused wires.

4.45. Executing OPT_LUT pass (optimize LUTs).
Discovering LUTs.
Number of LUTs:     1496
1-LUT               63
2-LUT              113
3-LUT              661
4-LUT              659
with \SB_CARRY     283

Eliminating LUTs.
Number of LUTs:     1496
1-LUT               63
2-LUT              113
3-LUT              661
4-LUT              659
with \SB_CARRY     283

Combining LUTs.
Number of LUTs:     1473
1-LUT               62
2-LUT               91
3-LUT              639
4-LUT              681
with \SB_CARRY     283

Eliminated 0 LUTs.
Combined 23 LUTs.

4.46. Executing TECHMAP pass (map to technology primitives).

4.46.1. Executing Verilog-2005 frontend: /home/jfdava/.apio/packages/toolchain-yosys/bin/../share/yosys/ice40/cells_map.v
Parsing Verilog input from `/home/jfdava/.apio/packages/toolchain-yosys/bin/../share/yosys/ice40/cells_map.v' to AST representation.
Generating RTLIL representation for module `\$_DFF_N_'.
Generating RTLIL representation for module `\$_DFF_P_'.
Generating RTLIL representation for module `\$_DFFE_NN_'.
Generating RTLIL representation for module `\$_DFFE_PN_'.
Generating RTLIL representation for module `\$_DFFE_NP_'.
Generating RTLIL representation for module `\$_DFFE_PP_'.
Generating RTLIL representation for module `\$_DFF_NN0_'.
Generating RTLIL representation for module `\$_DFF_NN1_'.
Generating RTLIL representation for module `\$_DFF_PN0_'.
Generating RTLIL representation for module `\$_DFF_PN1_'.
Generating RTLIL representation for module `\$_DFF_NP0_'.
Generating RTLIL representation for module `\$_DFF_NP1_'.
Generating RTLIL representation for module `\$_DFF_PP0_'.
Generating RTLIL representation for module `\$_DFF_PP1_'.
Generating RTLIL representation for module `\$__DFFE_NN0'.
Generating RTLIL representation for module `\$__DFFE_NN1'.
Generating RTLIL representation for module `\$__DFFE_PN0'.
Generating RTLIL representation for module `\$__DFFE_PN1'.
Generating RTLIL representation for module `\$__DFFE_NP0'.
Generating RTLIL representation for module `\$__DFFE_NP1'.
Generating RTLIL representation for module `\$__DFFE_PP0'.
Generating RTLIL representation for module `\$__DFFE_PP1'.
Generating RTLIL representation for module `\$lut'.
Successfully finished Verilog frontend.

4.46.2. Continuing TECHMAP pass.
Using template $paramod\$lut\WIDTH=3\LUT=8'00110101 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'11001010 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0011101000000011 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0110100110010110 for cells of type $lut.
Using template $paramod\$lut\WIDTH=1\LUT=2'01 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'00000001 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1100101000000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'00000111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=2\LUT=4'1000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=2\LUT=4'0100 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'01000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'01010011 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0011010100000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'10101100 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000010100000011 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000110000001010 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0001000100001111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0001000111110000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000001100000101 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'00010000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111010000000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0011010101010011 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'11100000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111000000010001 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'11010000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'00001110 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000001100001010 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000110000000101 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000110100000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1100110011000101 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1010001100110011 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0011111101010000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111001100000101 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111000100000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0101001100000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000000000011111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0001111100000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000000000000001 for cells of type $lut.
Using template $paramod\$lut\WIDTH=2\LUT=4'0001 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1000000000000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0100000000000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000000100000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000011101110111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1001011001101001 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'10000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0001000000000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'01110000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0111000000000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'00111010 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000000111111111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000000011110100 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1110110000001110 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000000010111111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'11000101 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1110111011110000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1010110000000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000000000000111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1110111100000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'01110001 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1100010111111100 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1101000000000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'10100011 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000000010010110 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111000011101110 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0011010111111111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000111110111011 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0100111100000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000011100000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=2\LUT=4'1011 for cells of type $lut.
Using template $paramod\$lut\WIDTH=2\LUT=4'0111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1100010111001100 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0110011011110000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0011101011111111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0111000001110111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1000100011110000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0100111111110000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111111101000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1011101111110000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111000001000100 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000000010001111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1000111100000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1101111111000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000000000001011 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'00001011 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000111111101110 for cells of type $lut.
Using template $paramod\$lut\WIDTH=2\LUT=4'1110 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'01001111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'10001111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'11101111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000011111111111 for cells of type $lut.
No more expansions possible.
Removed 0 unused cells and 2946 unused wires.

4.47. Executing AUTONAME pass.
Renamed 39295 objects in module SOCnexpo (69 iterations).

4.48. Executing HIERARCHY pass (managing design hierarchy).

4.48.1. Analyzing design hierarchy..
Top module:  \SOCnexpo

4.48.2. Analyzing design hierarchy..
Top module:  \SOCnexpo
Removed 0 unused modules.

4.49. Printing statistics.

=== SOCnexpo ===

Number of wires:               1293
Number of wire bits:           4344
Number of public wires:        1293
Number of public wire bits:    4344
Number of memories:               0
Number of memory bits:            0
Number of processes:              0
Number of cells:               2422
SB_CARRY                      298
SB_DFF                        214
SB_DFFE                        30
SB_DFFESR                      82
SB_DFFESS                       1
SB_DFFSR                      275
SB_DFFSS                       13
SB_LUT4                      1473
SB_RAM40_4K                    32
SB_RAM40_4KNW                   4

4.50. Executing CHECK pass (checking for obvious problems).
checking module SOCnexpo..
found and reported 0 problems.

4.51. Executing JSON backend.

Warnings: 4 unique messages, 4 total
End of script. Logfile hash: 298022c59a
CPU: user 19.34s system 0.64s, MEM: 414.05 MB total, 410.88 MB resident
Yosys 0.9+932 (git sha1 UNKNOWN, i686-linux-gnu-g++ 7.3.0-16ubuntu3 -O3 -DNDEBUG)
Time spent: 36% 7x techmap (7 sec), 14% 22x opt_expr (2 sec), ...
nextpnr-ice40 --hx8k --package cb132 --json hardware.json --asc hardware.asc --pcf icefun.pcf
Info: Importing module SOCnexpo
Info: Rule checker, verifying imported design
Info: Checksum: 0x79fa4545

Info: constrained 'led[0]' to bel 'X22/Y33/io1'
Info: constrained 'led[1]' to bel 'X25/Y33/io0'
Info: constrained 'led[2]' to bel 'X13/Y33/io1'
Info: constrained 'led[3]' to bel 'X11/Y33/io0'
Info: constrained 'led[4]' to bel 'X17/Y33/io0'
Info: constrained 'led[5]' to bel 'X14/Y33/io1'
Info: constrained 'led[6]' to bel 'X5/Y33/io0'
Info: constrained 'led[7]' to bel 'X4/Y33/io0'
Info: constrained 'lcol[3]' to bel 'X30/Y33/io1'
Info: constrained 'lcol[2]' to bel 'X27/Y33/io0'
Info: constrained 'lcol[1]' to bel 'X16/Y33/io1'
Info: constrained 'lcol[0]' to bel 'X8/Y33/io1'
Warning: unmatched constraint 'spkp' (on line 13)
Warning: unmatched constraint 'spkm' (on line 14)
Info: constrained 'key[0]' to bel 'X28/Y33/io1'
Info: constrained 'key[1]' to bel 'X11/Y33/io1'
Info: constrained 'key[2]' to bel 'X26/Y33/io0'
Info: constrained 'key[3]' to bel 'X10/Y33/io1'
Info: constrained 'clk12MHz' to bel 'X16/Y0/io1'
Info: constrained 'RXD' to bel 'X0/Y4/io1'
Info: constrained 'TXD' to bel 'X0/Y4/io0'

Info: Packing constants..
Info: Packing IOs..
Info: Packing LUT-FFs..
Info:     1106 LCs used as LUT4 only
Info:      367 LCs used as LUT4 and DFF
Info: Packing non-LUT FFs..
Info:      248 LCs used as DFF only
Info: Packing carries..
Info:       26 LCs used as CARRY only
Info: Packing RAMs..
Info: Placing PLLs..
Info: Packing special functions..
Info: Promoting globals..
Info: promoting clk12MHz$SB_IO_IN (fanout 671)
Info: promoting rst [reset] (fanout 269)
Info: promoting RV32I.DE_funct3[2] [reset] (fanout 27)
Info: promoting RV32I.EM_CSRWrite_SB_LUT4_I2_O [cen] (fanout 32)
Info: promoting $PACKER_GND_NET (fanout 16)
Info: Constraining chains...
Info:       14 LCs used to legalise carry chains.
Info: Checksum: 0x3f95bf3f

Info: Annotating ports with timing budgets for target frequency 12.00 MHz
Info: Checksum: 0x4a30360a

Info: Device utilisation:
Info: 	         ICESTORM_LC:  1763/ 7680    22%
Info: 	        ICESTORM_RAM:    36/   32   112%
Info: 	               SB_IO:    19/  256     7%
Info: 	               SB_GB:     5/    8    62%
Info: 	        ICESTORM_PLL:     0/    2     0%
Info: 	         SB_WARMBOOT:     0/    1     0%

Info: Placed 19 cells based on constraints.
ERROR: Unable to place cell 'RV32I.reg32.WORKREG.0.0.0_RAM', no Bels remaining of type 'ICESTORM_RAM'
2 warnings, 1 error
scons: *** [hardware.asc] Error 255
